
(function(root) {

    var bhIndex = null;
    var rootPath = '';
    var treeHtml = '        <ul>                <li data-name="namespace:" class="opened">                    <div style="padding-left:0px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href=".html">[Global Namespace]</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Aes" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Aes.html">Aes</a>                    </div>                </li>                            <li data-name="class:AesCtr" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="AesCtr.html">AesCtr</a>                    </div>                </li>                            <li data-name="class:CallbackFilterIterator" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="CallbackFilterIterator.html">CallbackFilterIterator</a>                    </div>                </li>                            <li data-name="class:JsonSerializable" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="JsonSerializable.html">JsonSerializable</a>                    </div>                </li>                            <li data-name="class:SessionHandler" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="SessionHandler.html">SessionHandler</a>                    </div>                </li>                            <li data-name="class:SessionHandlerInterface" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="SessionHandlerInterface.html">SessionHandlerInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:" class="opened">                    <div style="padding-left:0px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href=".html">Windwalker</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_Application" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Application.html">Application</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_Application_Helper" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Application/Helper.html">Helper</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Application_Helper_ApplicationHelper" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Application/Helper/ApplicationHelper.html">ApplicationHelper</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Windwalker_Application_AbstractApplication" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Application/AbstractApplication.html">AbstractApplication</a>                    </div>                </li>                            <li data-name="class:Windwalker_Application_AbstractCliApplication" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Application/AbstractCliApplication.html">AbstractCliApplication</a>                    </div>                </li>                            <li data-name="class:Windwalker_Application_AbstractDaemonApplication" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Application/AbstractDaemonApplication.html">AbstractDaemonApplication</a>                    </div>                </li>                            <li data-name="class:Windwalker_Application_AbstractWebApplication" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Application/AbstractWebApplication.html">AbstractWebApplication</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Authentication" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Authentication.html">Authentication</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_Authentication_Method" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Authentication/Method.html">Method</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Authentication_Method_AbstractMethod" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Authentication/Method/AbstractMethod.html">AbstractMethod</a>                    </div>                </li>                            <li data-name="class:Windwalker_Authentication_Method_LocalMethod" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Authentication/Method/LocalMethod.html">LocalMethod</a>                    </div>                </li>                            <li data-name="class:Windwalker_Authentication_Method_MethodInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Authentication/Method/MethodInterface.html">MethodInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Windwalker_Authentication_Authentication" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Authentication/Authentication.html">Authentication</a>                    </div>                </li>                            <li data-name="class:Windwalker_Authentication_AuthenticationInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Authentication/AuthenticationInterface.html">AuthenticationInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Authentication_Credential" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Authentication/Credential.html">Credential</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Authorisation" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Authorisation.html">Authorisation</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Authorisation_Authorisation" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Authorisation/Authorisation.html">Authorisation</a>                    </div>                </li>                            <li data-name="class:Windwalker_Authorisation_AuthorisationInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Authorisation/AuthorisationInterface.html">AuthorisationInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Authorisation_CallbackPolicy" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Authorisation/CallbackPolicy.html">CallbackPolicy</a>                    </div>                </li>                            <li data-name="class:Windwalker_Authorisation_PolicyInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Authorisation/PolicyInterface.html">PolicyInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Authorisation_PolicyProviderInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Authorisation/PolicyProviderInterface.html">PolicyProviderInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Cache" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Cache.html">Cache</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_Cache_Item" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Cache/Item.html">Item</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Cache_Item_CacheItem" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Cache/Item/CacheItem.html">CacheItem</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Cache_Serializer" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Cache/Serializer.html">Serializer</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Cache_Serializer_JsonSerializer" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Cache/Serializer/JsonSerializer.html">JsonSerializer</a>                    </div>                </li>                            <li data-name="class:Windwalker_Cache_Serializer_PhpFileSerializer" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Cache/Serializer/PhpFileSerializer.html">PhpFileSerializer</a>                    </div>                </li>                            <li data-name="class:Windwalker_Cache_Serializer_PhpSerializer" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Cache/Serializer/PhpSerializer.html">PhpSerializer</a>                    </div>                </li>                            <li data-name="class:Windwalker_Cache_Serializer_RawSerializer" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Cache/Serializer/RawSerializer.html">RawSerializer</a>                    </div>                </li>                            <li data-name="class:Windwalker_Cache_Serializer_SerializerInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Cache/Serializer/SerializerInterface.html">SerializerInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Cache_Serializer_StringSerializer" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Cache/Serializer/StringSerializer.html">StringSerializer</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Cache_Storage" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Cache/Storage.html">Storage</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Cache_Storage_AbstractCacheStorage" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Cache/Storage/AbstractCacheStorage.html">AbstractCacheStorage</a>                    </div>                </li>                            <li data-name="class:Windwalker_Cache_Storage_AbstractDriverCacheStorage" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Cache/Storage/AbstractDriverCacheStorage.html">AbstractDriverCacheStorage</a>                    </div>                </li>                            <li data-name="class:Windwalker_Cache_Storage_ArrayStorage" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Cache/Storage/ArrayStorage.html">ArrayStorage</a>                    </div>                </li>                            <li data-name="class:Windwalker_Cache_Storage_CacheStorageInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Cache/Storage/CacheStorageInterface.html">CacheStorageInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Cache_Storage_FileStorage" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Cache/Storage/FileStorage.html">FileStorage</a>                    </div>                </li>                            <li data-name="class:Windwalker_Cache_Storage_MemcachedStorage" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Cache/Storage/MemcachedStorage.html">MemcachedStorage</a>                    </div>                </li>                            <li data-name="class:Windwalker_Cache_Storage_NullStorage" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Cache/Storage/NullStorage.html">NullStorage</a>                    </div>                </li>                            <li data-name="class:Windwalker_Cache_Storage_PhpFileStorage" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Cache/Storage/PhpFileStorage.html">PhpFileStorage</a>                    </div>                </li>                            <li data-name="class:Windwalker_Cache_Storage_RedisStorage" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Cache/Storage/RedisStorage.html">RedisStorage</a>                    </div>                </li>                            <li data-name="class:Windwalker_Cache_Storage_RuntimeArrayStorage" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Cache/Storage/RuntimeArrayStorage.html">RuntimeArrayStorage</a>                    </div>                </li>                            <li data-name="class:Windwalker_Cache_Storage_XcacheStorage" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Cache/Storage/XcacheStorage.html">XcacheStorage</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Windwalker_Cache_Cache" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Cache/Cache.html">Cache</a>                    </div>                </li>                            <li data-name="class:Windwalker_Cache_CacheInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Cache/CacheInterface.html">CacheInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Compare" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Compare.html">Compare</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Compare_Compare" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Compare/Compare.html">Compare</a>                    </div>                </li>                            <li data-name="class:Windwalker_Compare_CompareHelper" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Compare/CompareHelper.html">CompareHelper</a>                    </div>                </li>                            <li data-name="class:Windwalker_Compare_EqCompare" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Compare/EqCompare.html">EqCompare</a>                    </div>                </li>                            <li data-name="class:Windwalker_Compare_GtCompare" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Compare/GtCompare.html">GtCompare</a>                    </div>                </li>                            <li data-name="class:Windwalker_Compare_GteCompare" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Compare/GteCompare.html">GteCompare</a>                    </div>                </li>                            <li data-name="class:Windwalker_Compare_InCompare" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Compare/InCompare.html">InCompare</a>                    </div>                </li>                            <li data-name="class:Windwalker_Compare_LtCompare" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Compare/LtCompare.html">LtCompare</a>                    </div>                </li>                            <li data-name="class:Windwalker_Compare_LteCompare" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Compare/LteCompare.html">LteCompare</a>                    </div>                </li>                            <li data-name="class:Windwalker_Compare_NeqCompare" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Compare/NeqCompare.html">NeqCompare</a>                    </div>                </li>                            <li data-name="class:Windwalker_Compare_NinCompare" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Compare/NinCompare.html">NinCompare</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Console" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Console.html">Console</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_Console_Command" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Console/Command.html">Command</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Console_Command_AbstractCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Console/Command/AbstractCommand.html">AbstractCommand</a>                    </div>                </li>                            <li data-name="class:Windwalker_Console_Command_Command" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Console/Command/Command.html">Command</a>                    </div>                </li>                            <li data-name="class:Windwalker_Console_Command_RootCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Console/Command/RootCommand.html">RootCommand</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Console_Descriptor" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Console/Descriptor.html">Descriptor</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_Console_Descriptor_Text" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Console/Descriptor/Text.html">Text</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Console_Descriptor_Text_TextCommandDescriptor" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Console/Descriptor/Text/TextCommandDescriptor.html">TextCommandDescriptor</a>                    </div>                </li>                            <li data-name="class:Windwalker_Console_Descriptor_Text_TextDescriptorHelper" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Console/Descriptor/Text/TextDescriptorHelper.html">TextDescriptorHelper</a>                    </div>                </li>                            <li data-name="class:Windwalker_Console_Descriptor_Text_TextOptionDescriptor" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Console/Descriptor/Text/TextOptionDescriptor.html">TextOptionDescriptor</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Windwalker_Console_Descriptor_AbstractDescriptor" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Console/Descriptor/AbstractDescriptor.html">AbstractDescriptor</a>                    </div>                </li>                            <li data-name="class:Windwalker_Console_Descriptor_AbstractDescriptorHelper" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Console/Descriptor/AbstractDescriptorHelper.html">AbstractDescriptorHelper</a>                    </div>                </li>                            <li data-name="class:Windwalker_Console_Descriptor_DescriptorHelperInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Console/Descriptor/DescriptorHelperInterface.html">DescriptorHelperInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Console_Descriptor_DescriptorInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Console/Descriptor/DescriptorInterface.html">DescriptorInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Console_Exception" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Console/Exception.html">Exception</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Console_Exception_CommandNotFoundException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Console/Exception/CommandNotFoundException.html">CommandNotFoundException</a>                    </div>                </li>                            <li data-name="class:Windwalker_Console_Exception_WrongArgumentException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Console/Exception/WrongArgumentException.html">WrongArgumentException</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Console_IO" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Console/IO.html">IO</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Console_IO_IO" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Console/IO/IO.html">IO</a>                    </div>                </li>                            <li data-name="class:Windwalker_Console_IO_IOFactory" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Console/IO/IOFactory.html">IOFactory</a>                    </div>                </li>                            <li data-name="class:Windwalker_Console_IO_IOInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Console/IO/IOInterface.html">IOInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Console_IO_NullInput" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Console/IO/NullInput.html">NullInput</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Console_Option" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Console/Option.html">Option</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Console_Option_Option" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Console/Option/Option.html">Option</a>                    </div>                </li>                            <li data-name="class:Windwalker_Console_Option_OptionSet" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Console/Option/OptionSet.html">OptionSet</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Console_Prompter" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Console/Prompter.html">Prompter</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Console_Prompter_AbstractPrompter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Console/Prompter/AbstractPrompter.html">AbstractPrompter</a>                    </div>                </li>                            <li data-name="class:Windwalker_Console_Prompter_BooleanPrompter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Console/Prompter/BooleanPrompter.html">BooleanPrompter</a>                    </div>                </li>                            <li data-name="class:Windwalker_Console_Prompter_CallbackPrompter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Console/Prompter/CallbackPrompter.html">CallbackPrompter</a>                    </div>                </li>                            <li data-name="class:Windwalker_Console_Prompter_NotNullPrompter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Console/Prompter/NotNullPrompter.html">NotNullPrompter</a>                    </div>                </li>                            <li data-name="class:Windwalker_Console_Prompter_PasswordPrompter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Console/Prompter/PasswordPrompter.html">PasswordPrompter</a>                    </div>                </li>                            <li data-name="class:Windwalker_Console_Prompter_Prompter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Console/Prompter/Prompter.html">Prompter</a>                    </div>                </li>                            <li data-name="class:Windwalker_Console_Prompter_PrompterInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Console/Prompter/PrompterInterface.html">PrompterInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Console_Prompter_SelectPrompter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Console/Prompter/SelectPrompter.html">SelectPrompter</a>                    </div>                </li>                            <li data-name="class:Windwalker_Console_Prompter_TextPrompter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Console/Prompter/TextPrompter.html">TextPrompter</a>                    </div>                </li>                            <li data-name="class:Windwalker_Console_Prompter_ValidatePrompter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Console/Prompter/ValidatePrompter.html">ValidatePrompter</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Windwalker_Console_AbstractConsole" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Console/AbstractConsole.html">AbstractConsole</a>                    </div>                </li>                            <li data-name="class:Windwalker_Console_Console" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Console/Console.html">Console</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href=".html">Core</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_Core_Profiler" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Core/Profiler.html">Profiler</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Core_Profiler_NullProfiler" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Core/Profiler/NullProfiler.html">NullProfiler</a>                    </div>                </li>                </ul></div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Crypt" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Crypt.html">Crypt</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_Crypt_Cipher" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Crypt/Cipher.html">Cipher</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Crypt_Cipher_AbstractCipher" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Crypt/Cipher/AbstractCipher.html">AbstractCipher</a>                    </div>                </li>                            <li data-name="class:Windwalker_Crypt_Cipher_Aes256Cipher" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Crypt/Cipher/Aes256Cipher.html">Aes256Cipher</a>                    </div>                </li>                            <li data-name="class:Windwalker_Crypt_Cipher_BlowfishCipher" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Crypt/Cipher/BlowfishCipher.html">BlowfishCipher</a>                    </div>                </li>                            <li data-name="class:Windwalker_Crypt_Cipher_CipherInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Crypt/Cipher/CipherInterface.html">CipherInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Crypt_Cipher_Des3Cipher" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Crypt/Cipher/Des3Cipher.html">Des3Cipher</a>                    </div>                </li>                            <li data-name="class:Windwalker_Crypt_Cipher_PhpAesCipher" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Crypt/Cipher/PhpAesCipher.html">PhpAesCipher</a>                    </div>                </li>                            <li data-name="class:Windwalker_Crypt_Cipher_SimpleCipher" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Crypt/Cipher/SimpleCipher.html">SimpleCipher</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Crypt_Mcrypt" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Crypt/Mcrypt.html">Mcrypt</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Crypt_Mcrypt_AbstractMcryptCipher" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Crypt/Mcrypt/AbstractMcryptCipher.html">AbstractMcryptCipher</a>                    </div>                </li>                            <li data-name="class:Windwalker_Crypt_Mcrypt_Cipher3DES" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Crypt/Mcrypt/Cipher3DES.html">Cipher3DES</a>                    </div>                </li>                            <li data-name="class:Windwalker_Crypt_Mcrypt_CipherBlowfish" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Crypt/Mcrypt/CipherBlowfish.html">CipherBlowfish</a>                    </div>                </li>                            <li data-name="class:Windwalker_Crypt_Mcrypt_CipherRijndael256" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Crypt/Mcrypt/CipherRijndael256.html">CipherRijndael256</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Windwalker_Crypt_Crypt" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Crypt/Crypt.html">Crypt</a>                    </div>                </li>                            <li data-name="class:Windwalker_Crypt_CryptHelper" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Crypt/CryptHelper.html">CryptHelper</a>                    </div>                </li>                            <li data-name="class:Windwalker_Crypt_CryptInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Crypt/CryptInterface.html">CryptInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Crypt_Password" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Crypt/Password.html">Password</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_DI" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/DI.html">DI</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_DI_Exception" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/DI/Exception.html">Exception</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_DI_Exception_DependencyResolutionException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/DI/Exception/DependencyResolutionException.html">DependencyResolutionException</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Windwalker_DI_ClassMeta" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/DI/ClassMeta.html">ClassMeta</a>                    </div>                </li>                            <li data-name="class:Windwalker_DI_Container" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/DI/Container.html">Container</a>                    </div>                </li>                            <li data-name="class:Windwalker_DI_ContainerAwareInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/DI/ContainerAwareInterface.html">ContainerAwareInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_DI_ContainerAwareTrait" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/DI/ContainerAwareTrait.html">ContainerAwareTrait</a>                    </div>                </li>                            <li data-name="class:Windwalker_DI_DataStore" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/DI/DataStore.html">DataStore</a>                    </div>                </li>                            <li data-name="class:Windwalker_DI_ServiceProviderInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/DI/ServiceProviderInterface.html">ServiceProviderInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Data" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Data.html">Data</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Data_Data" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Data/Data.html">Data</a>                    </div>                </li>                            <li data-name="class:Windwalker_Data_DataInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Data/DataInterface.html">DataInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Data_DataSet" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Data/DataSet.html">DataSet</a>                    </div>                </li>                            <li data-name="class:Windwalker_Data_DataSetInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Data/DataSetInterface.html">DataSetInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_DataMapper" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/DataMapper.html">DataMapper</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_DataMapper_Entity" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/DataMapper/Entity.html">Entity</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_DataMapper_Entity_Entity" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/DataMapper/Entity/Entity.html">Entity</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Windwalker_DataMapper_AbstractDataMapper" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/DataMapper/AbstractDataMapper.html">AbstractDataMapper</a>                    </div>                </li>                            <li data-name="class:Windwalker_DataMapper_AbstractDatabaseMapperProxy" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/DataMapper/AbstractDatabaseMapperProxy.html">AbstractDatabaseMapperProxy</a>                    </div>                </li>                            <li data-name="class:Windwalker_DataMapper_DataMapper" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/DataMapper/DataMapper.html">DataMapper</a>                    </div>                </li>                            <li data-name="class:Windwalker_DataMapper_DataMapperInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/DataMapper/DataMapperInterface.html">DataMapperInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_DataMapper_DatabaseContainer" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/DataMapper/DatabaseContainer.html">DatabaseContainer</a>                    </div>                </li>                            <li data-name="class:Windwalker_DataMapper_DatabaseMapperInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/DataMapper/DatabaseMapperInterface.html">DatabaseMapperInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Database" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Database.html">Database</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_Database_Command" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Database/Command.html">Command</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Database_Command_AbstractDatabase" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Database/Command/AbstractDatabase.html">AbstractDatabase</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Command_AbstractReader" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Database/Command/AbstractReader.html">AbstractReader</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Command_AbstractTable" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Database/Command/AbstractTable.html">AbstractTable</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Command_AbstractTransaction" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Database/Command/AbstractTransaction.html">AbstractTransaction</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Command_AbstractWriter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Database/Command/AbstractWriter.html">AbstractWriter</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Database_Driver" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Database/Driver.html">Driver</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_Database_Driver_Mysql" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Database/Driver/Mysql.html">Mysql</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Database_Driver_Mysql_MysqlDatabase" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Database/Driver/Mysql/MysqlDatabase.html">MysqlDatabase</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Driver_Mysql_MysqlDriver" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Database/Driver/Mysql/MysqlDriver.html">MysqlDriver</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Driver_Mysql_MysqlReader" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Database/Driver/Mysql/MysqlReader.html">MysqlReader</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Driver_Mysql_MysqlTable" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Database/Driver/Mysql/MysqlTable.html">MysqlTable</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Driver_Mysql_MysqlTransaction" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Database/Driver/Mysql/MysqlTransaction.html">MysqlTransaction</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Driver_Mysql_MysqlType" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Database/Driver/Mysql/MysqlType.html">MysqlType</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Driver_Mysql_MysqlWriter" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Database/Driver/Mysql/MysqlWriter.html">MysqlWriter</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Database_Driver_Pdo" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Database/Driver/Pdo.html">Pdo</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Database_Driver_Pdo_PdoDriver" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Database/Driver/Pdo/PdoDriver.html">PdoDriver</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Driver_Pdo_PdoHelper" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Database/Driver/Pdo/PdoHelper.html">PdoHelper</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Driver_Pdo_PdoIterator" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Database/Driver/Pdo/PdoIterator.html">PdoIterator</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Driver_Pdo_PdoReader" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Database/Driver/Pdo/PdoReader.html">PdoReader</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Driver_Pdo_PdoTransaction" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Database/Driver/Pdo/PdoTransaction.html">PdoTransaction</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Driver_Pdo_PdoWriter" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Database/Driver/Pdo/PdoWriter.html">PdoWriter</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Database_Driver_Postgresql" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Database/Driver/Postgresql.html">Postgresql</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Database_Driver_Postgresql_PostgresqlDatabase" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Database/Driver/Postgresql/PostgresqlDatabase.html">PostgresqlDatabase</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Driver_Postgresql_PostgresqlDriver" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Database/Driver/Postgresql/PostgresqlDriver.html">PostgresqlDriver</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Driver_Postgresql_PostgresqlReader" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Database/Driver/Postgresql/PostgresqlReader.html">PostgresqlReader</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Driver_Postgresql_PostgresqlTable" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Database/Driver/Postgresql/PostgresqlTable.html">PostgresqlTable</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Driver_Postgresql_PostgresqlTransaction" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Database/Driver/Postgresql/PostgresqlTransaction.html">PostgresqlTransaction</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Driver_Postgresql_PostgresqlType" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Database/Driver/Postgresql/PostgresqlType.html">PostgresqlType</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Driver_Postgresql_PostgresqlWriter" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Database/Driver/Postgresql/PostgresqlWriter.html">PostgresqlWriter</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Windwalker_Database_Driver_AbstractDatabaseDriver" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Database/Driver/AbstractDatabaseDriver.html">AbstractDatabaseDriver</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Driver_DatabaseAwareTrait" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Database/Driver/DatabaseAwareTrait.html">DatabaseAwareTrait</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Driver_DatabaseDriverInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Database/Driver/DatabaseDriverInterface.html">DatabaseDriverInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Database_Iterator" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Database/Iterator.html">Iterator</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Database_Iterator_DataIterator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Database/Iterator/DataIterator.html">DataIterator</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Database_Middleware" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Database/Middleware.html">Middleware</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Database_Middleware_DbLoggingMiddleware" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Database/Middleware/DbLoggingMiddleware.html">DbLoggingMiddleware</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Middleware_DbProfilerMiddleware" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Database/Middleware/DbProfilerMiddleware.html">DbProfilerMiddleware</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Database_Query" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Database/Query.html">Query</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Database_Query_QueryHelper" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Database/Query/QueryHelper.html">QueryHelper</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Database_Schema" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Database/Schema.html">Schema</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_Database_Schema_Column" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Database/Schema/Column.html">Column</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Database_Schema_Column_Bit" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Database/Schema/Column/Bit.html">Bit</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Schema_Column_Char" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Database/Schema/Column/Char.html">Char</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Schema_Column_Datetime" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Database/Schema/Column/Datetime.html">Datetime</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Schema_Column_Decimal" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Database/Schema/Column/Decimal.html">Decimal</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Schema_Column_Double" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Database/Schema/Column/Double.html">Double</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Schema_Column_FloatType" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Database/Schema/Column/FloatType.html">FloatType</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Schema_Column_Integer" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Database/Schema/Column/Integer.html">Integer</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Schema_Column_Longtext" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Database/Schema/Column/Longtext.html">Longtext</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Schema_Column_Primary" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Database/Schema/Column/Primary.html">Primary</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Schema_Column_Text" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Database/Schema/Column/Text.html">Text</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Schema_Column_Timestamp" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Database/Schema/Column/Timestamp.html">Timestamp</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Schema_Column_Tinyint" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Database/Schema/Column/Tinyint.html">Tinyint</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Schema_Column_Varchar" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/Database/Schema/Column/Varchar.html">Varchar</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Windwalker_Database_Schema_Column" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Database/Schema/Column.html">Column</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Schema_DataType" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Database/Schema/DataType.html">DataType</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Schema_Key" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Database/Schema/Key.html">Key</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_Schema_Schema" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Database/Schema/Schema.html">Schema</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Windwalker_Database_DatabaseFactory" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Database/DatabaseFactory.html">DatabaseFactory</a>                    </div>                </li>                            <li data-name="class:Windwalker_Database_DatabaseHelper" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Database/DatabaseHelper.html">DatabaseHelper</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Dom" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Dom.html">Dom</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_Dom_Builder" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Dom/Builder.html">Builder</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Dom_Builder_DomBuilder" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Dom/Builder/DomBuilder.html">DomBuilder</a>                    </div>                </li>                            <li data-name="class:Windwalker_Dom_Builder_HtmlBuilder" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Dom/Builder/HtmlBuilder.html">HtmlBuilder</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Dom_Format" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Dom/Format.html">Format</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Dom_Format_DomFormatter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Dom/Format/DomFormatter.html">DomFormatter</a>                    </div>                </li>                            <li data-name="class:Windwalker_Dom_Format_HtmlFormatter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Dom/Format/HtmlFormatter.html">HtmlFormatter</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Dom_Helper" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Dom/Helper.html">Helper</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Dom_Helper_DomHelper" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Dom/Helper/DomHelper.html">DomHelper</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Dom_SimpleXml" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Dom/SimpleXml.html">SimpleXml</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Dom_SimpleXml_XmlHelper" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Dom/SimpleXml/XmlHelper.html">XmlHelper</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Windwalker_Dom_DomElement" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Dom/DomElement.html">DomElement</a>                    </div>                </li>                            <li data-name="class:Windwalker_Dom_DomElements" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Dom/DomElements.html">DomElements</a>                    </div>                </li>                            <li data-name="class:Windwalker_Dom_HtmlElement" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Dom/HtmlElement.html">HtmlElement</a>                    </div>                </li>                            <li data-name="class:Windwalker_Dom_HtmlElements" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Dom/HtmlElements.html">HtmlElements</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Edge" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Edge.html">Edge</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_Edge_Cache" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Edge/Cache.html">Cache</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Edge_Cache_EdgeArrayCache" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Edge/Cache/EdgeArrayCache.html">EdgeArrayCache</a>                    </div>                </li>                            <li data-name="class:Windwalker_Edge_Cache_EdgeCacheInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Edge/Cache/EdgeCacheInterface.html">EdgeCacheInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Edge_Cache_EdgeFileCache" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Edge/Cache/EdgeFileCache.html">EdgeFileCache</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Edge_Compiler" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Edge/Compiler.html">Compiler</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Edge_Compiler_EdgeCompiler" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Edge/Compiler/EdgeCompiler.html">EdgeCompiler</a>                    </div>                </li>                            <li data-name="class:Windwalker_Edge_Compiler_EdgeCompilerInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Edge/Compiler/EdgeCompilerInterface.html">EdgeCompilerInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Edge_Extension" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Edge/Extension.html">Extension</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Edge_Extension_EdgeExtensionInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Edge/Extension/EdgeExtensionInterface.html">EdgeExtensionInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Edge_Loader" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Edge/Loader.html">Loader</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Edge_Loader_EdgeFileLoader" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Edge/Loader/EdgeFileLoader.html">EdgeFileLoader</a>                    </div>                </li>                            <li data-name="class:Windwalker_Edge_Loader_EdgeLoaderInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Edge/Loader/EdgeLoaderInterface.html">EdgeLoaderInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Edge_Loader_EdgeStringLoader" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Edge/Loader/EdgeStringLoader.html">EdgeStringLoader</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Windwalker_Edge_Edge" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Edge/Edge.html">Edge</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Environment" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Environment.html">Environment</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_Environment_Browser" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Environment/Browser.html">Browser</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Environment_Browser_Browser" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Environment/Browser/Browser.html">Browser</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Windwalker_Environment_Environment" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Environment/Environment.html">Environment</a>                    </div>                </li>                            <li data-name="class:Windwalker_Environment_PhpHelper" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Environment/PhpHelper.html">PhpHelper</a>                    </div>                </li>                            <li data-name="class:Windwalker_Environment_Platform" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Environment/Platform.html">Platform</a>                    </div>                </li>                            <li data-name="class:Windwalker_Environment_PlatformHelper" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Environment/PlatformHelper.html">PlatformHelper</a>                    </div>                </li>                            <li data-name="class:Windwalker_Environment_WebEnvironment" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Environment/WebEnvironment.html">WebEnvironment</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Event" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Event.html">Event</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Event_Dispatcher" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Event/Dispatcher.html">Dispatcher</a>                    </div>                </li>                            <li data-name="class:Windwalker_Event_DispatcherAwareInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Event/DispatcherAwareInterface.html">DispatcherAwareInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Event_DispatcherAwareTrait" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Event/DispatcherAwareTrait.html">DispatcherAwareTrait</a>                    </div>                </li>                            <li data-name="class:Windwalker_Event_DispatcherInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Event/DispatcherInterface.html">DispatcherInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Event_Event" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Event/Event.html">Event</a>                    </div>                </li>                            <li data-name="class:Windwalker_Event_EventInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Event/EventInterface.html">EventInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Event_EventTriggerableInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Event/EventTriggerableInterface.html">EventTriggerableInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Event_ListenerMapper" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Event/ListenerMapper.html">ListenerMapper</a>                    </div>                </li>                            <li data-name="class:Windwalker_Event_ListenerPriority" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Event/ListenerPriority.html">ListenerPriority</a>                    </div>                </li>                            <li data-name="class:Windwalker_Event_ListenersQueue" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Event/ListenersQueue.html">ListenersQueue</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Filesystem" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Filesystem.html">Filesystem</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_Filesystem_Comparator" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Filesystem/Comparator.html">Comparator</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Filesystem_Comparator_FileComparatorInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Filesystem/Comparator/FileComparatorInterface.html">FileComparatorInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Filesystem_Exception" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Filesystem/Exception.html">Exception</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Filesystem_Exception_FilesystemException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Filesystem/Exception/FilesystemException.html">FilesystemException</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Filesystem_Iterator" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Filesystem/Iterator.html">Iterator</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Filesystem_Iterator_ArrayObject" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Filesystem/Iterator/ArrayObject.html">ArrayObject</a>                    </div>                </li>                            <li data-name="class:Windwalker_Filesystem_Iterator_RecursiveDirectoryIterator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Filesystem/Iterator/RecursiveDirectoryIterator.html">RecursiveDirectoryIterator</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Filesystem_Path" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Filesystem/Path.html">Path</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Filesystem_Path_PathCollection" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Filesystem/Path/PathCollection.html">PathCollection</a>                    </div>                </li>                            <li data-name="class:Windwalker_Filesystem_Path_PathLocator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Filesystem/Path/PathLocator.html">PathLocator</a>                    </div>                </li>                            <li data-name="class:Windwalker_Filesystem_Path_PathLocatorInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Filesystem/Path/PathLocatorInterface.html">PathLocatorInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Windwalker_Filesystem_File" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Filesystem/File.html">File</a>                    </div>                </li>                            <li data-name="class:Windwalker_Filesystem_Filesystem" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Filesystem/Filesystem.html">Filesystem</a>                    </div>                </li>                            <li data-name="class:Windwalker_Filesystem_Folder" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Filesystem/Folder.html">Folder</a>                    </div>                </li>                            <li data-name="class:Windwalker_Filesystem_Path" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Filesystem/Path.html">Path</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Filter" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Filter.html">Filter</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_Filter_Cleaner" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Filter/Cleaner.html">Cleaner</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Filter_Cleaner_CleanerInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Filter/Cleaner/CleanerInterface.html">CleanerInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Filter_Unicode" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Filter/Unicode.html">Unicode</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Filter_Unicode_UnicodeHelper" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Filter/Unicode/UnicodeHelper.html">UnicodeHelper</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Windwalker_Filter_HtmlCleaner" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Filter/HtmlCleaner.html">HtmlCleaner</a>                    </div>                </li>                            <li data-name="class:Windwalker_Filter_InputFilter" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Filter/InputFilter.html">InputFilter</a>                    </div>                </li>                            <li data-name="class:Windwalker_Filter_OutputFilter" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Filter/OutputFilter.html">OutputFilter</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Form" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Form.html">Form</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_Form_Field" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Form/Field.html">Field</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Form_Field_AbstractField" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Form/Field/AbstractField.html">AbstractField</a>                    </div>                </li>                            <li data-name="class:Windwalker_Form_Field_ButtonField" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Form/Field/ButtonField.html">ButtonField</a>                    </div>                </li>                            <li data-name="class:Windwalker_Form_Field_CheckboxField" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Form/Field/CheckboxField.html">CheckboxField</a>                    </div>                </li>                            <li data-name="class:Windwalker_Form_Field_CheckboxesField" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Form/Field/CheckboxesField.html">CheckboxesField</a>                    </div>                </li>                            <li data-name="class:Windwalker_Form_Field_CustomHtmlField" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Form/Field/CustomHtmlField.html">CustomHtmlField</a>                    </div>                </li>                            <li data-name="class:Windwalker_Form_Field_EmailField" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Form/Field/EmailField.html">EmailField</a>                    </div>                </li>                            <li data-name="class:Windwalker_Form_Field_HiddenField" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Form/Field/HiddenField.html">HiddenField</a>                    </div>                </li>                            <li data-name="class:Windwalker_Form_Field_ListField" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Form/Field/ListField.html">ListField</a>                    </div>                </li>                            <li data-name="class:Windwalker_Form_Field_PasswordField" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Form/Field/PasswordField.html">PasswordField</a>                    </div>                </li>                            <li data-name="class:Windwalker_Form_Field_RadioField" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Form/Field/RadioField.html">RadioField</a>                    </div>                </li>                            <li data-name="class:Windwalker_Form_Field_SpacerField" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Form/Field/SpacerField.html">SpacerField</a>                    </div>                </li>                            <li data-name="class:Windwalker_Form_Field_TextField" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Form/Field/TextField.html">TextField</a>                    </div>                </li>                            <li data-name="class:Windwalker_Form_Field_TextareaField" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Form/Field/TextareaField.html">TextareaField</a>                    </div>                </li>                            <li data-name="class:Windwalker_Form_Field_TimezoneField" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Form/Field/TimezoneField.html">TimezoneField</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Form_Filter" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Form/Filter.html">Filter</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Form_Filter_DefaultFilter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Form/Filter/DefaultFilter.html">DefaultFilter</a>                    </div>                </li>                            <li data-name="class:Windwalker_Form_Filter_FilterInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Form/Filter/FilterInterface.html">FilterInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Form_Filter_MockFilter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Form/Filter/MockFilter.html">MockFilter</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Form_Renderer" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Form/Renderer.html">Renderer</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Form_Renderer_FormRendererInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Form/Renderer/FormRendererInterface.html">FormRendererInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Form_Validate" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Form/Validate.html">Validate</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Form_Validate_ValidateResult" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Form/Validate/ValidateResult.html">ValidateResult</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Windwalker_Form_AbstractFormElementHelper" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Form/AbstractFormElementHelper.html">AbstractFormElementHelper</a>                    </div>                </li>                            <li data-name="class:Windwalker_Form_FieldDefinitionInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Form/FieldDefinitionInterface.html">FieldDefinitionInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Form_FieldHelper" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Form/FieldHelper.html">FieldHelper</a>                    </div>                </li>                            <li data-name="class:Windwalker_Form_FilterHelper" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Form/FilterHelper.html">FilterHelper</a>                    </div>                </li>                            <li data-name="class:Windwalker_Form_Form" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Form/Form.html">Form</a>                    </div>                </li>                            <li data-name="class:Windwalker_Form_FormHelper" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Form/FormHelper.html">FormHelper</a>                    </div>                </li>                            <li data-name="class:Windwalker_Form_ValidatorHelper" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Form/ValidatorHelper.html">ValidatorHelper</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Html" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Html.html">Html</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_Html_Enum" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Html/Enum.html">Enum</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Html_Enum_AbstractHtmlList" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Html/Enum/AbstractHtmlList.html">AbstractHtmlList</a>                    </div>                </li>                            <li data-name="class:Windwalker_Html_Enum_DList" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Html/Enum/DList.html">DList</a>                    </div>                </li>                            <li data-name="class:Windwalker_Html_Enum_DListDescription" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Html/Enum/DListDescription.html">DListDescription</a>                    </div>                </li>                            <li data-name="class:Windwalker_Html_Enum_DListTitle" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Html/Enum/DListTitle.html">DListTitle</a>                    </div>                </li>                            <li data-name="class:Windwalker_Html_Enum_ListItem" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Html/Enum/ListItem.html">ListItem</a>                    </div>                </li>                            <li data-name="class:Windwalker_Html_Enum_OList" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Html/Enum/OList.html">OList</a>                    </div>                </li>                            <li data-name="class:Windwalker_Html_Enum_UList" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Html/Enum/UList.html">UList</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Html_Form" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Html/Form.html">Form</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Html_Form_FormWrapper" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Html/Form/FormWrapper.html">FormWrapper</a>                    </div>                </li>                            <li data-name="class:Windwalker_Html_Form_InputElement" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Html/Form/InputElement.html">InputElement</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Html_Grid" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Html/Grid.html">Grid</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Html_Grid_Grid" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Html/Grid/Grid.html">Grid</a>                    </div>                </li>                            <li data-name="class:Windwalker_Html_Grid_KeyValueGrid" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Html/Grid/KeyValueGrid.html">KeyValueGrid</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Html_Helper" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Html/Helper.html">Helper</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Html_Helper_HtmlHelper" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Html/Helper/HtmlHelper.html">HtmlHelper</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Html_Media" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Html/Media.html">Media</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Html_Media_AbstractMediaElement" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Html/Media/AbstractMediaElement.html">AbstractMediaElement</a>                    </div>                </li>                            <li data-name="class:Windwalker_Html_Media_Audio" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Html/Media/Audio.html">Audio</a>                    </div>                </li>                            <li data-name="class:Windwalker_Html_Media_Video" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Html/Media/Video.html">Video</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Html_Select" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Html/Select.html">Select</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Html_Select_AbstractInputList" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Html/Select/AbstractInputList.html">AbstractInputList</a>                    </div>                </li>                            <li data-name="class:Windwalker_Html_Select_CheckboxList" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Html/Select/CheckboxList.html">CheckboxList</a>                    </div>                </li>                            <li data-name="class:Windwalker_Html_Select_RadioList" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Html/Select/RadioList.html">RadioList</a>                    </div>                </li>                            <li data-name="class:Windwalker_Html_Select_SelectList" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Html/Select/SelectList.html">SelectList</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Windwalker_Html_Option" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Html/Option.html">Option</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Http" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Http.html">Http</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_Http_Helper" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Http/Helper.html">Helper</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Http_Helper_HeaderHelper" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Http/Helper/HeaderHelper.html">HeaderHelper</a>                    </div>                </li>                            <li data-name="class:Windwalker_Http_Helper_ResponseHelper" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Http/Helper/ResponseHelper.html">ResponseHelper</a>                    </div>                </li>                            <li data-name="class:Windwalker_Http_Helper_ServerHelper" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Http/Helper/ServerHelper.html">ServerHelper</a>                    </div>                </li>                            <li data-name="class:Windwalker_Http_Helper_StreamHelper" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Http/Helper/StreamHelper.html">StreamHelper</a>                    </div>                </li>                            <li data-name="class:Windwalker_Http_Helper_UploadedFileHelper" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Http/Helper/UploadedFileHelper.html">UploadedFileHelper</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Http_Output" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Http/Output.html">Output</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Http_Output_CompressException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Http/Output/CompressException.html">CompressException</a>                    </div>                </li>                            <li data-name="class:Windwalker_Http_Output_HttpCompressor" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Http/Output/HttpCompressor.html">HttpCompressor</a>                    </div>                </li>                            <li data-name="class:Windwalker_Http_Output_NoHeaderOutput" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Http/Output/NoHeaderOutput.html">NoHeaderOutput</a>                    </div>                </li>                            <li data-name="class:Windwalker_Http_Output_Output" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Http/Output/Output.html">Output</a>                    </div>                </li>                            <li data-name="class:Windwalker_Http_Output_OutputInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Http/Output/OutputInterface.html">OutputInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Http_Output_StreamOutput" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Http/Output/StreamOutput.html">StreamOutput</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Http_Request" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Http/Request.html">Request</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Http_Request_AbstractRequest" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Http/Request/AbstractRequest.html">AbstractRequest</a>                    </div>                </li>                            <li data-name="class:Windwalker_Http_Request_Request" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Http/Request/Request.html">Request</a>                    </div>                </li>                            <li data-name="class:Windwalker_Http_Request_ServerRequest" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Http/Request/ServerRequest.html">ServerRequest</a>                    </div>                </li>                            <li data-name="class:Windwalker_Http_Request_ServerRequestFactory" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Http/Request/ServerRequestFactory.html">ServerRequestFactory</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Http_Response" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Http/Response.html">Response</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Http_Response_AbstractContentTypeResponse" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Http/Response/AbstractContentTypeResponse.html">AbstractContentTypeResponse</a>                    </div>                </li>                            <li data-name="class:Windwalker_Http_Response_EmptyResponse" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Http/Response/EmptyResponse.html">EmptyResponse</a>                    </div>                </li>                            <li data-name="class:Windwalker_Http_Response_HtmlResponse" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Http/Response/HtmlResponse.html">HtmlResponse</a>                    </div>                </li>                            <li data-name="class:Windwalker_Http_Response_JsonResponse" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Http/Response/JsonResponse.html">JsonResponse</a>                    </div>                </li>                            <li data-name="class:Windwalker_Http_Response_RedirectResponse" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Http/Response/RedirectResponse.html">RedirectResponse</a>                    </div>                </li>                            <li data-name="class:Windwalker_Http_Response_Response" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Http/Response/Response.html">Response</a>                    </div>                </li>                            <li data-name="class:Windwalker_Http_Response_TextResponse" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Http/Response/TextResponse.html">TextResponse</a>                    </div>                </li>                            <li data-name="class:Windwalker_Http_Response_XmlResponse" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Http/Response/XmlResponse.html">XmlResponse</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Http_Stream" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Http/Stream.html">Stream</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Http_Stream_PhpInputStream" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Http/Stream/PhpInputStream.html">PhpInputStream</a>                    </div>                </li>                            <li data-name="class:Windwalker_Http_Stream_Stream" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Http/Stream/Stream.html">Stream</a>                    </div>                </li>                            <li data-name="class:Windwalker_Http_Stream_StringStream" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Http/Stream/StringStream.html">StringStream</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Http_Transport" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Http/Transport.html">Transport</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Http_Transport_AbstractTransport" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Http/Transport/AbstractTransport.html">AbstractTransport</a>                    </div>                </li>                            <li data-name="class:Windwalker_Http_Transport_CurlTransport" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Http/Transport/CurlTransport.html">CurlTransport</a>                    </div>                </li>                            <li data-name="class:Windwalker_Http_Transport_StreamTransport" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Http/Transport/StreamTransport.html">StreamTransport</a>                    </div>                </li>                            <li data-name="class:Windwalker_Http_Transport_TransportInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Http/Transport/TransportInterface.html">TransportInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Windwalker_Http_AbstractMessage" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Http/AbstractMessage.html">AbstractMessage</a>                    </div>                </li>                            <li data-name="class:Windwalker_Http_HttpClient" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Http/HttpClient.html">HttpClient</a>                    </div>                </li>                            <li data-name="class:Windwalker_Http_HttpClientInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Http/HttpClientInterface.html">HttpClientInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Http_HttpServer" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Http/HttpServer.html">HttpServer</a>                    </div>                </li>                            <li data-name="class:Windwalker_Http_UploadedFile" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Http/UploadedFile.html">UploadedFile</a>                    </div>                </li>                            <li data-name="class:Windwalker_Http_WebHttpServer" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Http/WebHttpServer.html">WebHttpServer</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_IO" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/IO.html">IO</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_IO_Cli" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/IO/Cli.html">Cli</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_IO_Cli_Color" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/IO/Cli/Color.html">Color</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_IO_Cli_Color_ColorProcessor" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/IO/Cli/Color/ColorProcessor.html">ColorProcessor</a>                    </div>                </li>                            <li data-name="class:Windwalker_IO_Cli_Color_ColorProcessorInterface" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/IO/Cli/Color/ColorProcessorInterface.html">ColorProcessorInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_IO_Cli_Color_ColorStyle" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/IO/Cli/Color/ColorStyle.html">ColorStyle</a>                    </div>                </li>                            <li data-name="class:Windwalker_IO_Cli_Color_NoColorProcessor" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/IO/Cli/Color/NoColorProcessor.html">NoColorProcessor</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_IO_Cli_Input" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/IO/Cli/Input.html">Input</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_IO_Cli_Input_CliInput" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/IO/Cli/Input/CliInput.html">CliInput</a>                    </div>                </li>                            <li data-name="class:Windwalker_IO_Cli_Input_CliInputInterface" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/IO/Cli/Input/CliInputInterface.html">CliInputInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_IO_Cli_Output" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/IO/Cli/Output.html">Output</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_IO_Cli_Output_AbstractCliOutput" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/IO/Cli/Output/AbstractCliOutput.html">AbstractCliOutput</a>                    </div>                </li>                            <li data-name="class:Windwalker_IO_Cli_Output_CliOutput" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/IO/Cli/Output/CliOutput.html">CliOutput</a>                    </div>                </li>                            <li data-name="class:Windwalker_IO_Cli_Output_CliOutputInterface" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/IO/Cli/Output/CliOutputInterface.html">CliOutputInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_IO_Cli_Output_ColorfulOutputInterface" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/IO/Cli/Output/ColorfulOutputInterface.html">ColorfulOutputInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_IO_Cli_Output_SimpleCliOutput" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Windwalker/IO/Cli/Output/SimpleCliOutput.html">SimpleCliOutput</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Windwalker_IO_Cli_IO" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/IO/Cli/IO.html">IO</a>                    </div>                </li>                            <li data-name="class:Windwalker_IO_Cli_IOInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/IO/Cli/IOInterface.html">IOInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_IO_Filter" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/IO/Filter.html">Filter</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_IO_Filter_NullFilter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/IO/Filter/NullFilter.html">NullFilter</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Windwalker_IO_CookieInput" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/IO/CookieInput.html">CookieInput</a>                    </div>                </li>                            <li data-name="class:Windwalker_IO_FilesInput" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/IO/FilesInput.html">FilesInput</a>                    </div>                </li>                            <li data-name="class:Windwalker_IO_FormDataInput" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/IO/FormDataInput.html">FormDataInput</a>                    </div>                </li>                            <li data-name="class:Windwalker_IO_Input" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/IO/Input.html">Input</a>                    </div>                </li>                            <li data-name="class:Windwalker_IO_JsonInput" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/IO/JsonInput.html">JsonInput</a>                    </div>                </li>                            <li data-name="class:Windwalker_IO_PsrFilesInput" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/IO/PsrFilesInput.html">PsrFilesInput</a>                    </div>                </li>                            <li data-name="class:Windwalker_IO_PsrHeaderInput" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/IO/PsrHeaderInput.html">PsrHeaderInput</a>                    </div>                </li>                            <li data-name="class:Windwalker_IO_PsrInput" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/IO/PsrInput.html">PsrInput</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Language" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Language.html">Language</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_Language_Format" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Language/Format.html">Format</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Language_Format_AbstractFormat" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Language/Format/AbstractFormat.html">AbstractFormat</a>                    </div>                </li>                            <li data-name="class:Windwalker_Language_Format_FormatInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Language/Format/FormatInterface.html">FormatInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Language_Format_IniFormat" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Language/Format/IniFormat.html">IniFormat</a>                    </div>                </li>                            <li data-name="class:Windwalker_Language_Format_JsonFormat" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Language/Format/JsonFormat.html">JsonFormat</a>                    </div>                </li>                            <li data-name="class:Windwalker_Language_Format_PhpFormat" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Language/Format/PhpFormat.html">PhpFormat</a>                    </div>                </li>                            <li data-name="class:Windwalker_Language_Format_YamlFormat" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Language/Format/YamlFormat.html">YamlFormat</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Language_Loader" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Language/Loader.html">Loader</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Language_Loader_AbstractLoader" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Language/Loader/AbstractLoader.html">AbstractLoader</a>                    </div>                </li>                            <li data-name="class:Windwalker_Language_Loader_FileLoader" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Language/Loader/FileLoader.html">FileLoader</a>                    </div>                </li>                            <li data-name="class:Windwalker_Language_Loader_LoaderInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Language/Loader/LoaderInterface.html">LoaderInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Language_Loader_PhpLoader" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Language/Loader/PhpLoader.html">PhpLoader</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Language_Localise" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Language/Localise.html">Localise</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Language_Localise_EnGBLocalise" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Language/Localise/EnGBLocalise.html">EnGBLocalise</a>                    </div>                </li>                            <li data-name="class:Windwalker_Language_Localise_LocaliseInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Language/Localise/LocaliseInterface.html">LocaliseInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Language_Localise_NullLocalise" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Language/Localise/NullLocalise.html">NullLocalise</a>                    </div>                </li>                            <li data-name="class:Windwalker_Language_Localise_ZhCNLocalise" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Language/Localise/ZhCNLocalise.html">ZhCNLocalise</a>                    </div>                </li>                            <li data-name="class:Windwalker_Language_Localise_ZhTWLocalise" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Language/Localise/ZhTWLocalise.html">ZhTWLocalise</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Windwalker_Language_Language" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Language/Language.html">Language</a>                    </div>                </li>                            <li data-name="class:Windwalker_Language_LanguageInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Language/LanguageInterface.html">LanguageInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Language_LanguageNormalize" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Language/LanguageNormalize.html">LanguageNormalize</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Loader" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Loader.html">Loader</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_Loader_Loader" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Loader/Loader.html">Loader</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Loader_Loader_AbstractLoader" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Loader/Loader/AbstractLoader.html">AbstractLoader</a>                    </div>                </li>                            <li data-name="class:Windwalker_Loader_Loader_FileMappingLoader" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Loader/Loader/FileMappingLoader.html">FileMappingLoader</a>                    </div>                </li>                            <li data-name="class:Windwalker_Loader_Loader_Psr0Loader" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Loader/Loader/Psr0Loader.html">Psr0Loader</a>                    </div>                </li>                            <li data-name="class:Windwalker_Loader_Loader_Psr4Loader" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Loader/Loader/Psr4Loader.html">Psr4Loader</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Windwalker_Loader_ClassLoader" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Loader/ClassLoader.html">ClassLoader</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Middleware" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Middleware.html">Middleware</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_Middleware_Chain" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Middleware/Chain.html">Chain</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Middleware_Chain_ChainBuilder" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Middleware/Chain/ChainBuilder.html">ChainBuilder</a>                    </div>                </li>                            <li data-name="class:Windwalker_Middleware_Chain_Psr7ChainBuilder" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Middleware/Chain/Psr7ChainBuilder.html">Psr7ChainBuilder</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Windwalker_Middleware_AbstractMiddleware" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Middleware/AbstractMiddleware.html">AbstractMiddleware</a>                    </div>                </li>                            <li data-name="class:Windwalker_Middleware_CallbackMiddleware" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Middleware/CallbackMiddleware.html">CallbackMiddleware</a>                    </div>                </li>                            <li data-name="class:Windwalker_Middleware_EndMiddleware" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Middleware/EndMiddleware.html">EndMiddleware</a>                    </div>                </li>                            <li data-name="class:Windwalker_Middleware_MiddlewareInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Middleware/MiddlewareInterface.html">MiddlewareInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Middleware_Psr7InvokableInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Middleware/Psr7InvokableInterface.html">Psr7InvokableInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Middleware_Psr7Middleware" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Middleware/Psr7Middleware.html">Psr7Middleware</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Profiler" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Profiler.html">Profiler</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_Profiler_Point" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Profiler/Point.html">Point</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Profiler_Point_Collector" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Profiler/Point/Collector.html">Collector</a>                    </div>                </li>                            <li data-name="class:Windwalker_Profiler_Point_CollectorInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Profiler/Point/CollectorInterface.html">CollectorInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Profiler_Point_Point" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Profiler/Point/Point.html">Point</a>                    </div>                </li>                            <li data-name="class:Windwalker_Profiler_Point_PointInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Profiler/Point/PointInterface.html">PointInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Profiler_Renderer" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Profiler/Renderer.html">Renderer</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Profiler_Renderer_DefaultRenderer" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Profiler/Renderer/DefaultRenderer.html">DefaultRenderer</a>                    </div>                </li>                            <li data-name="class:Windwalker_Profiler_Renderer_ProfilerRendererInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Profiler/Renderer/ProfilerRendererInterface.html">ProfilerRendererInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Windwalker_Profiler_Benchmark" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Profiler/Benchmark.html">Benchmark</a>                    </div>                </li>                            <li data-name="class:Windwalker_Profiler_Profiler" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Profiler/Profiler.html">Profiler</a>                    </div>                </li>                            <li data-name="class:Windwalker_Profiler_ProfilerAwareInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Profiler/ProfilerAwareInterface.html">ProfilerAwareInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Profiler_ProfilerInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Profiler/ProfilerInterface.html">ProfilerInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Query" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Query.html">Query</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_Query_Cubrid" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Query/Cubrid.html">Cubrid</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Query_Cubrid_CubridExpression" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Query/Cubrid/CubridExpression.html">CubridExpression</a>                    </div>                </li>                            <li data-name="class:Windwalker_Query_Cubrid_CubridQuery" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Query/Cubrid/CubridQuery.html">CubridQuery</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Query_Mariadb" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Query/Mariadb.html">Mariadb</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Query_Mariadb_MariadbExpression" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Query/Mariadb/MariadbExpression.html">MariadbExpression</a>                    </div>                </li>                            <li data-name="class:Windwalker_Query_Mariadb_MariadbQuery" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Query/Mariadb/MariadbQuery.html">MariadbQuery</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Query_Mysql" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Query/Mysql.html">Mysql</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Query_Mysql_MysqlExpression" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Query/Mysql/MysqlExpression.html">MysqlExpression</a>                    </div>                </li>                            <li data-name="class:Windwalker_Query_Mysql_MysqlGrammar" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Query/Mysql/MysqlGrammar.html">MysqlGrammar</a>                    </div>                </li>                            <li data-name="class:Windwalker_Query_Mysql_MysqlQuery" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Query/Mysql/MysqlQuery.html">MysqlQuery</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Query_Oracle" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Query/Oracle.html">Oracle</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Query_Oracle_OracleExpression" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Query/Oracle/OracleExpression.html">OracleExpression</a>                    </div>                </li>                            <li data-name="class:Windwalker_Query_Oracle_OracleQuery" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Query/Oracle/OracleQuery.html">OracleQuery</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Query_Pdo" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Query/Pdo.html">Pdo</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Query_Pdo_PdoExpression" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Query/Pdo/PdoExpression.html">PdoExpression</a>                    </div>                </li>                            <li data-name="class:Windwalker_Query_Pdo_PdoQuery" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Query/Pdo/PdoQuery.html">PdoQuery</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Query_Postgresql" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Query/Postgresql.html">Postgresql</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Query_Postgresql_PostgresqlExpression" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Query/Postgresql/PostgresqlExpression.html">PostgresqlExpression</a>                    </div>                </li>                            <li data-name="class:Windwalker_Query_Postgresql_PostgresqlGrammar" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Query/Postgresql/PostgresqlGrammar.html">PostgresqlGrammar</a>                    </div>                </li>                            <li data-name="class:Windwalker_Query_Postgresql_PostgresqlQuery" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Query/Postgresql/PostgresqlQuery.html">PostgresqlQuery</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Query_Query" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Query/Query.html">Query</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Query_Query_LimitableInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Query/Query/LimitableInterface.html">LimitableInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Query_Query_PreparableInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Query/Query/PreparableInterface.html">PreparableInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Query_Query_PreparableTrait" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Query/Query/PreparableTrait.html">PreparableTrait</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Query_Sqlite" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Query/Sqlite.html">Sqlite</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Query_Sqlite_SqliteExpression" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Query/Sqlite/SqliteExpression.html">SqliteExpression</a>                    </div>                </li>                            <li data-name="class:Windwalker_Query_Sqlite_SqliteQuery" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Query/Sqlite/SqliteQuery.html">SqliteQuery</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Query_Sqlserv" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Query/Sqlserv.html">Sqlserv</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Query_Sqlserv_SqlservExpression" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Query/Sqlserv/SqlservExpression.html">SqlservExpression</a>                    </div>                </li>                            <li data-name="class:Windwalker_Query_Sqlserv_SqlservQuery" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Query/Sqlserv/SqlservQuery.html">SqlservQuery</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Windwalker_Query_AbstractQueryGrammar" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Query/AbstractQueryGrammar.html">AbstractQueryGrammar</a>                    </div>                </li>                            <li data-name="class:Windwalker_Query_ConnectionContainer" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Query/ConnectionContainer.html">ConnectionContainer</a>                    </div>                </li>                            <li data-name="class:Windwalker_Query_Query" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Query/Query.html">Query</a>                    </div>                </li>                            <li data-name="class:Windwalker_Query_QueryElement" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Query/QueryElement.html">QueryElement</a>                    </div>                </li>                            <li data-name="class:Windwalker_Query_QueryExpression" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Query/QueryExpression.html">QueryExpression</a>                    </div>                </li>                            <li data-name="class:Windwalker_Query_QueryGrammarInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Query/QueryGrammarInterface.html">QueryGrammarInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Query_QueryInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Query/QueryInterface.html">QueryInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Record" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Record.html">Record</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_Record_Exception" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Record/Exception.html">Exception</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Record_Exception_NoResultException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Record/Exception/NoResultException.html">NoResultException</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Windwalker_Record_NestedRecord" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Record/NestedRecord.html">NestedRecord</a>                    </div>                </li>                            <li data-name="class:Windwalker_Record_Record" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Record/Record.html">Record</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Renderer" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Renderer.html">Renderer</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_Renderer_Blade" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Renderer/Blade.html">Blade</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Renderer_Blade_BladeExtending" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Renderer/Blade/BladeExtending.html">BladeExtending</a>                    </div>                </li>                            <li data-name="class:Windwalker_Renderer_Blade_GlobalContainer" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Renderer/Blade/GlobalContainer.html">GlobalContainer</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Renderer_Edge" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Renderer/Edge.html">Edge</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Renderer_Edge_GlobalContainer" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Renderer/Edge/GlobalContainer.html">GlobalContainer</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Renderer_Twig" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Renderer/Twig.html">Twig</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Renderer_Twig_GlobalContainer" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Renderer/Twig/GlobalContainer.html">GlobalContainer</a>                    </div>                </li>                            <li data-name="class:Windwalker_Renderer_Twig_TwigFilesystemLoader" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Renderer/Twig/TwigFilesystemLoader.html">TwigFilesystemLoader</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Windwalker_Renderer_AbstractEngineRenderer" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Renderer/AbstractEngineRenderer.html">AbstractEngineRenderer</a>                    </div>                </li>                            <li data-name="class:Windwalker_Renderer_AbstractRenderer" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Renderer/AbstractRenderer.html">AbstractRenderer</a>                    </div>                </li>                            <li data-name="class:Windwalker_Renderer_BladeRenderer" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Renderer/BladeRenderer.html">BladeRenderer</a>                    </div>                </li>                            <li data-name="class:Windwalker_Renderer_EdgeRenderer" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Renderer/EdgeRenderer.html">EdgeRenderer</a>                    </div>                </li>                            <li data-name="class:Windwalker_Renderer_MustacheRenderer" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Renderer/MustacheRenderer.html">MustacheRenderer</a>                    </div>                </li>                            <li data-name="class:Windwalker_Renderer_PhpRenderer" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Renderer/PhpRenderer.html">PhpRenderer</a>                    </div>                </li>                            <li data-name="class:Windwalker_Renderer_PlatesRenderer" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Renderer/PlatesRenderer.html">PlatesRenderer</a>                    </div>                </li>                            <li data-name="class:Windwalker_Renderer_RendererInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Renderer/RendererInterface.html">RendererInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Renderer_TwigRenderer" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Renderer/TwigRenderer.html">TwigRenderer</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Router" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Router.html">Router</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_Router_Compiler" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Router/Compiler.html">Compiler</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Router_Compiler_BasicCompiler" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Router/Compiler/BasicCompiler.html">BasicCompiler</a>                    </div>                </li>                            <li data-name="class:Windwalker_Router_Compiler_BasicGenerator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Router/Compiler/BasicGenerator.html">BasicGenerator</a>                    </div>                </li>                            <li data-name="class:Windwalker_Router_Compiler_TrieCompiler" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Router/Compiler/TrieCompiler.html">TrieCompiler</a>                    </div>                </li>                            <li data-name="class:Windwalker_Router_Compiler_TrieGenerator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Router/Compiler/TrieGenerator.html">TrieGenerator</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Router_Exception" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Router/Exception.html">Exception</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Router_Exception_RouteNotFoundException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Router/Exception/RouteNotFoundException.html">RouteNotFoundException</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Router_Matcher" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Router/Matcher.html">Matcher</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Router_Matcher_AbstractMatcher" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Router/Matcher/AbstractMatcher.html">AbstractMatcher</a>                    </div>                </li>                            <li data-name="class:Windwalker_Router_Matcher_BinaryMatcher" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Router/Matcher/BinaryMatcher.html">BinaryMatcher</a>                    </div>                </li>                            <li data-name="class:Windwalker_Router_Matcher_MatcherInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Router/Matcher/MatcherInterface.html">MatcherInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Router_Matcher_SequentialMatcher" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Router/Matcher/SequentialMatcher.html">SequentialMatcher</a>                    </div>                </li>                            <li data-name="class:Windwalker_Router_Matcher_TrieMatcher" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Router/Matcher/TrieMatcher.html">TrieMatcher</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Windwalker_Router_RestRouter" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Router/RestRouter.html">RestRouter</a>                    </div>                </li>                            <li data-name="class:Windwalker_Router_Route" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Router/Route.html">Route</a>                    </div>                </li>                            <li data-name="class:Windwalker_Router_RouteHelper" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Router/RouteHelper.html">RouteHelper</a>                    </div>                </li>                            <li data-name="class:Windwalker_Router_Router" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Router/Router.html">Router</a>                    </div>                </li>                            <li data-name="class:Windwalker_Router_RouterInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Router/RouterInterface.html">RouterInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Router_SingleActionRouter" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Router/SingleActionRouter.html">SingleActionRouter</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Session" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Session.html">Session</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_Session_Bag" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Session/Bag.html">Bag</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Session_Bag_ArrayBag" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Session/Bag/ArrayBag.html">ArrayBag</a>                    </div>                </li>                            <li data-name="class:Windwalker_Session_Bag_AutoExpiredFlashBag" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Session/Bag/AutoExpiredFlashBag.html">AutoExpiredFlashBag</a>                    </div>                </li>                            <li data-name="class:Windwalker_Session_Bag_FlashBag" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Session/Bag/FlashBag.html">FlashBag</a>                    </div>                </li>                            <li data-name="class:Windwalker_Session_Bag_FlashBagInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Session/Bag/FlashBagInterface.html">FlashBagInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Session_Bag_SessionBag" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Session/Bag/SessionBag.html">SessionBag</a>                    </div>                </li>                            <li data-name="class:Windwalker_Session_Bag_SessionBagInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Session/Bag/SessionBagInterface.html">SessionBagInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Session_Bridge" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Session/Bridge.html">Bridge</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Session_Bridge_NativeBridge" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Session/Bridge/NativeBridge.html">NativeBridge</a>                    </div>                </li>                            <li data-name="class:Windwalker_Session_Bridge_SessionBridgeInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Session/Bridge/SessionBridgeInterface.html">SessionBridgeInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Session_Database" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Session/Database.html">Database</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Session_Database_AbstractDatabaseAdapter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Session/Database/AbstractDatabaseAdapter.html">AbstractDatabaseAdapter</a>                    </div>                </li>                            <li data-name="class:Windwalker_Session_Database_JoomlaAdapter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Session/Database/JoomlaAdapter.html">JoomlaAdapter</a>                    </div>                </li>                            <li data-name="class:Windwalker_Session_Database_PdoAdapter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Session/Database/PdoAdapter.html">PdoAdapter</a>                    </div>                </li>                            <li data-name="class:Windwalker_Session_Database_WindwalkerAdapter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Session/Database/WindwalkerAdapter.html">WindwalkerAdapter</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Session_Handler" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Session/Handler.html">Handler</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Session_Handler_AbstractHandler" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Session/Handler/AbstractHandler.html">AbstractHandler</a>                    </div>                </li>                            <li data-name="class:Windwalker_Session_Handler_ApcHandler" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Session/Handler/ApcHandler.html">ApcHandler</a>                    </div>                </li>                            <li data-name="class:Windwalker_Session_Handler_DatabaseHandler" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Session/Handler/DatabaseHandler.html">DatabaseHandler</a>                    </div>                </li>                            <li data-name="class:Windwalker_Session_Handler_HandlerInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Session/Handler/HandlerInterface.html">HandlerInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Session_Handler_MemcacheHandler" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Session/Handler/MemcacheHandler.html">MemcacheHandler</a>                    </div>                </li>                            <li data-name="class:Windwalker_Session_Handler_MemcachedHandler" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Session/Handler/MemcachedHandler.html">MemcachedHandler</a>                    </div>                </li>                            <li data-name="class:Windwalker_Session_Handler_NativeHandler" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Session/Handler/NativeHandler.html">NativeHandler</a>                    </div>                </li>                            <li data-name="class:Windwalker_Session_Handler_XcacheHandler" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Session/Handler/XcacheHandler.html">XcacheHandler</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Windwalker_Session_Session" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Session/Session.html">Session</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_String" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/String.html">String</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_String_SimpleTemplate" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/String/SimpleTemplate.html">SimpleTemplate</a>                    </div>                </li>                            <li data-name="class:Windwalker_String_StringHelper" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/String/StringHelper.html">StringHelper</a>                    </div>                </li>                            <li data-name="class:Windwalker_String_StringInflector" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/String/StringInflector.html">StringInflector</a>                    </div>                </li>                            <li data-name="class:Windwalker_String_StringNormalise" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/String/StringNormalise.html">StringNormalise</a>                    </div>                </li>                            <li data-name="class:Windwalker_String_Utf8String" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/String/Utf8String.html">Utf8String</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Structure" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Structure.html">Structure</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_Structure_Format" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Structure/Format.html">Format</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Structure_Format_FormatInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Structure/Format/FormatInterface.html">FormatInterface</a>                    </div>                </li>                            <li data-name="class:Windwalker_Structure_Format_IniFormat" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Structure/Format/IniFormat.html">IniFormat</a>                    </div>                </li>                            <li data-name="class:Windwalker_Structure_Format_JsonFormat" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Structure/Format/JsonFormat.html">JsonFormat</a>                    </div>                </li>                            <li data-name="class:Windwalker_Structure_Format_PhpFormat" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Structure/Format/PhpFormat.html">PhpFormat</a>                    </div>                </li>                            <li data-name="class:Windwalker_Structure_Format_XmlFormat" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Structure/Format/XmlFormat.html">XmlFormat</a>                    </div>                </li>                            <li data-name="class:Windwalker_Structure_Format_YamlFormat" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Structure/Format/YamlFormat.html">YamlFormat</a>                    </div>                </li>                            <li data-name="class:Windwalker_Structure_Format_YmlFormat" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Structure/Format/YmlFormat.html">YmlFormat</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Windwalker_Structure_Format" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Structure/Format.html">Format</a>                    </div>                </li>                            <li data-name="class:Windwalker_Structure_Structure" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Structure/Structure.html">Structure</a>                    </div>                </li>                            <li data-name="class:Windwalker_Structure_StructureHelper" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Structure/StructureHelper.html">StructureHelper</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Uri" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Uri.html">Uri</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Uri_AbstractUri" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Uri/AbstractUri.html">AbstractUri</a>                    </div>                </li>                            <li data-name="class:Windwalker_Uri_PsrUri" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Uri/PsrUri.html">PsrUri</a>                    </div>                </li>                            <li data-name="class:Windwalker_Uri_Uri" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Uri/Uri.html">Uri</a>                    </div>                </li>                            <li data-name="class:Windwalker_Uri_UriData" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Uri/UriData.html">UriData</a>                    </div>                </li>                            <li data-name="class:Windwalker_Uri_UriHelper" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Uri/UriHelper.html">UriHelper</a>                    </div>                </li>                            <li data-name="class:Windwalker_Uri_UriInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Uri/UriInterface.html">UriInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Utilities" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Utilities.html">Utilities</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_Utilities_Classes" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Utilities/Classes.html">Classes</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Utilities_Classes_MultiSingletonTrait" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Utilities/Classes/MultiSingletonTrait.html">MultiSingletonTrait</a>                    </div>                </li>                            <li data-name="class:Windwalker_Utilities_Classes_TraitHelper" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Utilities/Classes/TraitHelper.html">TraitHelper</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Utilities_Iterator" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Utilities/Iterator.html">Iterator</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Utilities_Iterator_ArrayObject" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Utilities/Iterator/ArrayObject.html">ArrayObject</a>                    </div>                </li>                            <li data-name="class:Windwalker_Utilities_Iterator_DualIterator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Utilities/Iterator/DualIterator.html">DualIterator</a>                    </div>                </li>                            <li data-name="class:Windwalker_Utilities_Iterator_RecursiveCompareDualIterator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Utilities/Iterator/RecursiveCompareDualIterator.html">RecursiveCompareDualIterator</a>                    </div>                </li>                            <li data-name="class:Windwalker_Utilities_Iterator_RecursiveDualIterator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Utilities/Iterator/RecursiveDualIterator.html">RecursiveDualIterator</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Utilities_Queue" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Utilities/Queue.html">Queue</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Utilities_Queue_PriorityQueue" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Utilities/Queue/PriorityQueue.html">PriorityQueue</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Utilities_Reflection" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Utilities/Reflection.html">Reflection</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Utilities_Reflection_ReflectionHelper" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Utilities/Reflection/ReflectionHelper.html">ReflectionHelper</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Windwalker_Utilities_ArrayHelper" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Utilities/ArrayHelper.html">ArrayHelper</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Windwalker_Validator" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Validator.html">Validator</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Windwalker_Validator_Rule" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Windwalker/Validator/Rule.html">Rule</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Windwalker_Validator_Rule_AlnumValidator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Validator/Rule/AlnumValidator.html">AlnumValidator</a>                    </div>                </li>                            <li data-name="class:Windwalker_Validator_Rule_BooleanValidator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Validator/Rule/BooleanValidator.html">BooleanValidator</a>                    </div>                </li>                            <li data-name="class:Windwalker_Validator_Rule_ColorValidator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Validator/Rule/ColorValidator.html">ColorValidator</a>                    </div>                </li>                            <li data-name="class:Windwalker_Validator_Rule_CreditcardValidator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Validator/Rule/CreditcardValidator.html">CreditcardValidator</a>                    </div>                </li>                            <li data-name="class:Windwalker_Validator_Rule_EmailValidator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Validator/Rule/EmailValidator.html">EmailValidator</a>                    </div>                </li>                            <li data-name="class:Windwalker_Validator_Rule_EqualsValidator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Validator/Rule/EqualsValidator.html">EqualsValidator</a>                    </div>                </li>                            <li data-name="class:Windwalker_Validator_Rule_IpValidator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Validator/Rule/IpValidator.html">IpValidator</a>                    </div>                </li>                            <li data-name="class:Windwalker_Validator_Rule_NoneValidator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Validator/Rule/NoneValidator.html">NoneValidator</a>                    </div>                </li>                            <li data-name="class:Windwalker_Validator_Rule_PhoneValidator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Validator/Rule/PhoneValidator.html">PhoneValidator</a>                    </div>                </li>                            <li data-name="class:Windwalker_Validator_Rule_RegexValidator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Validator/Rule/RegexValidator.html">RegexValidator</a>                    </div>                </li>                            <li data-name="class:Windwalker_Validator_Rule_UrlValidator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Windwalker/Validator/Rule/UrlValidator.html">UrlValidator</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Windwalker_Validator_AbstractValidator" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Validator/AbstractValidator.html">AbstractValidator</a>                    </div>                </li>                            <li data-name="class:Windwalker_Validator_ValidatorInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Windwalker/Validator/ValidatorInterface.html">ValidatorInterface</a>                    </div>                </li>                </ul></div>                </li>                </ul></div>                </li>                </ul>';

    var searchTypeClasses = {
        'Namespace': 'label-default',
        'Class': 'label-info',
        'Interface': 'label-primary',
        'Trait': 'label-success',
        'Method': 'label-danger',
        '_': 'label-warning'
    };

    var searchIndex = [
                    
            {"type": "Namespace", "link": ".html", "name": "", "doc": "Namespace "},{"type": "Namespace", "link": "Windwalker.html", "name": "Windwalker", "doc": "Namespace Windwalker"},{"type": "Namespace", "link": "Windwalker/Application.html", "name": "Windwalker\\Application", "doc": "Namespace Windwalker\\Application"},{"type": "Namespace", "link": "Windwalker/Application/Helper.html", "name": "Windwalker\\Application\\Helper", "doc": "Namespace Windwalker\\Application\\Helper"},{"type": "Namespace", "link": "Windwalker/Authentication.html", "name": "Windwalker\\Authentication", "doc": "Namespace Windwalker\\Authentication"},{"type": "Namespace", "link": "Windwalker/Authentication/Method.html", "name": "Windwalker\\Authentication\\Method", "doc": "Namespace Windwalker\\Authentication\\Method"},{"type": "Namespace", "link": "Windwalker/Authorisation.html", "name": "Windwalker\\Authorisation", "doc": "Namespace Windwalker\\Authorisation"},{"type": "Namespace", "link": "Windwalker/Cache.html", "name": "Windwalker\\Cache", "doc": "Namespace Windwalker\\Cache"},{"type": "Namespace", "link": "Windwalker/Cache/Item.html", "name": "Windwalker\\Cache\\Item", "doc": "Namespace Windwalker\\Cache\\Item"},{"type": "Namespace", "link": "Windwalker/Cache/Serializer.html", "name": "Windwalker\\Cache\\Serializer", "doc": "Namespace Windwalker\\Cache\\Serializer"},{"type": "Namespace", "link": "Windwalker/Cache/Storage.html", "name": "Windwalker\\Cache\\Storage", "doc": "Namespace Windwalker\\Cache\\Storage"},{"type": "Namespace", "link": "Windwalker/Compare.html", "name": "Windwalker\\Compare", "doc": "Namespace Windwalker\\Compare"},{"type": "Namespace", "link": "Windwalker/Console.html", "name": "Windwalker\\Console", "doc": "Namespace Windwalker\\Console"},{"type": "Namespace", "link": "Windwalker/Console/Command.html", "name": "Windwalker\\Console\\Command", "doc": "Namespace Windwalker\\Console\\Command"},{"type": "Namespace", "link": "Windwalker/Console/Descriptor.html", "name": "Windwalker\\Console\\Descriptor", "doc": "Namespace Windwalker\\Console\\Descriptor"},{"type": "Namespace", "link": "Windwalker/Console/Descriptor/Text.html", "name": "Windwalker\\Console\\Descriptor\\Text", "doc": "Namespace Windwalker\\Console\\Descriptor\\Text"},{"type": "Namespace", "link": "Windwalker/Console/Exception.html", "name": "Windwalker\\Console\\Exception", "doc": "Namespace Windwalker\\Console\\Exception"},{"type": "Namespace", "link": "Windwalker/Console/IO.html", "name": "Windwalker\\Console\\IO", "doc": "Namespace Windwalker\\Console\\IO"},{"type": "Namespace", "link": "Windwalker/Console/Option.html", "name": "Windwalker\\Console\\Option", "doc": "Namespace Windwalker\\Console\\Option"},{"type": "Namespace", "link": "Windwalker/Console/Prompter.html", "name": "Windwalker\\Console\\Prompter", "doc": "Namespace Windwalker\\Console\\Prompter"},{"type": "Namespace", "link": "Windwalker/Core.html", "name": "Windwalker\\Core", "doc": "Namespace Windwalker\\Core"},{"type": "Namespace", "link": "Windwalker/Core/Profiler.html", "name": "Windwalker\\Core\\Profiler", "doc": "Namespace Windwalker\\Core\\Profiler"},{"type": "Namespace", "link": "Windwalker/Crypt.html", "name": "Windwalker\\Crypt", "doc": "Namespace Windwalker\\Crypt"},{"type": "Namespace", "link": "Windwalker/Crypt/Cipher.html", "name": "Windwalker\\Crypt\\Cipher", "doc": "Namespace Windwalker\\Crypt\\Cipher"},{"type": "Namespace", "link": "Windwalker/Crypt/Mcrypt.html", "name": "Windwalker\\Crypt\\Mcrypt", "doc": "Namespace Windwalker\\Crypt\\Mcrypt"},{"type": "Namespace", "link": "Windwalker/DI.html", "name": "Windwalker\\DI", "doc": "Namespace Windwalker\\DI"},{"type": "Namespace", "link": "Windwalker/DI/Exception.html", "name": "Windwalker\\DI\\Exception", "doc": "Namespace Windwalker\\DI\\Exception"},{"type": "Namespace", "link": "Windwalker/Data.html", "name": "Windwalker\\Data", "doc": "Namespace Windwalker\\Data"},{"type": "Namespace", "link": "Windwalker/DataMapper.html", "name": "Windwalker\\DataMapper", "doc": "Namespace Windwalker\\DataMapper"},{"type": "Namespace", "link": "Windwalker/DataMapper/Entity.html", "name": "Windwalker\\DataMapper\\Entity", "doc": "Namespace Windwalker\\DataMapper\\Entity"},{"type": "Namespace", "link": "Windwalker/Database.html", "name": "Windwalker\\Database", "doc": "Namespace Windwalker\\Database"},{"type": "Namespace", "link": "Windwalker/Database/Command.html", "name": "Windwalker\\Database\\Command", "doc": "Namespace Windwalker\\Database\\Command"},{"type": "Namespace", "link": "Windwalker/Database/Driver.html", "name": "Windwalker\\Database\\Driver", "doc": "Namespace Windwalker\\Database\\Driver"},{"type": "Namespace", "link": "Windwalker/Database/Driver/Mysql.html", "name": "Windwalker\\Database\\Driver\\Mysql", "doc": "Namespace Windwalker\\Database\\Driver\\Mysql"},{"type": "Namespace", "link": "Windwalker/Database/Driver/Pdo.html", "name": "Windwalker\\Database\\Driver\\Pdo", "doc": "Namespace Windwalker\\Database\\Driver\\Pdo"},{"type": "Namespace", "link": "Windwalker/Database/Driver/Postgresql.html", "name": "Windwalker\\Database\\Driver\\Postgresql", "doc": "Namespace Windwalker\\Database\\Driver\\Postgresql"},{"type": "Namespace", "link": "Windwalker/Database/Iterator.html", "name": "Windwalker\\Database\\Iterator", "doc": "Namespace Windwalker\\Database\\Iterator"},{"type": "Namespace", "link": "Windwalker/Database/Middleware.html", "name": "Windwalker\\Database\\Middleware", "doc": "Namespace Windwalker\\Database\\Middleware"},{"type": "Namespace", "link": "Windwalker/Database/Query.html", "name": "Windwalker\\Database\\Query", "doc": "Namespace Windwalker\\Database\\Query"},{"type": "Namespace", "link": "Windwalker/Database/Schema.html", "name": "Windwalker\\Database\\Schema", "doc": "Namespace Windwalker\\Database\\Schema"},{"type": "Namespace", "link": "Windwalker/Database/Schema/Column.html", "name": "Windwalker\\Database\\Schema\\Column", "doc": "Namespace Windwalker\\Database\\Schema\\Column"},{"type": "Namespace", "link": "Windwalker/Dom.html", "name": "Windwalker\\Dom", "doc": "Namespace Windwalker\\Dom"},{"type": "Namespace", "link": "Windwalker/Dom/Builder.html", "name": "Windwalker\\Dom\\Builder", "doc": "Namespace Windwalker\\Dom\\Builder"},{"type": "Namespace", "link": "Windwalker/Dom/Format.html", "name": "Windwalker\\Dom\\Format", "doc": "Namespace Windwalker\\Dom\\Format"},{"type": "Namespace", "link": "Windwalker/Dom/Helper.html", "name": "Windwalker\\Dom\\Helper", "doc": "Namespace Windwalker\\Dom\\Helper"},{"type": "Namespace", "link": "Windwalker/Dom/SimpleXml.html", "name": "Windwalker\\Dom\\SimpleXml", "doc": "Namespace Windwalker\\Dom\\SimpleXml"},{"type": "Namespace", "link": "Windwalker/Edge.html", "name": "Windwalker\\Edge", "doc": "Namespace Windwalker\\Edge"},{"type": "Namespace", "link": "Windwalker/Edge/Cache.html", "name": "Windwalker\\Edge\\Cache", "doc": "Namespace Windwalker\\Edge\\Cache"},{"type": "Namespace", "link": "Windwalker/Edge/Compiler.html", "name": "Windwalker\\Edge\\Compiler", "doc": "Namespace Windwalker\\Edge\\Compiler"},{"type": "Namespace", "link": "Windwalker/Edge/Extension.html", "name": "Windwalker\\Edge\\Extension", "doc": "Namespace Windwalker\\Edge\\Extension"},{"type": "Namespace", "link": "Windwalker/Edge/Loader.html", "name": "Windwalker\\Edge\\Loader", "doc": "Namespace Windwalker\\Edge\\Loader"},{"type": "Namespace", "link": "Windwalker/Environment.html", "name": "Windwalker\\Environment", "doc": "Namespace Windwalker\\Environment"},{"type": "Namespace", "link": "Windwalker/Environment/Browser.html", "name": "Windwalker\\Environment\\Browser", "doc": "Namespace Windwalker\\Environment\\Browser"},{"type": "Namespace", "link": "Windwalker/Event.html", "name": "Windwalker\\Event", "doc": "Namespace Windwalker\\Event"},{"type": "Namespace", "link": "Windwalker/Filesystem.html", "name": "Windwalker\\Filesystem", "doc": "Namespace Windwalker\\Filesystem"},{"type": "Namespace", "link": "Windwalker/Filesystem/Comparator.html", "name": "Windwalker\\Filesystem\\Comparator", "doc": "Namespace Windwalker\\Filesystem\\Comparator"},{"type": "Namespace", "link": "Windwalker/Filesystem/Exception.html", "name": "Windwalker\\Filesystem\\Exception", "doc": "Namespace Windwalker\\Filesystem\\Exception"},{"type": "Namespace", "link": "Windwalker/Filesystem/Iterator.html", "name": "Windwalker\\Filesystem\\Iterator", "doc": "Namespace Windwalker\\Filesystem\\Iterator"},{"type": "Namespace", "link": "Windwalker/Filesystem/Path.html", "name": "Windwalker\\Filesystem\\Path", "doc": "Namespace Windwalker\\Filesystem\\Path"},{"type": "Namespace", "link": "Windwalker/Filter.html", "name": "Windwalker\\Filter", "doc": "Namespace Windwalker\\Filter"},{"type": "Namespace", "link": "Windwalker/Filter/Cleaner.html", "name": "Windwalker\\Filter\\Cleaner", "doc": "Namespace Windwalker\\Filter\\Cleaner"},{"type": "Namespace", "link": "Windwalker/Filter/Unicode.html", "name": "Windwalker\\Filter\\Unicode", "doc": "Namespace Windwalker\\Filter\\Unicode"},{"type": "Namespace", "link": "Windwalker/Form.html", "name": "Windwalker\\Form", "doc": "Namespace Windwalker\\Form"},{"type": "Namespace", "link": "Windwalker/Form/Field.html", "name": "Windwalker\\Form\\Field", "doc": "Namespace Windwalker\\Form\\Field"},{"type": "Namespace", "link": "Windwalker/Form/Filter.html", "name": "Windwalker\\Form\\Filter", "doc": "Namespace Windwalker\\Form\\Filter"},{"type": "Namespace", "link": "Windwalker/Form/Renderer.html", "name": "Windwalker\\Form\\Renderer", "doc": "Namespace Windwalker\\Form\\Renderer"},{"type": "Namespace", "link": "Windwalker/Form/Validate.html", "name": "Windwalker\\Form\\Validate", "doc": "Namespace Windwalker\\Form\\Validate"},{"type": "Namespace", "link": "Windwalker/Html.html", "name": "Windwalker\\Html", "doc": "Namespace Windwalker\\Html"},{"type": "Namespace", "link": "Windwalker/Html/Enum.html", "name": "Windwalker\\Html\\Enum", "doc": "Namespace Windwalker\\Html\\Enum"},{"type": "Namespace", "link": "Windwalker/Html/Form.html", "name": "Windwalker\\Html\\Form", "doc": "Namespace Windwalker\\Html\\Form"},{"type": "Namespace", "link": "Windwalker/Html/Grid.html", "name": "Windwalker\\Html\\Grid", "doc": "Namespace Windwalker\\Html\\Grid"},{"type": "Namespace", "link": "Windwalker/Html/Helper.html", "name": "Windwalker\\Html\\Helper", "doc": "Namespace Windwalker\\Html\\Helper"},{"type": "Namespace", "link": "Windwalker/Html/Media.html", "name": "Windwalker\\Html\\Media", "doc": "Namespace Windwalker\\Html\\Media"},{"type": "Namespace", "link": "Windwalker/Html/Select.html", "name": "Windwalker\\Html\\Select", "doc": "Namespace Windwalker\\Html\\Select"},{"type": "Namespace", "link": "Windwalker/Http.html", "name": "Windwalker\\Http", "doc": "Namespace Windwalker\\Http"},{"type": "Namespace", "link": "Windwalker/Http/Helper.html", "name": "Windwalker\\Http\\Helper", "doc": "Namespace Windwalker\\Http\\Helper"},{"type": "Namespace", "link": "Windwalker/Http/Output.html", "name": "Windwalker\\Http\\Output", "doc": "Namespace Windwalker\\Http\\Output"},{"type": "Namespace", "link": "Windwalker/Http/Request.html", "name": "Windwalker\\Http\\Request", "doc": "Namespace Windwalker\\Http\\Request"},{"type": "Namespace", "link": "Windwalker/Http/Response.html", "name": "Windwalker\\Http\\Response", "doc": "Namespace Windwalker\\Http\\Response"},{"type": "Namespace", "link": "Windwalker/Http/Stream.html", "name": "Windwalker\\Http\\Stream", "doc": "Namespace Windwalker\\Http\\Stream"},{"type": "Namespace", "link": "Windwalker/Http/Transport.html", "name": "Windwalker\\Http\\Transport", "doc": "Namespace Windwalker\\Http\\Transport"},{"type": "Namespace", "link": "Windwalker/IO.html", "name": "Windwalker\\IO", "doc": "Namespace Windwalker\\IO"},{"type": "Namespace", "link": "Windwalker/IO/Cli.html", "name": "Windwalker\\IO\\Cli", "doc": "Namespace Windwalker\\IO\\Cli"},{"type": "Namespace", "link": "Windwalker/IO/Cli/Color.html", "name": "Windwalker\\IO\\Cli\\Color", "doc": "Namespace Windwalker\\IO\\Cli\\Color"},{"type": "Namespace", "link": "Windwalker/IO/Cli/Input.html", "name": "Windwalker\\IO\\Cli\\Input", "doc": "Namespace Windwalker\\IO\\Cli\\Input"},{"type": "Namespace", "link": "Windwalker/IO/Cli/Output.html", "name": "Windwalker\\IO\\Cli\\Output", "doc": "Namespace Windwalker\\IO\\Cli\\Output"},{"type": "Namespace", "link": "Windwalker/IO/Filter.html", "name": "Windwalker\\IO\\Filter", "doc": "Namespace Windwalker\\IO\\Filter"},{"type": "Namespace", "link": "Windwalker/Language.html", "name": "Windwalker\\Language", "doc": "Namespace Windwalker\\Language"},{"type": "Namespace", "link": "Windwalker/Language/Format.html", "name": "Windwalker\\Language\\Format", "doc": "Namespace Windwalker\\Language\\Format"},{"type": "Namespace", "link": "Windwalker/Language/Loader.html", "name": "Windwalker\\Language\\Loader", "doc": "Namespace Windwalker\\Language\\Loader"},{"type": "Namespace", "link": "Windwalker/Language/Localise.html", "name": "Windwalker\\Language\\Localise", "doc": "Namespace Windwalker\\Language\\Localise"},{"type": "Namespace", "link": "Windwalker/Loader.html", "name": "Windwalker\\Loader", "doc": "Namespace Windwalker\\Loader"},{"type": "Namespace", "link": "Windwalker/Loader/Loader.html", "name": "Windwalker\\Loader\\Loader", "doc": "Namespace Windwalker\\Loader\\Loader"},{"type": "Namespace", "link": "Windwalker/Middleware.html", "name": "Windwalker\\Middleware", "doc": "Namespace Windwalker\\Middleware"},{"type": "Namespace", "link": "Windwalker/Middleware/Chain.html", "name": "Windwalker\\Middleware\\Chain", "doc": "Namespace Windwalker\\Middleware\\Chain"},{"type": "Namespace", "link": "Windwalker/Profiler.html", "name": "Windwalker\\Profiler", "doc": "Namespace Windwalker\\Profiler"},{"type": "Namespace", "link": "Windwalker/Profiler/Point.html", "name": "Windwalker\\Profiler\\Point", "doc": "Namespace Windwalker\\Profiler\\Point"},{"type": "Namespace", "link": "Windwalker/Profiler/Renderer.html", "name": "Windwalker\\Profiler\\Renderer", "doc": "Namespace Windwalker\\Profiler\\Renderer"},{"type": "Namespace", "link": "Windwalker/Query.html", "name": "Windwalker\\Query", "doc": "Namespace Windwalker\\Query"},{"type": "Namespace", "link": "Windwalker/Query/Cubrid.html", "name": "Windwalker\\Query\\Cubrid", "doc": "Namespace Windwalker\\Query\\Cubrid"},{"type": "Namespace", "link": "Windwalker/Query/Mariadb.html", "name": "Windwalker\\Query\\Mariadb", "doc": "Namespace Windwalker\\Query\\Mariadb"},{"type": "Namespace", "link": "Windwalker/Query/Mysql.html", "name": "Windwalker\\Query\\Mysql", "doc": "Namespace Windwalker\\Query\\Mysql"},{"type": "Namespace", "link": "Windwalker/Query/Oracle.html", "name": "Windwalker\\Query\\Oracle", "doc": "Namespace Windwalker\\Query\\Oracle"},{"type": "Namespace", "link": "Windwalker/Query/Pdo.html", "name": "Windwalker\\Query\\Pdo", "doc": "Namespace Windwalker\\Query\\Pdo"},{"type": "Namespace", "link": "Windwalker/Query/Postgresql.html", "name": "Windwalker\\Query\\Postgresql", "doc": "Namespace Windwalker\\Query\\Postgresql"},{"type": "Namespace", "link": "Windwalker/Query/Query.html", "name": "Windwalker\\Query\\Query", "doc": "Namespace Windwalker\\Query\\Query"},{"type": "Namespace", "link": "Windwalker/Query/Sqlite.html", "name": "Windwalker\\Query\\Sqlite", "doc": "Namespace Windwalker\\Query\\Sqlite"},{"type": "Namespace", "link": "Windwalker/Query/Sqlserv.html", "name": "Windwalker\\Query\\Sqlserv", "doc": "Namespace Windwalker\\Query\\Sqlserv"},{"type": "Namespace", "link": "Windwalker/Record.html", "name": "Windwalker\\Record", "doc": "Namespace Windwalker\\Record"},{"type": "Namespace", "link": "Windwalker/Record/Exception.html", "name": "Windwalker\\Record\\Exception", "doc": "Namespace Windwalker\\Record\\Exception"},{"type": "Namespace", "link": "Windwalker/Renderer.html", "name": "Windwalker\\Renderer", "doc": "Namespace Windwalker\\Renderer"},{"type": "Namespace", "link": "Windwalker/Renderer/Blade.html", "name": "Windwalker\\Renderer\\Blade", "doc": "Namespace Windwalker\\Renderer\\Blade"},{"type": "Namespace", "link": "Windwalker/Renderer/Edge.html", "name": "Windwalker\\Renderer\\Edge", "doc": "Namespace Windwalker\\Renderer\\Edge"},{"type": "Namespace", "link": "Windwalker/Renderer/Twig.html", "name": "Windwalker\\Renderer\\Twig", "doc": "Namespace Windwalker\\Renderer\\Twig"},{"type": "Namespace", "link": "Windwalker/Router.html", "name": "Windwalker\\Router", "doc": "Namespace Windwalker\\Router"},{"type": "Namespace", "link": "Windwalker/Router/Compiler.html", "name": "Windwalker\\Router\\Compiler", "doc": "Namespace Windwalker\\Router\\Compiler"},{"type": "Namespace", "link": "Windwalker/Router/Exception.html", "name": "Windwalker\\Router\\Exception", "doc": "Namespace Windwalker\\Router\\Exception"},{"type": "Namespace", "link": "Windwalker/Router/Matcher.html", "name": "Windwalker\\Router\\Matcher", "doc": "Namespace Windwalker\\Router\\Matcher"},{"type": "Namespace", "link": "Windwalker/Session.html", "name": "Windwalker\\Session", "doc": "Namespace Windwalker\\Session"},{"type": "Namespace", "link": "Windwalker/Session/Bag.html", "name": "Windwalker\\Session\\Bag", "doc": "Namespace Windwalker\\Session\\Bag"},{"type": "Namespace", "link": "Windwalker/Session/Bridge.html", "name": "Windwalker\\Session\\Bridge", "doc": "Namespace Windwalker\\Session\\Bridge"},{"type": "Namespace", "link": "Windwalker/Session/Database.html", "name": "Windwalker\\Session\\Database", "doc": "Namespace Windwalker\\Session\\Database"},{"type": "Namespace", "link": "Windwalker/Session/Handler.html", "name": "Windwalker\\Session\\Handler", "doc": "Namespace Windwalker\\Session\\Handler"},{"type": "Namespace", "link": "Windwalker/String.html", "name": "Windwalker\\String", "doc": "Namespace Windwalker\\String"},{"type": "Namespace", "link": "Windwalker/Structure.html", "name": "Windwalker\\Structure", "doc": "Namespace Windwalker\\Structure"},{"type": "Namespace", "link": "Windwalker/Structure/Format.html", "name": "Windwalker\\Structure\\Format", "doc": "Namespace Windwalker\\Structure\\Format"},{"type": "Namespace", "link": "Windwalker/Uri.html", "name": "Windwalker\\Uri", "doc": "Namespace Windwalker\\Uri"},{"type": "Namespace", "link": "Windwalker/Utilities.html", "name": "Windwalker\\Utilities", "doc": "Namespace Windwalker\\Utilities"},{"type": "Namespace", "link": "Windwalker/Utilities/Classes.html", "name": "Windwalker\\Utilities\\Classes", "doc": "Namespace Windwalker\\Utilities\\Classes"},{"type": "Namespace", "link": "Windwalker/Utilities/Iterator.html", "name": "Windwalker\\Utilities\\Iterator", "doc": "Namespace Windwalker\\Utilities\\Iterator"},{"type": "Namespace", "link": "Windwalker/Utilities/Queue.html", "name": "Windwalker\\Utilities\\Queue", "doc": "Namespace Windwalker\\Utilities\\Queue"},{"type": "Namespace", "link": "Windwalker/Utilities/Reflection.html", "name": "Windwalker\\Utilities\\Reflection", "doc": "Namespace Windwalker\\Utilities\\Reflection"},{"type": "Namespace", "link": "Windwalker/Validator.html", "name": "Windwalker\\Validator", "doc": "Namespace Windwalker\\Validator"},{"type": "Namespace", "link": "Windwalker/Validator/Rule.html", "name": "Windwalker\\Validator\\Rule", "doc": "Namespace Windwalker\\Validator\\Rule"},
            {"type": "Interface",  "link": "JsonSerializable.html", "name": "JsonSerializable", "doc": "&quot;Interface JsonSerializable&quot;"},
                                                        {"type": "Method", "fromName": "JsonSerializable", "fromLink": "JsonSerializable.html", "link": "JsonSerializable.html#method_jsonSerialize", "name": "JsonSerializable::jsonSerialize", "doc": "&quot;Return data which should be serialized by json_encode().&quot;"},
            
            {"type": "Interface",  "link": "SessionHandlerInterface.html", "name": "SessionHandlerInterface", "doc": "&quot;SessionHandler Interface&quot;"},
                                                        {"type": "Method", "fromName": "SessionHandlerInterface", "fromLink": "SessionHandlerInterface.html", "link": "SessionHandlerInterface.html#method_close", "name": "SessionHandlerInterface::close", "doc": "&quot;Close the session&quot;"},
                    {"type": "Method", "fromName": "SessionHandlerInterface", "fromLink": "SessionHandlerInterface.html", "link": "SessionHandlerInterface.html#method_destroy", "name": "SessionHandlerInterface::destroy", "doc": "&quot;Destroy a session&quot;"},
                    {"type": "Method", "fromName": "SessionHandlerInterface", "fromLink": "SessionHandlerInterface.html", "link": "SessionHandlerInterface.html#method_gc", "name": "SessionHandlerInterface::gc", "doc": "&quot;Cleanup old sessions&quot;"},
                    {"type": "Method", "fromName": "SessionHandlerInterface", "fromLink": "SessionHandlerInterface.html", "link": "SessionHandlerInterface.html#method_open", "name": "SessionHandlerInterface::open", "doc": "&quot;Initialize session&quot;"},
                    {"type": "Method", "fromName": "SessionHandlerInterface", "fromLink": "SessionHandlerInterface.html", "link": "SessionHandlerInterface.html#method_read", "name": "SessionHandlerInterface::read", "doc": "&quot;Read session data&quot;"},
                    {"type": "Method", "fromName": "SessionHandlerInterface", "fromLink": "SessionHandlerInterface.html", "link": "SessionHandlerInterface.html#method_write", "name": "SessionHandlerInterface::write", "doc": "&quot;Write session data&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Authentication", "fromLink": "Windwalker/Authentication.html", "link": "Windwalker/Authentication/AuthenticationInterface.html", "name": "Windwalker\\Authentication\\AuthenticationInterface", "doc": "&quot;Interface AuthenticationInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Authentication\\AuthenticationInterface", "fromLink": "Windwalker/Authentication/AuthenticationInterface.html", "link": "Windwalker/Authentication/AuthenticationInterface.html#method_authenticate", "name": "Windwalker\\Authentication\\AuthenticationInterface::authenticate", "doc": "&quot;authenticate&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authentication\\AuthenticationInterface", "fromLink": "Windwalker/Authentication/AuthenticationInterface.html", "link": "Windwalker/Authentication/AuthenticationInterface.html#method_addMethod", "name": "Windwalker\\Authentication\\AuthenticationInterface::addMethod", "doc": "&quot;addMethod&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authentication\\AuthenticationInterface", "fromLink": "Windwalker/Authentication/AuthenticationInterface.html", "link": "Windwalker/Authentication/AuthenticationInterface.html#method_getResults", "name": "Windwalker\\Authentication\\AuthenticationInterface::getResults", "doc": "&quot;Method to get property Results&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authentication\\AuthenticationInterface", "fromLink": "Windwalker/Authentication/AuthenticationInterface.html", "link": "Windwalker/Authentication/AuthenticationInterface.html#method_getCredential", "name": "Windwalker\\Authentication\\AuthenticationInterface::getCredential", "doc": "&quot;Method to get property Credential&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Authentication\\Method", "fromLink": "Windwalker/Authentication/Method.html", "link": "Windwalker/Authentication/Method/MethodInterface.html", "name": "Windwalker\\Authentication\\Method\\MethodInterface", "doc": "&quot;Interface MethodInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Authentication\\Method\\MethodInterface", "fromLink": "Windwalker/Authentication/Method/MethodInterface.html", "link": "Windwalker/Authentication/Method/MethodInterface.html#method_authenticate", "name": "Windwalker\\Authentication\\Method\\MethodInterface::authenticate", "doc": "&quot;authenticate&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authentication\\Method\\MethodInterface", "fromLink": "Windwalker/Authentication/Method/MethodInterface.html", "link": "Windwalker/Authentication/Method/MethodInterface.html#method_getStatus", "name": "Windwalker\\Authentication\\Method\\MethodInterface::getStatus", "doc": "&quot;getResult&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Authorisation", "fromLink": "Windwalker/Authorisation.html", "link": "Windwalker/Authorisation/AuthorisationInterface.html", "name": "Windwalker\\Authorisation\\AuthorisationInterface", "doc": "&quot;The AuthorisationInterface class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Authorisation\\AuthorisationInterface", "fromLink": "Windwalker/Authorisation/AuthorisationInterface.html", "link": "Windwalker/Authorisation/AuthorisationInterface.html#method_authorise", "name": "Windwalker\\Authorisation\\AuthorisationInterface::authorise", "doc": "&quot;authorise&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authorisation\\AuthorisationInterface", "fromLink": "Windwalker/Authorisation/AuthorisationInterface.html", "link": "Windwalker/Authorisation/AuthorisationInterface.html#method_addPolicy", "name": "Windwalker\\Authorisation\\AuthorisationInterface::addPolicy", "doc": "&quot;addPolicy&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authorisation\\AuthorisationInterface", "fromLink": "Windwalker/Authorisation/AuthorisationInterface.html", "link": "Windwalker/Authorisation/AuthorisationInterface.html#method_registerPolicyProvider", "name": "Windwalker\\Authorisation\\AuthorisationInterface::registerPolicyProvider", "doc": "&quot;registerPolicy&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Authorisation", "fromLink": "Windwalker/Authorisation.html", "link": "Windwalker/Authorisation/PolicyInterface.html", "name": "Windwalker\\Authorisation\\PolicyInterface", "doc": "&quot;The PolicyInterface class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Authorisation\\PolicyInterface", "fromLink": "Windwalker/Authorisation/PolicyInterface.html", "link": "Windwalker/Authorisation/PolicyInterface.html#method_authorise", "name": "Windwalker\\Authorisation\\PolicyInterface::authorise", "doc": "&quot;authorise&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Authorisation", "fromLink": "Windwalker/Authorisation.html", "link": "Windwalker/Authorisation/PolicyProviderInterface.html", "name": "Windwalker\\Authorisation\\PolicyProviderInterface", "doc": "&quot;Interface PolicyInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Authorisation\\PolicyProviderInterface", "fromLink": "Windwalker/Authorisation/PolicyProviderInterface.html", "link": "Windwalker/Authorisation/PolicyProviderInterface.html#method_register", "name": "Windwalker\\Authorisation\\PolicyProviderInterface::register", "doc": "&quot;register&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Cache", "fromLink": "Windwalker/Cache.html", "link": "Windwalker/Cache/CacheInterface.html", "name": "Windwalker\\Cache\\CacheInterface", "doc": "&quot;Interface CacheInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Cache\\CacheInterface", "fromLink": "Windwalker/Cache/CacheInterface.html", "link": "Windwalker/Cache/CacheInterface.html#method_get", "name": "Windwalker\\Cache\\CacheInterface::get", "doc": "&quot;Here we pass in a cache key to be fetched from the cache.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\CacheInterface", "fromLink": "Windwalker/Cache/CacheInterface.html", "link": "Windwalker/Cache/CacheInterface.html#method_set", "name": "Windwalker\\Cache\\CacheInterface::set", "doc": "&quot;Persisting our data in the cache, uniquely referenced by a key with an optional expiration TTL time.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\CacheInterface", "fromLink": "Windwalker/Cache/CacheInterface.html", "link": "Windwalker/Cache/CacheInterface.html#method_remove", "name": "Windwalker\\Cache\\CacheInterface::remove", "doc": "&quot;Remove an item from the cache by its unique key&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\CacheInterface", "fromLink": "Windwalker/Cache/CacheInterface.html", "link": "Windwalker/Cache/CacheInterface.html#method_call", "name": "Windwalker\\Cache\\CacheInterface::call", "doc": "&quot;Fetch data from a callback if item not exists.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\CacheInterface", "fromLink": "Windwalker/Cache/CacheInterface.html", "link": "Windwalker/Cache/CacheInterface.html#method_getMultiple", "name": "Windwalker\\Cache\\CacheInterface::getMultiple", "doc": "&quot;Obtain multiple CacheItems by their unique keys&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\CacheInterface", "fromLink": "Windwalker/Cache/CacheInterface.html", "link": "Windwalker/Cache/CacheInterface.html#method_setMultiple", "name": "Windwalker\\Cache\\CacheInterface::setMultiple", "doc": "&quot;Persisting a set of key =&gt; value pairs in the cache, with an optional TTL.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\CacheInterface", "fromLink": "Windwalker/Cache/CacheInterface.html", "link": "Windwalker/Cache/CacheInterface.html#method_removeMultiple", "name": "Windwalker\\Cache\\CacheInterface::removeMultiple", "doc": "&quot;Remove multiple cache items in a single operation&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\CacheInterface", "fromLink": "Windwalker/Cache/CacheInterface.html", "link": "Windwalker/Cache/CacheInterface.html#method_clear", "name": "Windwalker\\Cache\\CacheInterface::clear", "doc": "&quot;This will wipe out the entire cache&#039;s keys&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\CacheInterface", "fromLink": "Windwalker/Cache/CacheInterface.html", "link": "Windwalker/Cache/CacheInterface.html#method_exists", "name": "Windwalker\\Cache\\CacheInterface::exists", "doc": "&quot;exists&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Cache\\Serializer", "fromLink": "Windwalker/Cache/Serializer.html", "link": "Windwalker/Cache/Serializer/SerializerInterface.html", "name": "Windwalker\\Cache\\Serializer\\SerializerInterface", "doc": "&quot;Interface DataHandlerInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Cache\\Serializer\\SerializerInterface", "fromLink": "Windwalker/Cache/Serializer/SerializerInterface.html", "link": "Windwalker/Cache/Serializer/SerializerInterface.html#method_serialize", "name": "Windwalker\\Cache\\Serializer\\SerializerInterface::serialize", "doc": "&quot;Encode data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Serializer\\SerializerInterface", "fromLink": "Windwalker/Cache/Serializer/SerializerInterface.html", "link": "Windwalker/Cache/Serializer/SerializerInterface.html#method_unserialize", "name": "Windwalker\\Cache\\Serializer\\SerializerInterface::unserialize", "doc": "&quot;Decode data.&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Cache\\Storage", "fromLink": "Windwalker/Cache/Storage.html", "link": "Windwalker/Cache/Storage/CacheStorageInterface.html", "name": "Windwalker\\Cache\\Storage\\CacheStorageInterface", "doc": "&quot;Class CacheStorageInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\CacheStorageInterface", "fromLink": "Windwalker/Cache/Storage/CacheStorageInterface.html", "link": "Windwalker/Cache/Storage/CacheStorageInterface.html#method_getItem", "name": "Windwalker\\Cache\\Storage\\CacheStorageInterface::getItem", "doc": "&quot;Here we pass in a cache key to be fetched from the cache.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\CacheStorageInterface", "fromLink": "Windwalker/Cache/Storage/CacheStorageInterface.html", "link": "Windwalker/Cache/Storage/CacheStorageInterface.html#method_getItems", "name": "Windwalker\\Cache\\Storage\\CacheStorageInterface::getItems", "doc": "&quot;getItems&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\CacheStorageInterface", "fromLink": "Windwalker/Cache/Storage/CacheStorageInterface.html", "link": "Windwalker/Cache/Storage/CacheStorageInterface.html#method_hasItem", "name": "Windwalker\\Cache\\Storage\\CacheStorageInterface::hasItem", "doc": "&quot;Method to determine whether a storage entry has been set for a key.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\CacheStorageInterface", "fromLink": "Windwalker/Cache/Storage/CacheStorageInterface.html", "link": "Windwalker/Cache/Storage/CacheStorageInterface.html#method_clear", "name": "Windwalker\\Cache\\Storage\\CacheStorageInterface::clear", "doc": "&quot;This will wipe out the entire cache&#039;s keys&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\CacheStorageInterface", "fromLink": "Windwalker/Cache/Storage/CacheStorageInterface.html", "link": "Windwalker/Cache/Storage/CacheStorageInterface.html#method_deleteItem", "name": "Windwalker\\Cache\\Storage\\CacheStorageInterface::deleteItem", "doc": "&quot;Remove an item from the cache by its unique key&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\CacheStorageInterface", "fromLink": "Windwalker/Cache/Storage/CacheStorageInterface.html", "link": "Windwalker/Cache/Storage/CacheStorageInterface.html#method_deleteItems", "name": "Windwalker\\Cache\\Storage\\CacheStorageInterface::deleteItems", "doc": "&quot;Removes multiple items from the pool.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\CacheStorageInterface", "fromLink": "Windwalker/Cache/Storage/CacheStorageInterface.html", "link": "Windwalker/Cache/Storage/CacheStorageInterface.html#method_save", "name": "Windwalker\\Cache\\Storage\\CacheStorageInterface::save", "doc": "&quot;Persisting our data in the cache, uniquely referenced by a key with an optional expiration TTL time.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\CacheStorageInterface", "fromLink": "Windwalker/Cache/Storage/CacheStorageInterface.html", "link": "Windwalker/Cache/Storage/CacheStorageInterface.html#method_saveDeferred", "name": "Windwalker\\Cache\\Storage\\CacheStorageInterface::saveDeferred", "doc": "&quot;Sets a cache item to be persisted later.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\CacheStorageInterface", "fromLink": "Windwalker/Cache/Storage/CacheStorageInterface.html", "link": "Windwalker/Cache/Storage/CacheStorageInterface.html#method_commit", "name": "Windwalker\\Cache\\Storage\\CacheStorageInterface::commit", "doc": "&quot;Persists any deferred cache items.&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Console\\Descriptor", "fromLink": "Windwalker/Console/Descriptor.html", "link": "Windwalker/Console/Descriptor/DescriptorHelperInterface.html", "name": "Windwalker\\Console\\Descriptor\\DescriptorHelperInterface", "doc": "&quot;A descriptor helper to get different descriptor and render it.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Console\\Descriptor\\DescriptorHelperInterface", "fromLink": "Windwalker/Console/Descriptor/DescriptorHelperInterface.html", "link": "Windwalker/Console/Descriptor/DescriptorHelperInterface.html#method_describe", "name": "Windwalker\\Console\\Descriptor\\DescriptorHelperInterface::describe", "doc": "&quot;Describe a command detail.&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Console\\Descriptor", "fromLink": "Windwalker/Console/Descriptor.html", "link": "Windwalker/Console/Descriptor/DescriptorInterface.html", "name": "Windwalker\\Console\\Descriptor\\DescriptorInterface", "doc": "&quot;Interface of Descriptor.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Console\\Descriptor\\DescriptorInterface", "fromLink": "Windwalker/Console/Descriptor/DescriptorInterface.html", "link": "Windwalker/Console/Descriptor/DescriptorInterface.html#method_addItem", "name": "Windwalker\\Console\\Descriptor\\DescriptorInterface::addItem", "doc": "&quot;Add an item to describe.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Descriptor\\DescriptorInterface", "fromLink": "Windwalker/Console/Descriptor/DescriptorInterface.html", "link": "Windwalker/Console/Descriptor/DescriptorInterface.html#method_render", "name": "Windwalker\\Console\\Descriptor\\DescriptorInterface::render", "doc": "&quot;Render all items description.&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Console\\IO", "fromLink": "Windwalker/Console/IO.html", "link": "Windwalker/Console/IO/IOInterface.html", "name": "Windwalker\\Console\\IO\\IOInterface", "doc": "&quot;The IOInterface class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IOInterface", "fromLink": "Windwalker/Console/IO/IOInterface.html", "link": "Windwalker/Console/IO/IOInterface.html#method_shiftArgument", "name": "Windwalker\\Console\\IO\\IOInterface::shiftArgument", "doc": "&quot;shiftArgument&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IOInterface", "fromLink": "Windwalker/Console/IO/IOInterface.html", "link": "Windwalker/Console/IO/IOInterface.html#method_unshiftArgument", "name": "Windwalker\\Console\\IO\\IOInterface::unshiftArgument", "doc": "&quot;unshiftArgument&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IOInterface", "fromLink": "Windwalker/Console/IO/IOInterface.html", "link": "Windwalker/Console/IO/IOInterface.html#method_popArgument", "name": "Windwalker\\Console\\IO\\IOInterface::popArgument", "doc": "&quot;popArgument&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IOInterface", "fromLink": "Windwalker/Console/IO/IOInterface.html", "link": "Windwalker/Console/IO/IOInterface.html#method_pushArgument", "name": "Windwalker\\Console\\IO\\IOInterface::pushArgument", "doc": "&quot;pushArgument&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IOInterface", "fromLink": "Windwalker/Console/IO/IOInterface.html", "link": "Windwalker/Console/IO/IOInterface.html#method_setArguments", "name": "Windwalker\\Console\\IO\\IOInterface::setArguments", "doc": "&quot;set Arguments&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IOInterface", "fromLink": "Windwalker/Console/IO/IOInterface.html", "link": "Windwalker/Console/IO/IOInterface.html#method_addColor", "name": "Windwalker\\Console\\IO\\IOInterface::addColor", "doc": "&quot;addColor&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IOInterface", "fromLink": "Windwalker/Console/IO/IOInterface.html", "link": "Windwalker/Console/IO/IOInterface.html#method_useColor", "name": "Windwalker\\Console\\IO\\IOInterface::useColor", "doc": "&quot;useColor&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IOInterface", "fromLink": "Windwalker/Console/IO/IOInterface.html", "link": "Windwalker/Console/IO/IOInterface.html#method___clone", "name": "Windwalker\\Console\\IO\\IOInterface::__clone", "doc": "&quot;__clone&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IOInterface", "fromLink": "Windwalker/Console/IO/IOInterface.html", "link": "Windwalker/Console/IO/IOInterface.html#method_setOutputStream", "name": "Windwalker\\Console\\IO\\IOInterface::setOutputStream", "doc": "&quot;setOutStream&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IOInterface", "fromLink": "Windwalker/Console/IO/IOInterface.html", "link": "Windwalker/Console/IO/IOInterface.html#method_setErrorStream", "name": "Windwalker\\Console\\IO\\IOInterface::setErrorStream", "doc": "&quot;Method to set property errorStream&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IOInterface", "fromLink": "Windwalker/Console/IO/IOInterface.html", "link": "Windwalker/Console/IO/IOInterface.html#method_setInputStream", "name": "Windwalker\\Console\\IO\\IOInterface::setInputStream", "doc": "&quot;setInputStream&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Console\\Prompter", "fromLink": "Windwalker/Console/Prompter.html", "link": "Windwalker/Console/Prompter/PrompterInterface.html", "name": "Windwalker\\Console\\Prompter\\PrompterInterface", "doc": "&quot;Prompter Interface.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\PrompterInterface", "fromLink": "Windwalker/Console/Prompter/PrompterInterface.html", "link": "Windwalker/Console/Prompter/PrompterInterface.html#method_ask", "name": "Windwalker\\Console\\Prompter\\PrompterInterface::ask", "doc": "&quot;Show prompt to ask user.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\PrompterInterface", "fromLink": "Windwalker/Console/Prompter/PrompterInterface.html", "link": "Windwalker/Console/Prompter/PrompterInterface.html#method___invoke", "name": "Windwalker\\Console\\Prompter\\PrompterInterface::__invoke", "doc": "&quot;Proxy to ask method.&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Crypt\\Cipher", "fromLink": "Windwalker/Crypt/Cipher.html", "link": "Windwalker/Crypt/Cipher/CipherInterface.html", "name": "Windwalker\\Crypt\\Cipher\\CipherInterface", "doc": "&quot;Interface CipherInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Crypt\\Cipher\\CipherInterface", "fromLink": "Windwalker/Crypt/Cipher/CipherInterface.html", "link": "Windwalker/Crypt/Cipher/CipherInterface.html#method_decrypt", "name": "Windwalker\\Crypt\\Cipher\\CipherInterface::decrypt", "doc": "&quot;Method to decrypt a data string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\Cipher\\CipherInterface", "fromLink": "Windwalker/Crypt/Cipher/CipherInterface.html", "link": "Windwalker/Crypt/Cipher/CipherInterface.html#method_encrypt", "name": "Windwalker\\Crypt\\Cipher\\CipherInterface::encrypt", "doc": "&quot;Method to encrypt a data string.&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Crypt", "fromLink": "Windwalker/Crypt.html", "link": "Windwalker/Crypt/CryptInterface.html", "name": "Windwalker\\Crypt\\CryptInterface", "doc": "&quot;Interface CryptInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Crypt\\CryptInterface", "fromLink": "Windwalker/Crypt/CryptInterface.html", "link": "Windwalker/Crypt/CryptInterface.html#method_encrypt", "name": "Windwalker\\Crypt\\CryptInterface::encrypt", "doc": "&quot;encrypt&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\CryptInterface", "fromLink": "Windwalker/Crypt/CryptInterface.html", "link": "Windwalker/Crypt/CryptInterface.html#method_decrypt", "name": "Windwalker\\Crypt\\CryptInterface::decrypt", "doc": "&quot;decrypt&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\CryptInterface", "fromLink": "Windwalker/Crypt/CryptInterface.html", "link": "Windwalker/Crypt/CryptInterface.html#method_verify", "name": "Windwalker\\Crypt\\CryptInterface::verify", "doc": "&quot;match&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\DI", "fromLink": "Windwalker/DI.html", "link": "Windwalker/DI/ContainerAwareInterface.html", "name": "Windwalker\\DI\\ContainerAwareInterface", "doc": "&quot;Interface ContainerAwareInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\DI\\ContainerAwareInterface", "fromLink": "Windwalker/DI/ContainerAwareInterface.html", "link": "Windwalker/DI/ContainerAwareInterface.html#method_getContainer", "name": "Windwalker\\DI\\ContainerAwareInterface::getContainer", "doc": "&quot;Get the DI container.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\ContainerAwareInterface", "fromLink": "Windwalker/DI/ContainerAwareInterface.html", "link": "Windwalker/DI/ContainerAwareInterface.html#method_setContainer", "name": "Windwalker\\DI\\ContainerAwareInterface::setContainer", "doc": "&quot;Set the DI container.&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\DI", "fromLink": "Windwalker/DI.html", "link": "Windwalker/DI/ServiceProviderInterface.html", "name": "Windwalker\\DI\\ServiceProviderInterface", "doc": "&quot;Interface ServiceProviderInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\DI\\ServiceProviderInterface", "fromLink": "Windwalker/DI/ServiceProviderInterface.html", "link": "Windwalker/DI/ServiceProviderInterface.html#method_register", "name": "Windwalker\\DI\\ServiceProviderInterface::register", "doc": "&quot;Registers the service provider with a DI container.&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\DataMapper", "fromLink": "Windwalker/DataMapper.html", "link": "Windwalker/DataMapper/DataMapperInterface.html", "name": "Windwalker\\DataMapper\\DataMapperInterface", "doc": "&quot;DataMapper Interface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapperInterface", "fromLink": "Windwalker/DataMapper/DataMapperInterface.html", "link": "Windwalker/DataMapper/DataMapperInterface.html#method_find", "name": "Windwalker\\DataMapper\\DataMapperInterface::find", "doc": "&quot;Find records and return data set.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapperInterface", "fromLink": "Windwalker/DataMapper/DataMapperInterface.html", "link": "Windwalker/DataMapper/DataMapperInterface.html#method_findAll", "name": "Windwalker\\DataMapper\\DataMapperInterface::findAll", "doc": "&quot;Find records without where conditions and return data set.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapperInterface", "fromLink": "Windwalker/DataMapper/DataMapperInterface.html", "link": "Windwalker/DataMapper/DataMapperInterface.html#method_findOne", "name": "Windwalker\\DataMapper\\DataMapperInterface::findOne", "doc": "&quot;Find one record and return a data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapperInterface", "fromLink": "Windwalker/DataMapper/DataMapperInterface.html", "link": "Windwalker/DataMapper/DataMapperInterface.html#method_findColumn", "name": "Windwalker\\DataMapper\\DataMapperInterface::findColumn", "doc": "&quot;Find column as an array.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapperInterface", "fromLink": "Windwalker/DataMapper/DataMapperInterface.html", "link": "Windwalker/DataMapper/DataMapperInterface.html#method_create", "name": "Windwalker\\DataMapper\\DataMapperInterface::create", "doc": "&quot;Create records by data set.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapperInterface", "fromLink": "Windwalker/DataMapper/DataMapperInterface.html", "link": "Windwalker/DataMapper/DataMapperInterface.html#method_createOne", "name": "Windwalker\\DataMapper\\DataMapperInterface::createOne", "doc": "&quot;Create one record by data object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapperInterface", "fromLink": "Windwalker/DataMapper/DataMapperInterface.html", "link": "Windwalker/DataMapper/DataMapperInterface.html#method_update", "name": "Windwalker\\DataMapper\\DataMapperInterface::update", "doc": "&quot;Update records by data set. Every data depend on this table&#039;s primary key to update itself.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapperInterface", "fromLink": "Windwalker/DataMapper/DataMapperInterface.html", "link": "Windwalker/DataMapper/DataMapperInterface.html#method_updateBatch", "name": "Windwalker\\DataMapper\\DataMapperInterface::updateBatch", "doc": "&quot;Using one data to update multiple rows, filter by where conditions.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapperInterface", "fromLink": "Windwalker/DataMapper/DataMapperInterface.html", "link": "Windwalker/DataMapper/DataMapperInterface.html#method_updateOne", "name": "Windwalker\\DataMapper\\DataMapperInterface::updateOne", "doc": "&quot;Same as update(), just update one row.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapperInterface", "fromLink": "Windwalker/DataMapper/DataMapperInterface.html", "link": "Windwalker/DataMapper/DataMapperInterface.html#method_flush", "name": "Windwalker\\DataMapper\\DataMapperInterface::flush", "doc": "&quot;Flush records, will delete all by conditions then recreate new.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapperInterface", "fromLink": "Windwalker/DataMapper/DataMapperInterface.html", "link": "Windwalker/DataMapper/DataMapperInterface.html#method_save", "name": "Windwalker\\DataMapper\\DataMapperInterface::save", "doc": "&quot;Save will auto detect is conditions matched in data or not.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapperInterface", "fromLink": "Windwalker/DataMapper/DataMapperInterface.html", "link": "Windwalker/DataMapper/DataMapperInterface.html#method_saveOne", "name": "Windwalker\\DataMapper\\DataMapperInterface::saveOne", "doc": "&quot;Save only one row.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapperInterface", "fromLink": "Windwalker/DataMapper/DataMapperInterface.html", "link": "Windwalker/DataMapper/DataMapperInterface.html#method_delete", "name": "Windwalker\\DataMapper\\DataMapperInterface::delete", "doc": "&quot;Delete records by where conditions.&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\DataMapper", "fromLink": "Windwalker/DataMapper.html", "link": "Windwalker/DataMapper/DatabaseMapperInterface.html", "name": "Windwalker\\DataMapper\\DatabaseMapperInterface", "doc": "&quot;The DatabaseMapperInterface class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\DataMapper\\DatabaseMapperInterface", "fromLink": "Windwalker/DataMapper/DatabaseMapperInterface.html", "link": "Windwalker/DataMapper/DatabaseMapperInterface.html#method_getFields", "name": "Windwalker\\DataMapper\\DatabaseMapperInterface::getFields", "doc": "&quot;Get table fields.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DatabaseMapperInterface", "fromLink": "Windwalker/DataMapper/DatabaseMapperInterface.html", "link": "Windwalker/DataMapper/DatabaseMapperInterface.html#method_getTable", "name": "Windwalker\\DataMapper\\DatabaseMapperInterface::getTable", "doc": "&quot;Get table name.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DatabaseMapperInterface", "fromLink": "Windwalker/DataMapper/DatabaseMapperInterface.html", "link": "Windwalker/DataMapper/DatabaseMapperInterface.html#method_getDb", "name": "Windwalker\\DataMapper\\DatabaseMapperInterface::getDb", "doc": "&quot;Get DB adapter.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DatabaseMapperInterface", "fromLink": "Windwalker/DataMapper/DatabaseMapperInterface.html", "link": "Windwalker/DataMapper/DatabaseMapperInterface.html#method_setDb", "name": "Windwalker\\DataMapper\\DatabaseMapperInterface::setDb", "doc": "&quot;Set db adapter.&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Data", "fromLink": "Windwalker/Data.html", "link": "Windwalker/Data/DataInterface.html", "name": "Windwalker\\Data\\DataInterface", "doc": "&quot;The Data Interface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Data\\DataInterface", "fromLink": "Windwalker/Data/DataInterface.html", "link": "Windwalker/Data/DataInterface.html#method_bind", "name": "Windwalker\\Data\\DataInterface::bind", "doc": "&quot;Bind the data into this object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataInterface", "fromLink": "Windwalker/Data/DataInterface.html", "link": "Windwalker/Data/DataInterface.html#method_isNull", "name": "Windwalker\\Data\\DataInterface::isNull", "doc": "&quot;Is this object empty?&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataInterface", "fromLink": "Windwalker/Data/DataInterface.html", "link": "Windwalker/Data/DataInterface.html#method_notNull", "name": "Windwalker\\Data\\DataInterface::notNull", "doc": "&quot;Is this object has properties?&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataInterface", "fromLink": "Windwalker/Data/DataInterface.html", "link": "Windwalker/Data/DataInterface.html#method_dump", "name": "Windwalker\\Data\\DataInterface::dump", "doc": "&quot;Dump all data as array&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataInterface", "fromLink": "Windwalker/Data/DataInterface.html", "link": "Windwalker/Data/DataInterface.html#method___get", "name": "Windwalker\\Data\\DataInterface::__get", "doc": "&quot;__get&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Data", "fromLink": "Windwalker/Data.html", "link": "Windwalker/Data/DataSetInterface.html", "name": "Windwalker\\Data\\DataSetInterface", "doc": "&quot;The DataSet Interface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Data\\DataSetInterface", "fromLink": "Windwalker/Data/DataSetInterface.html", "link": "Windwalker/Data/DataSetInterface.html#method_bind", "name": "Windwalker\\Data\\DataSetInterface::bind", "doc": "&quot;Bind an array contains multiple data into this object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSetInterface", "fromLink": "Windwalker/Data/DataSetInterface.html", "link": "Windwalker/Data/DataSetInterface.html#method_isNull", "name": "Windwalker\\Data\\DataSetInterface::isNull", "doc": "&quot;Is this data set empty?&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSetInterface", "fromLink": "Windwalker/Data/DataSetInterface.html", "link": "Windwalker/Data/DataSetInterface.html#method_notNull", "name": "Windwalker\\Data\\DataSetInterface::notNull", "doc": "&quot;Is this data set has properties?&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSetInterface", "fromLink": "Windwalker/Data/DataSetInterface.html", "link": "Windwalker/Data/DataSetInterface.html#method_dump", "name": "Windwalker\\Data\\DataSetInterface::dump", "doc": "&quot;Dump all data as array.&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Database\\Driver", "fromLink": "Windwalker/Database/Driver.html", "link": "Windwalker/Database/Driver/DatabaseDriverInterface.html", "name": "Windwalker\\Database\\Driver\\DatabaseDriverInterface", "doc": "&quot;The DatabaseDriverInterface class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\DatabaseDriverInterface", "fromLink": "Windwalker/Database/Driver/DatabaseDriverInterface.html", "link": "Windwalker/Database/Driver/DatabaseDriverInterface.html#method_isSupported", "name": "Windwalker\\Database\\Driver\\DatabaseDriverInterface::isSupported", "doc": "&quot;Is this driver supported.&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Edge\\Cache", "fromLink": "Windwalker/Edge/Cache.html", "link": "Windwalker/Edge/Cache/EdgeCacheInterface.html", "name": "Windwalker\\Edge\\Cache\\EdgeCacheInterface", "doc": "&quot;Interface EdgeCacheInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Edge\\Cache\\EdgeCacheInterface", "fromLink": "Windwalker/Edge/Cache/EdgeCacheInterface.html", "link": "Windwalker/Edge/Cache/EdgeCacheInterface.html#method_isExpired", "name": "Windwalker\\Edge\\Cache\\EdgeCacheInterface::isExpired", "doc": "&quot;isExpired&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Cache\\EdgeCacheInterface", "fromLink": "Windwalker/Edge/Cache/EdgeCacheInterface.html", "link": "Windwalker/Edge/Cache/EdgeCacheInterface.html#method_getCacheKey", "name": "Windwalker\\Edge\\Cache\\EdgeCacheInterface::getCacheKey", "doc": "&quot;getCacheKey&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Cache\\EdgeCacheInterface", "fromLink": "Windwalker/Edge/Cache/EdgeCacheInterface.html", "link": "Windwalker/Edge/Cache/EdgeCacheInterface.html#method_load", "name": "Windwalker\\Edge\\Cache\\EdgeCacheInterface::load", "doc": "&quot;get&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Cache\\EdgeCacheInterface", "fromLink": "Windwalker/Edge/Cache/EdgeCacheInterface.html", "link": "Windwalker/Edge/Cache/EdgeCacheInterface.html#method_store", "name": "Windwalker\\Edge\\Cache\\EdgeCacheInterface::store", "doc": "&quot;store&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Cache\\EdgeCacheInterface", "fromLink": "Windwalker/Edge/Cache/EdgeCacheInterface.html", "link": "Windwalker/Edge/Cache/EdgeCacheInterface.html#method_remove", "name": "Windwalker\\Edge\\Cache\\EdgeCacheInterface::remove", "doc": "&quot;remove&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Edge\\Compiler", "fromLink": "Windwalker/Edge/Compiler.html", "link": "Windwalker/Edge/Compiler/EdgeCompilerInterface.html", "name": "Windwalker\\Edge\\Compiler\\EdgeCompilerInterface", "doc": "&quot;The CompilerInterface class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Edge\\Compiler\\EdgeCompilerInterface", "fromLink": "Windwalker/Edge/Compiler/EdgeCompilerInterface.html", "link": "Windwalker/Edge/Compiler/EdgeCompilerInterface.html#method_compile", "name": "Windwalker\\Edge\\Compiler\\EdgeCompilerInterface::compile", "doc": "&quot;compile&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Compiler\\EdgeCompilerInterface", "fromLink": "Windwalker/Edge/Compiler/EdgeCompilerInterface.html", "link": "Windwalker/Edge/Compiler/EdgeCompilerInterface.html#method_directive", "name": "Windwalker\\Edge\\Compiler\\EdgeCompilerInterface::directive", "doc": "&quot;Register a handler for custom directives.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Compiler\\EdgeCompilerInterface", "fromLink": "Windwalker/Edge/Compiler/EdgeCompilerInterface.html", "link": "Windwalker/Edge/Compiler/EdgeCompilerInterface.html#method_parser", "name": "Windwalker\\Edge\\Compiler\\EdgeCompilerInterface::parser", "doc": "&quot;parser&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Edge\\Extension", "fromLink": "Windwalker/Edge/Extension.html", "link": "Windwalker/Edge/Extension/EdgeExtensionInterface.html", "name": "Windwalker\\Edge\\Extension\\EdgeExtensionInterface", "doc": "&quot;The EdgeExtensionInterface class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Edge\\Extension\\EdgeExtensionInterface", "fromLink": "Windwalker/Edge/Extension/EdgeExtensionInterface.html", "link": "Windwalker/Edge/Extension/EdgeExtensionInterface.html#method_getName", "name": "Windwalker\\Edge\\Extension\\EdgeExtensionInterface::getName", "doc": "&quot;getName&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Extension\\EdgeExtensionInterface", "fromLink": "Windwalker/Edge/Extension/EdgeExtensionInterface.html", "link": "Windwalker/Edge/Extension/EdgeExtensionInterface.html#method_getDirectives", "name": "Windwalker\\Edge\\Extension\\EdgeExtensionInterface::getDirectives", "doc": "&quot;getDirectives&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Extension\\EdgeExtensionInterface", "fromLink": "Windwalker/Edge/Extension/EdgeExtensionInterface.html", "link": "Windwalker/Edge/Extension/EdgeExtensionInterface.html#method_getGlobals", "name": "Windwalker\\Edge\\Extension\\EdgeExtensionInterface::getGlobals", "doc": "&quot;getGlobals&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Extension\\EdgeExtensionInterface", "fromLink": "Windwalker/Edge/Extension/EdgeExtensionInterface.html", "link": "Windwalker/Edge/Extension/EdgeExtensionInterface.html#method_getParsers", "name": "Windwalker\\Edge\\Extension\\EdgeExtensionInterface::getParsers", "doc": "&quot;getParsers&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Edge\\Loader", "fromLink": "Windwalker/Edge/Loader.html", "link": "Windwalker/Edge/Loader/EdgeLoaderInterface.html", "name": "Windwalker\\Edge\\Loader\\EdgeLoaderInterface", "doc": "&quot;Interface EdgeLoaderInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Edge\\Loader\\EdgeLoaderInterface", "fromLink": "Windwalker/Edge/Loader/EdgeLoaderInterface.html", "link": "Windwalker/Edge/Loader/EdgeLoaderInterface.html#method_find", "name": "Windwalker\\Edge\\Loader\\EdgeLoaderInterface::find", "doc": "&quot;load&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Event", "fromLink": "Windwalker/Event.html", "link": "Windwalker/Event/DispatcherAwareInterface.html", "name": "Windwalker\\Event\\DispatcherAwareInterface", "doc": "&quot;Interface DispatcherAwareInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Event\\DispatcherAwareInterface", "fromLink": "Windwalker/Event/DispatcherAwareInterface.html", "link": "Windwalker/Event/DispatcherAwareInterface.html#method_getDispatcher", "name": "Windwalker\\Event\\DispatcherAwareInterface::getDispatcher", "doc": "&quot;getDispatcher&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\DispatcherAwareInterface", "fromLink": "Windwalker/Event/DispatcherAwareInterface.html", "link": "Windwalker/Event/DispatcherAwareInterface.html#method_setDispatcher", "name": "Windwalker\\Event\\DispatcherAwareInterface::setDispatcher", "doc": "&quot;setDispatcher&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Event", "fromLink": "Windwalker/Event.html", "link": "Windwalker/Event/DispatcherInterface.html", "name": "Windwalker\\Event\\DispatcherInterface", "doc": "&quot;Interface DispatcherInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Event\\DispatcherInterface", "fromLink": "Windwalker/Event/DispatcherInterface.html", "link": "Windwalker/Event/DispatcherInterface.html#method_addListener", "name": "Windwalker\\Event\\DispatcherInterface::addListener", "doc": "&quot;Add a listener to this dispatcher, only if not already registered to these events.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\DispatcherInterface", "fromLink": "Windwalker/Event/DispatcherInterface.html", "link": "Windwalker/Event/DispatcherInterface.html#method_listen", "name": "Windwalker\\Event\\DispatcherInterface::listen", "doc": "&quot;Add single listener.&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Event", "fromLink": "Windwalker/Event.html", "link": "Windwalker/Event/EventInterface.html", "name": "Windwalker\\Event\\EventInterface", "doc": "&quot;Class EventInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Event\\EventInterface", "fromLink": "Windwalker/Event/EventInterface.html", "link": "Windwalker/Event/EventInterface.html#method_getName", "name": "Windwalker\\Event\\EventInterface::getName", "doc": "&quot;Get the event name.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\EventInterface", "fromLink": "Windwalker/Event/EventInterface.html", "link": "Windwalker/Event/EventInterface.html#method_isStopped", "name": "Windwalker\\Event\\EventInterface::isStopped", "doc": "&quot;Tell if the event propagation is stopped.&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Event", "fromLink": "Windwalker/Event.html", "link": "Windwalker/Event/EventTriggerableInterface.html", "name": "Windwalker\\Event\\EventTriggerableInterface", "doc": "&quot;The EventTriggerableInterface interface.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Event\\EventTriggerableInterface", "fromLink": "Windwalker/Event/EventTriggerableInterface.html", "link": "Windwalker/Event/EventTriggerableInterface.html#method_triggerEvent", "name": "Windwalker\\Event\\EventTriggerableInterface::triggerEvent", "doc": "&quot;Trigger an event.&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Filesystem\\Comparator", "fromLink": "Windwalker/Filesystem/Comparator.html", "link": "Windwalker/Filesystem/Comparator/FileComparatorInterface.html", "name": "Windwalker\\Filesystem\\Comparator\\FileComparatorInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Filesystem\\Comparator\\FileComparatorInterface", "fromLink": "Windwalker/Filesystem/Comparator/FileComparatorInterface.html", "link": "Windwalker/Filesystem/Comparator/FileComparatorInterface.html#method_compare", "name": "Windwalker\\Filesystem\\Comparator\\FileComparatorInterface::compare", "doc": "&quot;&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Filesystem\\Path", "fromLink": "Windwalker/Filesystem/Path.html", "link": "Windwalker/Filesystem/Path/PathLocatorInterface.html", "name": "Windwalker\\Filesystem\\Path\\PathLocatorInterface", "doc": "&quot;&quot;"},
                    
            {"type": "Interface", "fromName": "Windwalker\\Filter\\Cleaner", "fromLink": "Windwalker/Filter/Cleaner.html", "link": "Windwalker/Filter/Cleaner/CleanerInterface.html", "name": "Windwalker\\Filter\\Cleaner\\CleanerInterface", "doc": "&quot;Interface FilterRuleInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Filter\\Cleaner\\CleanerInterface", "fromLink": "Windwalker/Filter/Cleaner/CleanerInterface.html", "link": "Windwalker/Filter/Cleaner/CleanerInterface.html#method_clean", "name": "Windwalker\\Filter\\Cleaner\\CleanerInterface::clean", "doc": "&quot;Method to clean text by rule.&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Form", "fromLink": "Windwalker/Form.html", "link": "Windwalker/Form/FieldDefinitionInterface.html", "name": "Windwalker\\Form\\FieldDefinitionInterface", "doc": "&quot;Field Definition Interface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Form\\FieldDefinitionInterface", "fromLink": "Windwalker/Form/FieldDefinitionInterface.html", "link": "Windwalker/Form/FieldDefinitionInterface.html#method_define", "name": "Windwalker\\Form\\FieldDefinitionInterface::define", "doc": "&quot;Define the form fields.&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Form\\Filter", "fromLink": "Windwalker/Form/Filter.html", "link": "Windwalker/Form/Filter/FilterInterface.html", "name": "Windwalker\\Form\\Filter\\FilterInterface", "doc": "&quot;Interface FilterInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Form\\Filter\\FilterInterface", "fromLink": "Windwalker/Form/Filter/FilterInterface.html", "link": "Windwalker/Form/Filter/FilterInterface.html#method_clean", "name": "Windwalker\\Form\\Filter\\FilterInterface::clean", "doc": "&quot;clean&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Form\\Renderer", "fromLink": "Windwalker/Form/Renderer.html", "link": "Windwalker/Form/Renderer/FormRendererInterface.html", "name": "Windwalker\\Form\\Renderer\\FormRendererInterface", "doc": "&quot;The FormRendererInterface class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Form\\Renderer\\FormRendererInterface", "fromLink": "Windwalker/Form/Renderer/FormRendererInterface.html", "link": "Windwalker/Form/Renderer/FormRendererInterface.html#method_renderField", "name": "Windwalker\\Form\\Renderer\\FormRendererInterface::renderField", "doc": "&quot;renderField&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Renderer\\FormRendererInterface", "fromLink": "Windwalker/Form/Renderer/FormRendererInterface.html", "link": "Windwalker/Form/Renderer/FormRendererInterface.html#method_renderLabel", "name": "Windwalker\\Form\\Renderer\\FormRendererInterface::renderLabel", "doc": "&quot;renderLabel&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Renderer\\FormRendererInterface", "fromLink": "Windwalker/Form/Renderer/FormRendererInterface.html", "link": "Windwalker/Form/Renderer/FormRendererInterface.html#method_renderInput", "name": "Windwalker\\Form\\Renderer\\FormRendererInterface::renderInput", "doc": "&quot;renderInput&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Http", "fromLink": "Windwalker/Http.html", "link": "Windwalker/Http/HttpClientInterface.html", "name": "Windwalker\\Http\\HttpClientInterface", "doc": "&quot;Interface HttpClientInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\HttpClientInterface", "fromLink": "Windwalker/Http/HttpClientInterface.html", "link": "Windwalker/Http/HttpClientInterface.html#method_request", "name": "Windwalker\\Http\\HttpClientInterface::request", "doc": "&quot;Request a remote server.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\HttpClientInterface", "fromLink": "Windwalker/Http/HttpClientInterface.html", "link": "Windwalker/Http/HttpClientInterface.html#method_send", "name": "Windwalker\\Http\\HttpClientInterface::send", "doc": "&quot;Send a request to remote.&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Http\\Output", "fromLink": "Windwalker/Http/Output.html", "link": "Windwalker/Http/Output/OutputInterface.html", "name": "Windwalker\\Http\\Output\\OutputInterface", "doc": "&quot;OutputInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\Output\\OutputInterface", "fromLink": "Windwalker/Http/Output/OutputInterface.html", "link": "Windwalker/Http/Output/OutputInterface.html#method_respond", "name": "Windwalker\\Http\\Output\\OutputInterface::respond", "doc": "&quot;Method to send the application response to the client.  All headers will be sent prior to the main\napplication output data.&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Http\\Transport", "fromLink": "Windwalker/Http/Transport.html", "link": "Windwalker/Http/Transport/TransportInterface.html", "name": "Windwalker\\Http\\Transport\\TransportInterface", "doc": "&quot;The TransportInterface class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\Transport\\TransportInterface", "fromLink": "Windwalker/Http/Transport/TransportInterface.html", "link": "Windwalker/Http/Transport/TransportInterface.html#method___construct", "name": "Windwalker\\Http\\Transport\\TransportInterface::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Transport\\TransportInterface", "fromLink": "Windwalker/Http/Transport/TransportInterface.html", "link": "Windwalker/Http/Transport/TransportInterface.html#method_request", "name": "Windwalker\\Http\\Transport\\TransportInterface::request", "doc": "&quot;Send a request to the server and return a Response object with the response.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Transport\\TransportInterface", "fromLink": "Windwalker/Http/Transport/TransportInterface.html", "link": "Windwalker/Http/Transport/TransportInterface.html#method_download", "name": "Windwalker\\Http\\Transport\\TransportInterface::download", "doc": "&quot;Use stream to download file.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Transport\\TransportInterface", "fromLink": "Windwalker/Http/Transport/TransportInterface.html", "link": "Windwalker/Http/Transport/TransportInterface.html#method_isSupported", "name": "Windwalker\\Http\\Transport\\TransportInterface::isSupported", "doc": "&quot;Method to check if HTTP transport layer available for using&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\IO\\Cli\\Color", "fromLink": "Windwalker/IO/Cli/Color.html", "link": "Windwalker/IO/Cli/Color/ColorProcessorInterface.html", "name": "Windwalker\\IO\\Cli\\Color\\ColorProcessorInterface", "doc": "&quot;Class ProcessorInterface.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Color\\ColorProcessorInterface", "fromLink": "Windwalker/IO/Cli/Color/ColorProcessorInterface.html", "link": "Windwalker/IO/Cli/Color/ColorProcessorInterface.html#method_process", "name": "Windwalker\\IO\\Cli\\Color\\ColorProcessorInterface::process", "doc": "&quot;Process the provided output into a string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Color\\ColorProcessorInterface", "fromLink": "Windwalker/IO/Cli/Color/ColorProcessorInterface.html", "link": "Windwalker/IO/Cli/Color/ColorProcessorInterface.html#method_addStyle", "name": "Windwalker\\IO\\Cli\\Color\\ColorProcessorInterface::addStyle", "doc": "&quot;Add a style.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Color\\ColorProcessorInterface", "fromLink": "Windwalker/IO/Cli/Color/ColorProcessorInterface.html", "link": "Windwalker/IO/Cli/Color/ColorProcessorInterface.html#method_setNoColors", "name": "Windwalker\\IO\\Cli\\Color\\ColorProcessorInterface::setNoColors", "doc": "&quot;Method to set property noColors&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\IO\\Cli", "fromLink": "Windwalker/IO/Cli.html", "link": "Windwalker/IO/Cli/IOInterface.html", "name": "Windwalker\\IO\\Cli\\IOInterface", "doc": "&quot;Class IOInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IOInterface", "fromLink": "Windwalker/IO/Cli/IOInterface.html", "link": "Windwalker/IO/Cli/IOInterface.html#method_out", "name": "Windwalker\\IO\\Cli\\IOInterface::out", "doc": "&quot;Write a string to standard output&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IOInterface", "fromLink": "Windwalker/IO/Cli/IOInterface.html", "link": "Windwalker/IO/Cli/IOInterface.html#method_in", "name": "Windwalker\\IO\\Cli\\IOInterface::in", "doc": "&quot;Get a value from standard input.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IOInterface", "fromLink": "Windwalker/IO/Cli/IOInterface.html", "link": "Windwalker/IO/Cli/IOInterface.html#method_err", "name": "Windwalker\\IO\\Cli\\IOInterface::err", "doc": "&quot;Write a string to standard error output.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IOInterface", "fromLink": "Windwalker/IO/Cli/IOInterface.html", "link": "Windwalker/IO/Cli/IOInterface.html#method_getOption", "name": "Windwalker\\IO\\Cli\\IOInterface::getOption", "doc": "&quot;Gets a value from the input data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IOInterface", "fromLink": "Windwalker/IO/Cli/IOInterface.html", "link": "Windwalker/IO/Cli/IOInterface.html#method_setOption", "name": "Windwalker\\IO\\Cli\\IOInterface::setOption", "doc": "&quot;Sets a value&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IOInterface", "fromLink": "Windwalker/IO/Cli/IOInterface.html", "link": "Windwalker/IO/Cli/IOInterface.html#method_getOptions", "name": "Windwalker\\IO\\Cli\\IOInterface::getOptions", "doc": "&quot;getOptions&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IOInterface", "fromLink": "Windwalker/IO/Cli/IOInterface.html", "link": "Windwalker/IO/Cli/IOInterface.html#method_getArgument", "name": "Windwalker\\IO\\Cli\\IOInterface::getArgument", "doc": "&quot;getArgument&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IOInterface", "fromLink": "Windwalker/IO/Cli/IOInterface.html", "link": "Windwalker/IO/Cli/IOInterface.html#method_setArgument", "name": "Windwalker\\IO\\Cli\\IOInterface::setArgument", "doc": "&quot;setArgument&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IOInterface", "fromLink": "Windwalker/IO/Cli/IOInterface.html", "link": "Windwalker/IO/Cli/IOInterface.html#method_getArguments", "name": "Windwalker\\IO\\Cli\\IOInterface::getArguments", "doc": "&quot;getArguments&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IOInterface", "fromLink": "Windwalker/IO/Cli/IOInterface.html", "link": "Windwalker/IO/Cli/IOInterface.html#method_getCalledScript", "name": "Windwalker\\IO\\Cli\\IOInterface::getCalledScript", "doc": "&quot;getExecuted&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\IO\\Cli\\Input", "fromLink": "Windwalker/IO/Cli/Input.html", "link": "Windwalker/IO/Cli/Input/CliInputInterface.html", "name": "Windwalker\\IO\\Cli\\Input\\CliInputInterface", "doc": "&quot;Interface CliInputInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Input\\CliInputInterface", "fromLink": "Windwalker/IO/Cli/Input/CliInputInterface.html", "link": "Windwalker/IO/Cli/Input/CliInputInterface.html#method_in", "name": "Windwalker\\IO\\Cli\\Input\\CliInputInterface::in", "doc": "&quot;Get a value from standard input.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Input\\CliInputInterface", "fromLink": "Windwalker/IO/Cli/Input/CliInputInterface.html", "link": "Windwalker/IO/Cli/Input/CliInputInterface.html#method_get", "name": "Windwalker\\IO\\Cli\\Input\\CliInputInterface::get", "doc": "&quot;Gets a value from the input data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Input\\CliInputInterface", "fromLink": "Windwalker/IO/Cli/Input/CliInputInterface.html", "link": "Windwalker/IO/Cli/Input/CliInputInterface.html#method_set", "name": "Windwalker\\IO\\Cli\\Input\\CliInputInterface::set", "doc": "&quot;Sets a value&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Input\\CliInputInterface", "fromLink": "Windwalker/IO/Cli/Input/CliInputInterface.html", "link": "Windwalker/IO/Cli/Input/CliInputInterface.html#method_all", "name": "Windwalker\\IO\\Cli\\Input\\CliInputInterface::all", "doc": "&quot;Gets an array of values from the request.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Input\\CliInputInterface", "fromLink": "Windwalker/IO/Cli/Input/CliInputInterface.html", "link": "Windwalker/IO/Cli/Input/CliInputInterface.html#method_getArgument", "name": "Windwalker\\IO\\Cli\\Input\\CliInputInterface::getArgument", "doc": "&quot;getArgument&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Input\\CliInputInterface", "fromLink": "Windwalker/IO/Cli/Input/CliInputInterface.html", "link": "Windwalker/IO/Cli/Input/CliInputInterface.html#method_getCalledScript", "name": "Windwalker\\IO\\Cli\\Input\\CliInputInterface::getCalledScript", "doc": "&quot;getCalledScript&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\IO\\Cli\\Output", "fromLink": "Windwalker/IO/Cli/Output.html", "link": "Windwalker/IO/Cli/Output/CliOutputInterface.html", "name": "Windwalker\\IO\\Cli\\Output\\CliOutputInterface", "doc": "&quot;Class CliOutputInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Output\\CliOutputInterface", "fromLink": "Windwalker/IO/Cli/Output/CliOutputInterface.html", "link": "Windwalker/IO/Cli/Output/CliOutputInterface.html#method_out", "name": "Windwalker\\IO\\Cli\\Output\\CliOutputInterface::out", "doc": "&quot;Write a string to standard output&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Output\\CliOutputInterface", "fromLink": "Windwalker/IO/Cli/Output/CliOutputInterface.html", "link": "Windwalker/IO/Cli/Output/CliOutputInterface.html#method_err", "name": "Windwalker\\IO\\Cli\\Output\\CliOutputInterface::err", "doc": "&quot;Write a string to standard error output.&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\IO\\Cli\\Output", "fromLink": "Windwalker/IO/Cli/Output.html", "link": "Windwalker/IO/Cli/Output/ColorfulOutputInterface.html", "name": "Windwalker\\IO\\Cli\\Output\\ColorfulOutputInterface", "doc": "&quot;The ColorfulOutputInterface class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Output\\ColorfulOutputInterface", "fromLink": "Windwalker/IO/Cli/Output/ColorfulOutputInterface.html", "link": "Windwalker/IO/Cli/Output/ColorfulOutputInterface.html#method_setProcessor", "name": "Windwalker\\IO\\Cli\\Output\\ColorfulOutputInterface::setProcessor", "doc": "&quot;Set a processor&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Output\\ColorfulOutputInterface", "fromLink": "Windwalker/IO/Cli/Output/ColorfulOutputInterface.html", "link": "Windwalker/IO/Cli/Output/ColorfulOutputInterface.html#method_getProcessor", "name": "Windwalker\\IO\\Cli\\Output\\ColorfulOutputInterface::getProcessor", "doc": "&quot;Get a processor&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Language\\Format", "fromLink": "Windwalker/Language/Format.html", "link": "Windwalker/Language/Format/FormatInterface.html", "name": "Windwalker\\Language\\Format\\FormatInterface", "doc": "&quot;Class FormatInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Language\\Format\\FormatInterface", "fromLink": "Windwalker/Language/Format/FormatInterface.html", "link": "Windwalker/Language/Format/FormatInterface.html#method_getName", "name": "Windwalker\\Language\\Format\\FormatInterface::getName", "doc": "&quot;getName&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\Format\\FormatInterface", "fromLink": "Windwalker/Language/Format/FormatInterface.html", "link": "Windwalker/Language/Format/FormatInterface.html#method_parse", "name": "Windwalker\\Language\\Format\\FormatInterface::parse", "doc": "&quot;parse&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Language", "fromLink": "Windwalker/Language.html", "link": "Windwalker/Language/LanguageInterface.html", "name": "Windwalker\\Language\\LanguageInterface", "doc": "&quot;Interface LanguageInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Language\\LanguageInterface", "fromLink": "Windwalker/Language/LanguageInterface.html", "link": "Windwalker/Language/LanguageInterface.html#method_translate", "name": "Windwalker\\Language\\LanguageInterface::translate", "doc": "&quot;translate&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\LanguageInterface", "fromLink": "Windwalker/Language/LanguageInterface.html", "link": "Windwalker/Language/LanguageInterface.html#method_plural", "name": "Windwalker\\Language\\LanguageInterface::plural", "doc": "&quot;plural&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\LanguageInterface", "fromLink": "Windwalker/Language/LanguageInterface.html", "link": "Windwalker/Language/LanguageInterface.html#method_sprintf", "name": "Windwalker\\Language\\LanguageInterface::sprintf", "doc": "&quot;sprintf&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\LanguageInterface", "fromLink": "Windwalker/Language/LanguageInterface.html", "link": "Windwalker/Language/LanguageInterface.html#method_exists", "name": "Windwalker\\Language\\LanguageInterface::exists", "doc": "&quot;exists&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Language\\Loader", "fromLink": "Windwalker/Language/Loader.html", "link": "Windwalker/Language/Loader/LoaderInterface.html", "name": "Windwalker\\Language\\Loader\\LoaderInterface", "doc": "&quot;Interface LoaderInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Language\\Loader\\LoaderInterface", "fromLink": "Windwalker/Language/Loader/LoaderInterface.html", "link": "Windwalker/Language/Loader/LoaderInterface.html#method_getName", "name": "Windwalker\\Language\\Loader\\LoaderInterface::getName", "doc": "&quot;getName&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\Loader\\LoaderInterface", "fromLink": "Windwalker/Language/Loader/LoaderInterface.html", "link": "Windwalker/Language/Loader/LoaderInterface.html#method_load", "name": "Windwalker\\Language\\Loader\\LoaderInterface::load", "doc": "&quot;load&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Language\\Localise", "fromLink": "Windwalker/Language/Localise.html", "link": "Windwalker/Language/Localise/LocaliseInterface.html", "name": "Windwalker\\Language\\Localise\\LocaliseInterface", "doc": "&quot;Interface LocaliseInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Language\\Localise\\LocaliseInterface", "fromLink": "Windwalker/Language/Localise/LocaliseInterface.html", "link": "Windwalker/Language/Localise/LocaliseInterface.html#method_getPluralSuffix", "name": "Windwalker\\Language\\Localise\\LocaliseInterface::getPluralSuffix", "doc": "&quot;getPluralSuffixes&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Middleware", "fromLink": "Windwalker/Middleware.html", "link": "Windwalker/Middleware/MiddlewareInterface.html", "name": "Windwalker\\Middleware\\MiddlewareInterface", "doc": "&quot;Middleware Interface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Middleware\\MiddlewareInterface", "fromLink": "Windwalker/Middleware/MiddlewareInterface.html", "link": "Windwalker/Middleware/MiddlewareInterface.html#method_execute", "name": "Windwalker\\Middleware\\MiddlewareInterface::execute", "doc": "&quot;Call next middleware.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Middleware\\MiddlewareInterface", "fromLink": "Windwalker/Middleware/MiddlewareInterface.html", "link": "Windwalker/Middleware/MiddlewareInterface.html#method_getNext", "name": "Windwalker\\Middleware\\MiddlewareInterface::getNext", "doc": "&quot;Get next middleware.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Middleware\\MiddlewareInterface", "fromLink": "Windwalker/Middleware/MiddlewareInterface.html", "link": "Windwalker/Middleware/MiddlewareInterface.html#method_setNext", "name": "Windwalker\\Middleware\\MiddlewareInterface::setNext", "doc": "&quot;Set next middleware.&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Middleware", "fromLink": "Windwalker/Middleware.html", "link": "Windwalker/Middleware/Psr7InvokableInterface.html", "name": "Windwalker\\Middleware\\Psr7InvokableInterface", "doc": "&quot;Interface Psr7InvokableInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Middleware\\Psr7InvokableInterface", "fromLink": "Windwalker/Middleware/Psr7InvokableInterface.html", "link": "Windwalker/Middleware/Psr7InvokableInterface.html#method___invoke", "name": "Windwalker\\Middleware\\Psr7InvokableInterface::__invoke", "doc": "&quot;Middleware logic to be invoked.&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Profiler\\Point", "fromLink": "Windwalker/Profiler/Point.html", "link": "Windwalker/Profiler/Point/CollectorInterface.html", "name": "Windwalker\\Profiler\\Point\\CollectorInterface", "doc": "&quot;The CollectorInterface interface.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Profiler\\Point\\CollectorInterface", "fromLink": "Windwalker/Profiler/Point/CollectorInterface.html", "link": "Windwalker/Profiler/Point/CollectorInterface.html#method_get", "name": "Windwalker\\Profiler\\Point\\CollectorInterface::get", "doc": "&quot;Get a value.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Point\\CollectorInterface", "fromLink": "Windwalker/Profiler/Point/CollectorInterface.html", "link": "Windwalker/Profiler/Point/CollectorInterface.html#method_getData", "name": "Windwalker\\Profiler\\Point\\CollectorInterface::getData", "doc": "&quot;Get all data.&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Profiler\\Point", "fromLink": "Windwalker/Profiler/Point.html", "link": "Windwalker/Profiler/Point/PointInterface.html", "name": "Windwalker\\Profiler\\Point\\PointInterface", "doc": "&quot;Interface PointInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Profiler\\Point\\PointInterface", "fromLink": "Windwalker/Profiler/Point/PointInterface.html", "link": "Windwalker/Profiler/Point/PointInterface.html#method_getName", "name": "Windwalker\\Profiler\\Point\\PointInterface::getName", "doc": "&quot;Get the name of this profile point.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Point\\PointInterface", "fromLink": "Windwalker/Profiler/Point/PointInterface.html", "link": "Windwalker/Profiler/Point/PointInterface.html#method_getTime", "name": "Windwalker\\Profiler\\Point\\PointInterface::getTime", "doc": "&quot;Get the elapsed time in seconds since the first\npoint in the profiler it belongs to was marked.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Point\\PointInterface", "fromLink": "Windwalker/Profiler/Point/PointInterface.html", "link": "Windwalker/Profiler/Point/PointInterface.html#method_getMemory", "name": "Windwalker\\Profiler\\Point\\PointInterface::getMemory", "doc": "&quot;Get the allocated amount of memory in bytes\nsince the first point in the profiler it belongs to was marked.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Point\\PointInterface", "fromLink": "Windwalker/Profiler/Point/PointInterface.html", "link": "Windwalker/Profiler/Point/PointInterface.html#method_getData", "name": "Windwalker\\Profiler\\Point\\PointInterface::getData", "doc": "&quot;getData&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Profiler", "fromLink": "Windwalker/Profiler.html", "link": "Windwalker/Profiler/ProfilerAwareInterface.html", "name": "Windwalker\\Profiler\\ProfilerAwareInterface", "doc": "&quot;The ProfilerAwareInterface interface.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Profiler\\ProfilerAwareInterface", "fromLink": "Windwalker/Profiler/ProfilerAwareInterface.html", "link": "Windwalker/Profiler/ProfilerAwareInterface.html#method_getProfiler", "name": "Windwalker\\Profiler\\ProfilerAwareInterface::getProfiler", "doc": "&quot;Get profiler.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\ProfilerAwareInterface", "fromLink": "Windwalker/Profiler/ProfilerAwareInterface.html", "link": "Windwalker/Profiler/ProfilerAwareInterface.html#method_setProfiler", "name": "Windwalker\\Profiler\\ProfilerAwareInterface::setProfiler", "doc": "&quot;Set Profiler.&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Profiler", "fromLink": "Windwalker/Profiler.html", "link": "Windwalker/Profiler/ProfilerInterface.html", "name": "Windwalker\\Profiler\\ProfilerInterface", "doc": "&quot;Interface ProfilerInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Profiler\\ProfilerInterface", "fromLink": "Windwalker/Profiler/ProfilerInterface.html", "link": "Windwalker/Profiler/ProfilerInterface.html#method_getName", "name": "Windwalker\\Profiler\\ProfilerInterface::getName", "doc": "&quot;Get the name of this profiler.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\ProfilerInterface", "fromLink": "Windwalker/Profiler/ProfilerInterface.html", "link": "Windwalker/Profiler/ProfilerInterface.html#method_mark", "name": "Windwalker\\Profiler\\ProfilerInterface::mark", "doc": "&quot;Mark a profile point.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\ProfilerInterface", "fromLink": "Windwalker/Profiler/ProfilerInterface.html", "link": "Windwalker/Profiler/ProfilerInterface.html#method_hasPoint", "name": "Windwalker\\Profiler\\ProfilerInterface::hasPoint", "doc": "&quot;Check if the profiler has marked the given point.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\ProfilerInterface", "fromLink": "Windwalker/Profiler/ProfilerInterface.html", "link": "Windwalker/Profiler/ProfilerInterface.html#method_getPoint", "name": "Windwalker\\Profiler\\ProfilerInterface::getPoint", "doc": "&quot;Get the point identified by the given name.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\ProfilerInterface", "fromLink": "Windwalker/Profiler/ProfilerInterface.html", "link": "Windwalker/Profiler/ProfilerInterface.html#method_getTimeBetween", "name": "Windwalker\\Profiler\\ProfilerInterface::getTimeBetween", "doc": "&quot;Get the elapsed time in seconds between the two points.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\ProfilerInterface", "fromLink": "Windwalker/Profiler/ProfilerInterface.html", "link": "Windwalker/Profiler/ProfilerInterface.html#method_getMemoryBetween", "name": "Windwalker\\Profiler\\ProfilerInterface::getMemoryBetween", "doc": "&quot;Get the amount of allocated memory in bytes between the two points.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\ProfilerInterface", "fromLink": "Windwalker/Profiler/ProfilerInterface.html", "link": "Windwalker/Profiler/ProfilerInterface.html#method_getMemoryPeakBytes", "name": "Windwalker\\Profiler\\ProfilerInterface::getMemoryPeakBytes", "doc": "&quot;Get the memory peak in bytes during the profiler run.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\ProfilerInterface", "fromLink": "Windwalker/Profiler/ProfilerInterface.html", "link": "Windwalker/Profiler/ProfilerInterface.html#method_getPoints", "name": "Windwalker\\Profiler\\ProfilerInterface::getPoints", "doc": "&quot;Get the points in this profiler (from the first to the last).&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\ProfilerInterface", "fromLink": "Windwalker/Profiler/ProfilerInterface.html", "link": "Windwalker/Profiler/ProfilerInterface.html#method_render", "name": "Windwalker\\Profiler\\ProfilerInterface::render", "doc": "&quot;Render the profiler.&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Profiler\\Renderer", "fromLink": "Windwalker/Profiler/Renderer.html", "link": "Windwalker/Profiler/Renderer/ProfilerRendererInterface.html", "name": "Windwalker\\Profiler\\Renderer\\ProfilerRendererInterface", "doc": "&quot;Interface ProfilerRendererInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Profiler\\Renderer\\ProfilerRendererInterface", "fromLink": "Windwalker/Profiler/Renderer/ProfilerRendererInterface.html", "link": "Windwalker/Profiler/Renderer/ProfilerRendererInterface.html#method_render", "name": "Windwalker\\Profiler\\Renderer\\ProfilerRendererInterface::render", "doc": "&quot;Render the profiler.&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Query", "fromLink": "Windwalker/Query.html", "link": "Windwalker/Query/QueryGrammarInterface.html", "name": "Windwalker\\Query\\QueryGrammarInterface", "doc": "&quot;QueryGrammar interface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Query\\QueryGrammarInterface", "fromLink": "Windwalker/Query/QueryGrammarInterface.html", "link": "Windwalker/Query/QueryGrammarInterface.html#method_listDatabases", "name": "Windwalker\\Query\\QueryGrammarInterface::listDatabases", "doc": "&quot;showDatabases&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryGrammarInterface", "fromLink": "Windwalker/Query/QueryGrammarInterface.html", "link": "Windwalker/Query/QueryGrammarInterface.html#method_createDatabase", "name": "Windwalker\\Query\\QueryGrammarInterface::createDatabase", "doc": "&quot;createDatabase&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryGrammarInterface", "fromLink": "Windwalker/Query/QueryGrammarInterface.html", "link": "Windwalker/Query/QueryGrammarInterface.html#method_dropDatabase", "name": "Windwalker\\Query\\QueryGrammarInterface::dropDatabase", "doc": "&quot;dropTable&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryGrammarInterface", "fromLink": "Windwalker/Query/QueryGrammarInterface.html", "link": "Windwalker/Query/QueryGrammarInterface.html#method_showTableColumns", "name": "Windwalker\\Query\\QueryGrammarInterface::showTableColumns", "doc": "&quot;showTableColumn&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryGrammarInterface", "fromLink": "Windwalker/Query/QueryGrammarInterface.html", "link": "Windwalker/Query/QueryGrammarInterface.html#method_showDbTables", "name": "Windwalker\\Query\\QueryGrammarInterface::showDbTables", "doc": "&quot;showDbTables&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryGrammarInterface", "fromLink": "Windwalker/Query/QueryGrammarInterface.html", "link": "Windwalker/Query/QueryGrammarInterface.html#method_createTable", "name": "Windwalker\\Query\\QueryGrammarInterface::createTable", "doc": "&quot;createTable&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryGrammarInterface", "fromLink": "Windwalker/Query/QueryGrammarInterface.html", "link": "Windwalker/Query/QueryGrammarInterface.html#method_dropTable", "name": "Windwalker\\Query\\QueryGrammarInterface::dropTable", "doc": "&quot;dropTable&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryGrammarInterface", "fromLink": "Windwalker/Query/QueryGrammarInterface.html", "link": "Windwalker/Query/QueryGrammarInterface.html#method_addColumn", "name": "Windwalker\\Query\\QueryGrammarInterface::addColumn", "doc": "&quot;Add column&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryGrammarInterface", "fromLink": "Windwalker/Query/QueryGrammarInterface.html", "link": "Windwalker/Query/QueryGrammarInterface.html#method_changeColumn", "name": "Windwalker\\Query\\QueryGrammarInterface::changeColumn", "doc": "&quot;changeColumn&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryGrammarInterface", "fromLink": "Windwalker/Query/QueryGrammarInterface.html", "link": "Windwalker/Query/QueryGrammarInterface.html#method_dropColumn", "name": "Windwalker\\Query\\QueryGrammarInterface::dropColumn", "doc": "&quot;dropColumn&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryGrammarInterface", "fromLink": "Windwalker/Query/QueryGrammarInterface.html", "link": "Windwalker/Query/QueryGrammarInterface.html#method_addIndex", "name": "Windwalker\\Query\\QueryGrammarInterface::addIndex", "doc": "&quot;addIndex&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryGrammarInterface", "fromLink": "Windwalker/Query/QueryGrammarInterface.html", "link": "Windwalker/Query/QueryGrammarInterface.html#method_build", "name": "Windwalker\\Query\\QueryGrammarInterface::build", "doc": "&quot;build&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryGrammarInterface", "fromLink": "Windwalker/Query/QueryGrammarInterface.html", "link": "Windwalker/Query/QueryGrammarInterface.html#method_getQuery", "name": "Windwalker\\Query\\QueryGrammarInterface::getQuery", "doc": "&quot;getQuery&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Query", "fromLink": "Windwalker/Query.html", "link": "Windwalker/Query/QueryInterface.html", "name": "Windwalker\\Query\\QueryInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method___toString", "name": "Windwalker\\Query\\QueryInterface::__toString", "doc": "&quot;Magic function to convert the query to a string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_get", "name": "Windwalker\\Query\\QueryInterface::get", "doc": "&quot;Get clause  value.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_call", "name": "Windwalker\\Query\\QueryInterface::call", "doc": "&quot;Add a single column, or array of columns to the CALL clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_columns", "name": "Windwalker\\Query\\QueryInterface::columns", "doc": "&quot;Adds a column, or array of column names that would be used for an INSERT INTO statement.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_dateFormat", "name": "Windwalker\\Query\\QueryInterface::dateFormat", "doc": "&quot;Returns a PHP date() function compliant date format for the database driver.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_delete", "name": "Windwalker\\Query\\QueryInterface::delete", "doc": "&quot;Add a table name to the DELETE clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_escape", "name": "Windwalker\\Query\\QueryInterface::escape", "doc": "&quot;Method to escape a string for usage in an SQL statement.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_exec", "name": "Windwalker\\Query\\QueryInterface::exec", "doc": "&quot;Add a single column, or array of columns to the EXEC clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_from", "name": "Windwalker\\Query\\QueryInterface::from", "doc": "&quot;Add a table to the FROM clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_expression", "name": "Windwalker\\Query\\QueryInterface::expression", "doc": "&quot;expression&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_group", "name": "Windwalker\\Query\\QueryInterface::group", "doc": "&quot;Add a grouping column to the GROUP clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_having", "name": "Windwalker\\Query\\QueryInterface::having", "doc": "&quot;A conditions to the HAVING clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_orHaving", "name": "Windwalker\\Query\\QueryInterface::orHaving", "doc": "&quot;Add a single condition, or an array of conditions to the HAVING clause and wrap with OR elements.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_innerJoin", "name": "Windwalker\\Query\\QueryInterface::innerJoin", "doc": "&quot;Add an INNER JOIN clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_insert", "name": "Windwalker\\Query\\QueryInterface::insert", "doc": "&quot;Add a table name to the INSERT clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_join", "name": "Windwalker\\Query\\QueryInterface::join", "doc": "&quot;Add a JOIN clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_leftJoin", "name": "Windwalker\\Query\\QueryInterface::leftJoin", "doc": "&quot;Add a LEFT JOIN clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_nullDate", "name": "Windwalker\\Query\\QueryInterface::nullDate", "doc": "&quot;Get the null or zero representation of a timestamp for the database driver.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_order", "name": "Windwalker\\Query\\QueryInterface::order", "doc": "&quot;Add a ordering column to the ORDER clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_limit", "name": "Windwalker\\Query\\QueryInterface::limit", "doc": "&quot;Sets the offset and limit for the result set, if the database driver supports it.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_outerJoin", "name": "Windwalker\\Query\\QueryInterface::outerJoin", "doc": "&quot;Add an OUTER JOIN clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_quote", "name": "Windwalker\\Query\\QueryInterface::quote", "doc": "&quot;Method to quote and optionally escape a string to database requirements for insertion into the database.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_quoteName", "name": "Windwalker\\Query\\QueryInterface::quoteName", "doc": "&quot;Wrap an SQL statement identifier name such as column, table or database names in quotes to prevent injection\nrisks and reserved word conflicts.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_rightJoin", "name": "Windwalker\\Query\\QueryInterface::rightJoin", "doc": "&quot;Add a RIGHT JOIN clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_select", "name": "Windwalker\\Query\\QueryInterface::select", "doc": "&quot;Add a single column, or array of columns to the SELECT clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_set", "name": "Windwalker\\Query\\QueryInterface::set", "doc": "&quot;Add a single condition string, or an array of strings to the SET clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_setQuery", "name": "Windwalker\\Query\\QueryInterface::setQuery", "doc": "&quot;Allows a direct query to be provided to the database driver&#039;s setQuery() method, but still allow queries\nto have bounded variables.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_update", "name": "Windwalker\\Query\\QueryInterface::update", "doc": "&quot;Add a table name to the UPDATE clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_values", "name": "Windwalker\\Query\\QueryInterface::values", "doc": "&quot;Adds a tuple, or array of tuples that would be used as values for an INSERT INTO statement.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_where", "name": "Windwalker\\Query\\QueryInterface::where", "doc": "&quot;Add a single condition, or an array of conditions to the WHERE clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_orWhere", "name": "Windwalker\\Query\\QueryInterface::orWhere", "doc": "&quot;Add a single condition, or an array of conditions to the WHERE clause and wrap with OR elements.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_union", "name": "Windwalker\\Query\\QueryInterface::union", "doc": "&quot;Add a query to UNION with the current query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_unionDistinct", "name": "Windwalker\\Query\\QueryInterface::unionDistinct", "doc": "&quot;Add a query to UNION DISTINCT with the current query. Simply a proxy to Union with the Distinct clause.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_unionAll", "name": "Windwalker\\Query\\QueryInterface::unionAll", "doc": "&quot;Add a query to UNION ALL with the current query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_format", "name": "Windwalker\\Query\\QueryInterface::format", "doc": "&quot;Find and replace sprintf-like tokens in a format string.&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query/LimitableInterface.html", "name": "Windwalker\\Query\\Query\\LimitableInterface", "doc": "&quot;Windwalker Query LimitableInterface.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Query\\Query\\LimitableInterface", "fromLink": "Windwalker/Query/Query/LimitableInterface.html", "link": "Windwalker/Query/Query/LimitableInterface.html#method_processLimit", "name": "Windwalker\\Query\\Query\\LimitableInterface::processLimit", "doc": "&quot;Method to modify a query already in string format with the needed\nadditions to make the query limited to a particular number of\nresults, or start at a particular offset. This method is used\nautomatically by the __toString() method if it detects that the\nquery implements the LimitableInterface.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query\\LimitableInterface", "fromLink": "Windwalker/Query/Query/LimitableInterface.html", "link": "Windwalker/Query/Query/LimitableInterface.html#method_setLimit", "name": "Windwalker\\Query\\Query\\LimitableInterface::setLimit", "doc": "&quot;Sets the offset and limit for the result set, if the database driver supports it.&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query/PreparableInterface.html", "name": "Windwalker\\Query\\Query\\PreparableInterface", "doc": "&quot;Windwalker Query Preparable Interface.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Query\\Query\\PreparableInterface", "fromLink": "Windwalker/Query/Query/PreparableInterface.html", "link": "Windwalker/Query/Query/PreparableInterface.html#method_bind", "name": "Windwalker\\Query\\Query\\PreparableInterface::bind", "doc": "&quot;Method to add a variable to an internal array that will be bound to a prepared SQL statement before query execution. Also\nremoves a variable that has been bounded from the internal bounded array when the passed in value is null.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query\\PreparableInterface", "fromLink": "Windwalker/Query/Query/PreparableInterface.html", "link": "Windwalker/Query/Query/PreparableInterface.html#method_getBounded", "name": "Windwalker\\Query\\Query\\PreparableInterface::getBounded", "doc": "&quot;Retrieves the bound parameters array when key is null and returns it by reference. If a key is provided then that item is\nreturned.&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Renderer", "fromLink": "Windwalker/Renderer.html", "link": "Windwalker/Renderer/RendererInterface.html", "name": "Windwalker\\Renderer\\RendererInterface", "doc": "&quot;Interface RendererInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Renderer\\RendererInterface", "fromLink": "Windwalker/Renderer/RendererInterface.html", "link": "Windwalker/Renderer/RendererInterface.html#method_render", "name": "Windwalker\\Renderer\\RendererInterface::render", "doc": "&quot;render&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\RendererInterface", "fromLink": "Windwalker/Renderer/RendererInterface.html", "link": "Windwalker/Renderer/RendererInterface.html#method_escape", "name": "Windwalker\\Renderer\\RendererInterface::escape", "doc": "&quot;Method to escape output.&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Router\\Matcher", "fromLink": "Windwalker/Router/Matcher.html", "link": "Windwalker/Router/Matcher/MatcherInterface.html", "name": "Windwalker\\Router\\Matcher\\MatcherInterface", "doc": "&quot;Interface MatcherInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Router\\Matcher\\MatcherInterface", "fromLink": "Windwalker/Router/Matcher/MatcherInterface.html", "link": "Windwalker/Router/Matcher/MatcherInterface.html#method_match", "name": "Windwalker\\Router\\Matcher\\MatcherInterface::match", "doc": "&quot;Match routes.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Matcher\\MatcherInterface", "fromLink": "Windwalker/Router/Matcher/MatcherInterface.html", "link": "Windwalker/Router/Matcher/MatcherInterface.html#method_build", "name": "Windwalker\\Router\\Matcher\\MatcherInterface::build", "doc": "&quot;build&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Matcher\\MatcherInterface", "fromLink": "Windwalker/Router/Matcher/MatcherInterface.html", "link": "Windwalker/Router/Matcher/MatcherInterface.html#method_setRoutes", "name": "Windwalker\\Router\\Matcher\\MatcherInterface::setRoutes", "doc": "&quot;Set Routes&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Router", "fromLink": "Windwalker/Router.html", "link": "Windwalker/Router/RouterInterface.html", "name": "Windwalker\\Router\\RouterInterface", "doc": "&quot;Interface RouterInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Router\\RouterInterface", "fromLink": "Windwalker/Router/RouterInterface.html", "link": "Windwalker/Router/RouterInterface.html#method_match", "name": "Windwalker\\Router\\RouterInterface::match", "doc": "&quot;match&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Session\\Bag", "fromLink": "Windwalker/Session/Bag.html", "link": "Windwalker/Session/Bag/FlashBagInterface.html", "name": "Windwalker\\Session\\Bag\\FlashBagInterface", "doc": "&quot;Interface FlasgBagInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\FlashBagInterface", "fromLink": "Windwalker/Session/Bag/FlashBagInterface.html", "link": "Windwalker/Session/Bag/FlashBagInterface.html#method_add", "name": "Windwalker\\Session\\Bag\\FlashBagInterface::add", "doc": "&quot;add&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\FlashBagInterface", "fromLink": "Windwalker/Session/Bag/FlashBagInterface.html", "link": "Windwalker/Session/Bag/FlashBagInterface.html#method_takeAll", "name": "Windwalker\\Session\\Bag\\FlashBagInterface::takeAll", "doc": "&quot;Take all and clean.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\FlashBagInterface", "fromLink": "Windwalker/Session/Bag/FlashBagInterface.html", "link": "Windwalker/Session/Bag/FlashBagInterface.html#method_getType", "name": "Windwalker\\Session\\Bag\\FlashBagInterface::getType", "doc": "&quot;getType&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Session\\Bag", "fromLink": "Windwalker/Session/Bag.html", "link": "Windwalker/Session/Bag/SessionBagInterface.html", "name": "Windwalker\\Session\\Bag\\SessionBagInterface", "doc": "&quot;Interface SessionBagInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\SessionBagInterface", "fromLink": "Windwalker/Session/Bag/SessionBagInterface.html", "link": "Windwalker/Session/Bag/SessionBagInterface.html#method_setData", "name": "Windwalker\\Session\\Bag\\SessionBagInterface::setData", "doc": "&quot;setData&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\SessionBagInterface", "fromLink": "Windwalker/Session/Bag/SessionBagInterface.html", "link": "Windwalker/Session/Bag/SessionBagInterface.html#method_get", "name": "Windwalker\\Session\\Bag\\SessionBagInterface::get", "doc": "&quot;get&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\SessionBagInterface", "fromLink": "Windwalker/Session/Bag/SessionBagInterface.html", "link": "Windwalker/Session/Bag/SessionBagInterface.html#method_set", "name": "Windwalker\\Session\\Bag\\SessionBagInterface::set", "doc": "&quot;set&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\SessionBagInterface", "fromLink": "Windwalker/Session/Bag/SessionBagInterface.html", "link": "Windwalker/Session/Bag/SessionBagInterface.html#method_has", "name": "Windwalker\\Session\\Bag\\SessionBagInterface::has", "doc": "&quot;has&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\SessionBagInterface", "fromLink": "Windwalker/Session/Bag/SessionBagInterface.html", "link": "Windwalker/Session/Bag/SessionBagInterface.html#method_all", "name": "Windwalker\\Session\\Bag\\SessionBagInterface::all", "doc": "&quot;all&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\SessionBagInterface", "fromLink": "Windwalker/Session/Bag/SessionBagInterface.html", "link": "Windwalker/Session/Bag/SessionBagInterface.html#method_clear", "name": "Windwalker\\Session\\Bag\\SessionBagInterface::clear", "doc": "&quot;clean&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Session\\Bridge", "fromLink": "Windwalker/Session/Bridge.html", "link": "Windwalker/Session/Bridge/SessionBridgeInterface.html", "name": "Windwalker\\Session\\Bridge\\SessionBridgeInterface", "doc": "&quot;Interface SessionBridgeInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\SessionBridgeInterface", "fromLink": "Windwalker/Session/Bridge/SessionBridgeInterface.html", "link": "Windwalker/Session/Bridge/SessionBridgeInterface.html#method_start", "name": "Windwalker\\Session\\Bridge\\SessionBridgeInterface::start", "doc": "&quot;Starts the session.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\SessionBridgeInterface", "fromLink": "Windwalker/Session/Bridge/SessionBridgeInterface.html", "link": "Windwalker/Session/Bridge/SessionBridgeInterface.html#method_isStarted", "name": "Windwalker\\Session\\Bridge\\SessionBridgeInterface::isStarted", "doc": "&quot;Checks if the session is started.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\SessionBridgeInterface", "fromLink": "Windwalker/Session/Bridge/SessionBridgeInterface.html", "link": "Windwalker/Session/Bridge/SessionBridgeInterface.html#method_getId", "name": "Windwalker\\Session\\Bridge\\SessionBridgeInterface::getId", "doc": "&quot;Returns the session ID&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\SessionBridgeInterface", "fromLink": "Windwalker/Session/Bridge/SessionBridgeInterface.html", "link": "Windwalker/Session/Bridge/SessionBridgeInterface.html#method_setId", "name": "Windwalker\\Session\\Bridge\\SessionBridgeInterface::setId", "doc": "&quot;Sets the session ID&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\SessionBridgeInterface", "fromLink": "Windwalker/Session/Bridge/SessionBridgeInterface.html", "link": "Windwalker/Session/Bridge/SessionBridgeInterface.html#method_getName", "name": "Windwalker\\Session\\Bridge\\SessionBridgeInterface::getName", "doc": "&quot;Returns the session name&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\SessionBridgeInterface", "fromLink": "Windwalker/Session/Bridge/SessionBridgeInterface.html", "link": "Windwalker/Session/Bridge/SessionBridgeInterface.html#method_setName", "name": "Windwalker\\Session\\Bridge\\SessionBridgeInterface::setName", "doc": "&quot;Sets the session name&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\SessionBridgeInterface", "fromLink": "Windwalker/Session/Bridge/SessionBridgeInterface.html", "link": "Windwalker/Session/Bridge/SessionBridgeInterface.html#method_restart", "name": "Windwalker\\Session\\Bridge\\SessionBridgeInterface::restart", "doc": "&quot;Regenerates id that represents this storage.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\SessionBridgeInterface", "fromLink": "Windwalker/Session/Bridge/SessionBridgeInterface.html", "link": "Windwalker/Session/Bridge/SessionBridgeInterface.html#method_regenerate", "name": "Windwalker\\Session\\Bridge\\SessionBridgeInterface::regenerate", "doc": "&quot;regenerate&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\SessionBridgeInterface", "fromLink": "Windwalker/Session/Bridge/SessionBridgeInterface.html", "link": "Windwalker/Session/Bridge/SessionBridgeInterface.html#method_save", "name": "Windwalker\\Session\\Bridge\\SessionBridgeInterface::save", "doc": "&quot;Force the session to be saved and closed.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\SessionBridgeInterface", "fromLink": "Windwalker/Session/Bridge/SessionBridgeInterface.html", "link": "Windwalker/Session/Bridge/SessionBridgeInterface.html#method_destroy", "name": "Windwalker\\Session\\Bridge\\SessionBridgeInterface::destroy", "doc": "&quot;Clear all session data in memory.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\SessionBridgeInterface", "fromLink": "Windwalker/Session/Bridge/SessionBridgeInterface.html", "link": "Windwalker/Session/Bridge/SessionBridgeInterface.html#method_getCookieParams", "name": "Windwalker\\Session\\Bridge\\SessionBridgeInterface::getCookieParams", "doc": "&quot;getCookieParams&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\SessionBridgeInterface", "fromLink": "Windwalker/Session/Bridge/SessionBridgeInterface.html", "link": "Windwalker/Session/Bridge/SessionBridgeInterface.html#method_setCookieParams", "name": "Windwalker\\Session\\Bridge\\SessionBridgeInterface::setCookieParams", "doc": "&quot;Set session cookie parameters, this method should call before session started.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\SessionBridgeInterface", "fromLink": "Windwalker/Session/Bridge/SessionBridgeInterface.html", "link": "Windwalker/Session/Bridge/SessionBridgeInterface.html#method_getStorage", "name": "Windwalker\\Session\\Bridge\\SessionBridgeInterface::getStorage", "doc": "&quot;getStorage&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Session\\Handler", "fromLink": "Windwalker/Session/Handler.html", "link": "Windwalker/Session/Handler/HandlerInterface.html", "name": "Windwalker\\Session\\Handler\\HandlerInterface", "doc": "&quot;Interface HandlerInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\HandlerInterface", "fromLink": "Windwalker/Session/Handler/HandlerInterface.html", "link": "Windwalker/Session/Handler/HandlerInterface.html#method_isSupported", "name": "Windwalker\\Session\\Handler\\HandlerInterface::isSupported", "doc": "&quot;isSupported&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\HandlerInterface", "fromLink": "Windwalker/Session/Handler/HandlerInterface.html", "link": "Windwalker/Session/Handler/HandlerInterface.html#method_register", "name": "Windwalker\\Session\\Handler\\HandlerInterface::register", "doc": "&quot;register&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Structure\\Format", "fromLink": "Windwalker/Structure/Format.html", "link": "Windwalker/Structure/Format/FormatInterface.html", "name": "Windwalker\\Structure\\Format\\FormatInterface", "doc": "&quot;Class StructureFormatInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Structure\\Format\\FormatInterface", "fromLink": "Windwalker/Structure/Format/FormatInterface.html", "link": "Windwalker/Structure/Format/FormatInterface.html#method_structToString", "name": "Windwalker\\Structure\\Format\\FormatInterface::structToString", "doc": "&quot;Converts an object into a formatted string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Format\\FormatInterface", "fromLink": "Windwalker/Structure/Format/FormatInterface.html", "link": "Windwalker/Structure/Format/FormatInterface.html#method_stringToStruct", "name": "Windwalker\\Structure\\Format\\FormatInterface::stringToStruct", "doc": "&quot;Converts a formatted string into an object.&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Uri", "fromLink": "Windwalker/Uri.html", "link": "Windwalker/Uri/UriInterface.html", "name": "Windwalker\\Uri\\UriInterface", "doc": "&quot;Uri Interface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Uri\\UriInterface", "fromLink": "Windwalker/Uri/UriInterface.html", "link": "Windwalker/Uri/UriInterface.html#method___toString", "name": "Windwalker\\Uri\\UriInterface::__toString", "doc": "&quot;Magic method to get the string representation of the URI object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriInterface", "fromLink": "Windwalker/Uri/UriInterface.html", "link": "Windwalker/Uri/UriInterface.html#method_toString", "name": "Windwalker\\Uri\\UriInterface::toString", "doc": "&quot;Returns full uri string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriInterface", "fromLink": "Windwalker/Uri/UriInterface.html", "link": "Windwalker/Uri/UriInterface.html#method_hasVar", "name": "Windwalker\\Uri\\UriInterface::hasVar", "doc": "&quot;Checks if variable exists.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriInterface", "fromLink": "Windwalker/Uri/UriInterface.html", "link": "Windwalker/Uri/UriInterface.html#method_getVar", "name": "Windwalker\\Uri\\UriInterface::getVar", "doc": "&quot;Returns a query variable by name.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriInterface", "fromLink": "Windwalker/Uri/UriInterface.html", "link": "Windwalker/Uri/UriInterface.html#method_getQuery", "name": "Windwalker\\Uri\\UriInterface::getQuery", "doc": "&quot;Returns flat query string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriInterface", "fromLink": "Windwalker/Uri/UriInterface.html", "link": "Windwalker/Uri/UriInterface.html#method_getScheme", "name": "Windwalker\\Uri\\UriInterface::getScheme", "doc": "&quot;Get URI scheme (protocol)\nie. http, https, ftp, etc.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriInterface", "fromLink": "Windwalker/Uri/UriInterface.html", "link": "Windwalker/Uri/UriInterface.html#method_getUser", "name": "Windwalker\\Uri\\UriInterface::getUser", "doc": "&quot;Get URI username\nReturns the username, or null if no username was specified.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriInterface", "fromLink": "Windwalker/Uri/UriInterface.html", "link": "Windwalker/Uri/UriInterface.html#method_getPass", "name": "Windwalker\\Uri\\UriInterface::getPass", "doc": "&quot;Get URI password\nReturns the password, or null if no password was specified.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriInterface", "fromLink": "Windwalker/Uri/UriInterface.html", "link": "Windwalker/Uri/UriInterface.html#method_getHost", "name": "Windwalker\\Uri\\UriInterface::getHost", "doc": "&quot;Get URI host\nReturns the hostname\/ip or null if no hostname\/ip was specified.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriInterface", "fromLink": "Windwalker/Uri/UriInterface.html", "link": "Windwalker/Uri/UriInterface.html#method_getPort", "name": "Windwalker\\Uri\\UriInterface::getPort", "doc": "&quot;Get URI port\nReturns the port number, or null if no port was specified.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriInterface", "fromLink": "Windwalker/Uri/UriInterface.html", "link": "Windwalker/Uri/UriInterface.html#method_getPath", "name": "Windwalker\\Uri\\UriInterface::getPath", "doc": "&quot;Gets the URI path string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriInterface", "fromLink": "Windwalker/Uri/UriInterface.html", "link": "Windwalker/Uri/UriInterface.html#method_getFragment", "name": "Windwalker\\Uri\\UriInterface::getFragment", "doc": "&quot;Get the URI archor string\nEverything after the \&quot;#\&quot;.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriInterface", "fromLink": "Windwalker/Uri/UriInterface.html", "link": "Windwalker/Uri/UriInterface.html#method_isSSL", "name": "Windwalker\\Uri\\UriInterface::isSSL", "doc": "&quot;Checks whether the current URI is using HTTPS.&quot;"},
            
            {"type": "Interface", "fromName": "Windwalker\\Validator", "fromLink": "Windwalker/Validator.html", "link": "Windwalker/Validator/ValidatorInterface.html", "name": "Windwalker\\Validator\\ValidatorInterface", "doc": "&quot;The ValidatorInterface class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Validator\\ValidatorInterface", "fromLink": "Windwalker/Validator/ValidatorInterface.html", "link": "Windwalker/Validator/ValidatorInterface.html#method_validate", "name": "Windwalker\\Validator\\ValidatorInterface::validate", "doc": "&quot;Test this value.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Validator\\ValidatorInterface", "fromLink": "Windwalker/Validator/ValidatorInterface.html", "link": "Windwalker/Validator/ValidatorInterface.html#method_getError", "name": "Windwalker\\Validator\\ValidatorInterface::getError", "doc": "&quot;Get error message.&quot;"},
            
            
            {"type": "Class",  "link": "Aes.html", "name": "Aes", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Aes", "fromLink": "Aes.html", "link": "Aes.html#method_cipher", "name": "Aes::cipher", "doc": "&quot;AES Cipher function: encrypt &#039;input&#039; with Rijndael algorithm&quot;"},
                    {"type": "Method", "fromName": "Aes", "fromLink": "Aes.html", "link": "Aes.html#method_keyExpansion", "name": "Aes::keyExpansion", "doc": "&quot;Key expansion for Rijndael cipher(): performs key expansion on cipher key\nto generate a key schedule&quot;"},
            
            {"type": "Class",  "link": "AesCtr.html", "name": "AesCtr", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "AesCtr", "fromLink": "AesCtr.html", "link": "AesCtr.html#method_encrypt", "name": "AesCtr::encrypt", "doc": "&quot;Encrypt a text using AES encryption in Counter mode of operation\n - see http:\/\/csrc.nist.gov\/publications\/nistpubs\/800-38a\/sp800-38a.pdf&quot;"},
                    {"type": "Method", "fromName": "AesCtr", "fromLink": "AesCtr.html", "link": "AesCtr.html#method_decrypt", "name": "AesCtr::decrypt", "doc": "&quot;Decrypt a text encrypted by AES in counter mode of operation&quot;"},
            
            {"type": "Class",  "link": "CallbackFilterIterator.html", "name": "CallbackFilterIterator", "doc": "&quot;The CallFilterIterator class.&quot;"},
                                                        {"type": "Method", "fromName": "CallbackFilterIterator", "fromLink": "CallbackFilterIterator.html", "link": "CallbackFilterIterator.html#method___construct", "name": "CallbackFilterIterator::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "CallbackFilterIterator", "fromLink": "CallbackFilterIterator.html", "link": "CallbackFilterIterator.html#method_accept", "name": "CallbackFilterIterator::accept", "doc": "&quot;accept&quot;"},
            
            {"type": "Class",  "link": "JsonSerializable.html", "name": "JsonSerializable", "doc": "&quot;Interface JsonSerializable&quot;"},
                                                        {"type": "Method", "fromName": "JsonSerializable", "fromLink": "JsonSerializable.html", "link": "JsonSerializable.html#method_jsonSerialize", "name": "JsonSerializable::jsonSerialize", "doc": "&quot;Return data which should be serialized by json_encode().&quot;"},
            
            {"type": "Class",  "link": "SessionHandler.html", "name": "SessionHandler", "doc": "&quot;The SessionHandler class.&quot;"},
                                                        {"type": "Method", "fromName": "SessionHandler", "fromLink": "SessionHandler.html", "link": "SessionHandler.html#method_close", "name": "SessionHandler::close", "doc": "&quot;Close the session&quot;"},
                    {"type": "Method", "fromName": "SessionHandler", "fromLink": "SessionHandler.html", "link": "SessionHandler.html#method_destroy", "name": "SessionHandler::destroy", "doc": "&quot;Destroy a session&quot;"},
                    {"type": "Method", "fromName": "SessionHandler", "fromLink": "SessionHandler.html", "link": "SessionHandler.html#method_gc", "name": "SessionHandler::gc", "doc": "&quot;Cleanup old sessions&quot;"},
                    {"type": "Method", "fromName": "SessionHandler", "fromLink": "SessionHandler.html", "link": "SessionHandler.html#method_open", "name": "SessionHandler::open", "doc": "&quot;Initialize session&quot;"},
                    {"type": "Method", "fromName": "SessionHandler", "fromLink": "SessionHandler.html", "link": "SessionHandler.html#method_read", "name": "SessionHandler::read", "doc": "&quot;Read session data&quot;"},
                    {"type": "Method", "fromName": "SessionHandler", "fromLink": "SessionHandler.html", "link": "SessionHandler.html#method_write", "name": "SessionHandler::write", "doc": "&quot;Write session data&quot;"},
            
            {"type": "Class",  "link": "SessionHandlerInterface.html", "name": "SessionHandlerInterface", "doc": "&quot;SessionHandler Interface&quot;"},
                                                        {"type": "Method", "fromName": "SessionHandlerInterface", "fromLink": "SessionHandlerInterface.html", "link": "SessionHandlerInterface.html#method_close", "name": "SessionHandlerInterface::close", "doc": "&quot;Close the session&quot;"},
                    {"type": "Method", "fromName": "SessionHandlerInterface", "fromLink": "SessionHandlerInterface.html", "link": "SessionHandlerInterface.html#method_destroy", "name": "SessionHandlerInterface::destroy", "doc": "&quot;Destroy a session&quot;"},
                    {"type": "Method", "fromName": "SessionHandlerInterface", "fromLink": "SessionHandlerInterface.html", "link": "SessionHandlerInterface.html#method_gc", "name": "SessionHandlerInterface::gc", "doc": "&quot;Cleanup old sessions&quot;"},
                    {"type": "Method", "fromName": "SessionHandlerInterface", "fromLink": "SessionHandlerInterface.html", "link": "SessionHandlerInterface.html#method_open", "name": "SessionHandlerInterface::open", "doc": "&quot;Initialize session&quot;"},
                    {"type": "Method", "fromName": "SessionHandlerInterface", "fromLink": "SessionHandlerInterface.html", "link": "SessionHandlerInterface.html#method_read", "name": "SessionHandlerInterface::read", "doc": "&quot;Read session data&quot;"},
                    {"type": "Method", "fromName": "SessionHandlerInterface", "fromLink": "SessionHandlerInterface.html", "link": "SessionHandlerInterface.html#method_write", "name": "SessionHandlerInterface::write", "doc": "&quot;Write session data&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Application", "fromLink": "Windwalker/Application.html", "link": "Windwalker/Application/AbstractApplication.html", "name": "Windwalker\\Application\\AbstractApplication", "doc": "&quot;The Abstract Application Class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Application\\AbstractApplication", "fromLink": "Windwalker/Application/AbstractApplication.html", "link": "Windwalker/Application/AbstractApplication.html#method___construct", "name": "Windwalker\\Application\\AbstractApplication::__construct", "doc": "&quot;Class constructor of Application.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractApplication", "fromLink": "Windwalker/Application/AbstractApplication.html", "link": "Windwalker/Application/AbstractApplication.html#method_close", "name": "Windwalker\\Application\\AbstractApplication::close", "doc": "&quot;Method to close the application.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractApplication", "fromLink": "Windwalker/Application/AbstractApplication.html", "link": "Windwalker/Application/AbstractApplication.html#method_execute", "name": "Windwalker\\Application\\AbstractApplication::execute", "doc": "&quot;Execute the application.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractApplication", "fromLink": "Windwalker/Application/AbstractApplication.html", "link": "Windwalker/Application/AbstractApplication.html#method_get", "name": "Windwalker\\Application\\AbstractApplication::get", "doc": "&quot;Returns a property of the object or the default value if the property is not set.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractApplication", "fromLink": "Windwalker/Application/AbstractApplication.html", "link": "Windwalker/Application/AbstractApplication.html#method_getLogger", "name": "Windwalker\\Application\\AbstractApplication::getLogger", "doc": "&quot;Get the logger.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractApplication", "fromLink": "Windwalker/Application/AbstractApplication.html", "link": "Windwalker/Application/AbstractApplication.html#method_set", "name": "Windwalker\\Application\\AbstractApplication::set", "doc": "&quot;Modifies a property of the object, creating it if it does not already exist.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractApplication", "fromLink": "Windwalker/Application/AbstractApplication.html", "link": "Windwalker/Application/AbstractApplication.html#method_setConfiguration", "name": "Windwalker\\Application\\AbstractApplication::setConfiguration", "doc": "&quot;Sets the configuration for the application.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractApplication", "fromLink": "Windwalker/Application/AbstractApplication.html", "link": "Windwalker/Application/AbstractApplication.html#method_setLogger", "name": "Windwalker\\Application\\AbstractApplication::setLogger", "doc": "&quot;Set the logger.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractApplication", "fromLink": "Windwalker/Application/AbstractApplication.html", "link": "Windwalker/Application/AbstractApplication.html#method___get", "name": "Windwalker\\Application\\AbstractApplication::__get", "doc": "&quot;is utilized for reading data from inaccessible members.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Application", "fromLink": "Windwalker/Application.html", "link": "Windwalker/Application/AbstractCliApplication.html", "name": "Windwalker\\Application\\AbstractCliApplication", "doc": "&quot;Simple class for a Windwalker command line application.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Application\\AbstractCliApplication", "fromLink": "Windwalker/Application/AbstractCliApplication.html", "link": "Windwalker/Application/AbstractCliApplication.html#method___construct", "name": "Windwalker\\Application\\AbstractCliApplication::__construct", "doc": "&quot;Class constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractCliApplication", "fromLink": "Windwalker/Application/AbstractCliApplication.html", "link": "Windwalker/Application/AbstractCliApplication.html#method_out", "name": "Windwalker\\Application\\AbstractCliApplication::out", "doc": "&quot;Write a string to standard output.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractCliApplication", "fromLink": "Windwalker/Application/AbstractCliApplication.html", "link": "Windwalker/Application/AbstractCliApplication.html#method_in", "name": "Windwalker\\Application\\AbstractCliApplication::in", "doc": "&quot;Get a value from standard input.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractCliApplication", "fromLink": "Windwalker/Application/AbstractCliApplication.html", "link": "Windwalker/Application/AbstractCliApplication.html#method_getIO", "name": "Windwalker\\Application\\AbstractCliApplication::getIO", "doc": "&quot;Get the IO object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractCliApplication", "fromLink": "Windwalker/Application/AbstractCliApplication.html", "link": "Windwalker/Application/AbstractCliApplication.html#method_setIO", "name": "Windwalker\\Application\\AbstractCliApplication::setIO", "doc": "&quot;Set the IO object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractCliApplication", "fromLink": "Windwalker/Application/AbstractCliApplication.html", "link": "Windwalker/Application/AbstractCliApplication.html#method___get", "name": "Windwalker\\Application\\AbstractCliApplication::__get", "doc": "&quot;is utilized for reading data from inaccessible members.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Application", "fromLink": "Windwalker/Application.html", "link": "Windwalker/Application/AbstractDaemonApplication.html", "name": "Windwalker\\Application\\AbstractDaemonApplication", "doc": "&quot;Class to turn Cli applications into daemons.  It requires CLI and PCNTL support built into PHP.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Application\\AbstractDaemonApplication", "fromLink": "Windwalker/Application/AbstractDaemonApplication.html", "link": "Windwalker/Application/AbstractDaemonApplication.html#method___construct", "name": "Windwalker\\Application\\AbstractDaemonApplication::__construct", "doc": "&quot;Class constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractDaemonApplication", "fromLink": "Windwalker/Application/AbstractDaemonApplication.html", "link": "Windwalker/Application/AbstractDaemonApplication.html#method_signal", "name": "Windwalker\\Application\\AbstractDaemonApplication::signal", "doc": "&quot;Method to handle POSIX signals.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractDaemonApplication", "fromLink": "Windwalker/Application/AbstractDaemonApplication.html", "link": "Windwalker/Application/AbstractDaemonApplication.html#method_isActive", "name": "Windwalker\\Application\\AbstractDaemonApplication::isActive", "doc": "&quot;Check to see if the daemon is active.  This does not assume that $this daemon is active, but\nonly if an instance of the application is active as a daemon.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractDaemonApplication", "fromLink": "Windwalker/Application/AbstractDaemonApplication.html", "link": "Windwalker/Application/AbstractDaemonApplication.html#method_loadConfiguration", "name": "Windwalker\\Application\\AbstractDaemonApplication::loadConfiguration", "doc": "&quot;Load an object or array into the application configuration object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractDaemonApplication", "fromLink": "Windwalker/Application/AbstractDaemonApplication.html", "link": "Windwalker/Application/AbstractDaemonApplication.html#method_execute", "name": "Windwalker\\Application\\AbstractDaemonApplication::execute", "doc": "&quot;Execute the daemon.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractDaemonApplication", "fromLink": "Windwalker/Application/AbstractDaemonApplication.html", "link": "Windwalker/Application/AbstractDaemonApplication.html#method_restart", "name": "Windwalker\\Application\\AbstractDaemonApplication::restart", "doc": "&quot;Restart daemon process.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractDaemonApplication", "fromLink": "Windwalker/Application/AbstractDaemonApplication.html", "link": "Windwalker/Application/AbstractDaemonApplication.html#method_stop", "name": "Windwalker\\Application\\AbstractDaemonApplication::stop", "doc": "&quot;Stop daemon process.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractDaemonApplication", "fromLink": "Windwalker/Application/AbstractDaemonApplication.html", "link": "Windwalker/Application/AbstractDaemonApplication.html#method_getName", "name": "Windwalker\\Application\\AbstractDaemonApplication::getName", "doc": "&quot;Get application name.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractDaemonApplication", "fromLink": "Windwalker/Application/AbstractDaemonApplication.html", "link": "Windwalker/Application/AbstractDaemonApplication.html#method_setName", "name": "Windwalker\\Application\\AbstractDaemonApplication::setName", "doc": "&quot;Set application name.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Application", "fromLink": "Windwalker/Application.html", "link": "Windwalker/Application/AbstractWebApplication.html", "name": "Windwalker\\Application\\AbstractWebApplication", "doc": "&quot;Application for Web HTTP foundation.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Application\\AbstractWebApplication", "fromLink": "Windwalker/Application/AbstractWebApplication.html", "link": "Windwalker/Application/AbstractWebApplication.html#method___construct", "name": "Windwalker\\Application\\AbstractWebApplication::__construct", "doc": "&quot;Class constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractWebApplication", "fromLink": "Windwalker/Application/AbstractWebApplication.html", "link": "Windwalker/Application/AbstractWebApplication.html#method_execute", "name": "Windwalker\\Application\\AbstractWebApplication::execute", "doc": "&quot;Execute the application.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractWebApplication", "fromLink": "Windwalker/Application/AbstractWebApplication.html", "link": "Windwalker/Application/AbstractWebApplication.html#method_dispatch", "name": "Windwalker\\Application\\AbstractWebApplication::dispatch", "doc": "&quot;Method as the Psr7 WebHttpServer handler.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractWebApplication", "fromLink": "Windwalker/Application/AbstractWebApplication.html", "link": "Windwalker/Application/AbstractWebApplication.html#method___toString", "name": "Windwalker\\Application\\AbstractWebApplication::__toString", "doc": "&quot;Magic method to render output.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractWebApplication", "fromLink": "Windwalker/Application/AbstractWebApplication.html", "link": "Windwalker/Application/AbstractWebApplication.html#method_redirect", "name": "Windwalker\\Application\\AbstractWebApplication::redirect", "doc": "&quot;Redirect to another URL.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractWebApplication", "fromLink": "Windwalker/Application/AbstractWebApplication.html", "link": "Windwalker/Application/AbstractWebApplication.html#method_getEnvironment", "name": "Windwalker\\Application\\AbstractWebApplication::getEnvironment", "doc": "&quot;Method to get property Environment&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractWebApplication", "fromLink": "Windwalker/Application/AbstractWebApplication.html", "link": "Windwalker/Application/AbstractWebApplication.html#method_setEnvironment", "name": "Windwalker\\Application\\AbstractWebApplication::setEnvironment", "doc": "&quot;Method to set property environment&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractWebApplication", "fromLink": "Windwalker/Application/AbstractWebApplication.html", "link": "Windwalker/Application/AbstractWebApplication.html#method_getFinalHandler", "name": "Windwalker\\Application\\AbstractWebApplication::getFinalHandler", "doc": "&quot;Method to get property FinalHandler&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractWebApplication", "fromLink": "Windwalker/Application/AbstractWebApplication.html", "link": "Windwalker/Application/AbstractWebApplication.html#method_setFinalHandler", "name": "Windwalker\\Application\\AbstractWebApplication::setFinalHandler", "doc": "&quot;Method to set property finalHandler&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractWebApplication", "fromLink": "Windwalker/Application/AbstractWebApplication.html", "link": "Windwalker/Application/AbstractWebApplication.html#method_checkHeadersSent", "name": "Windwalker\\Application\\AbstractWebApplication::checkHeadersSent", "doc": "&quot;Method to check to see if headers have already been sent.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractWebApplication", "fromLink": "Windwalker/Application/AbstractWebApplication.html", "link": "Windwalker/Application/AbstractWebApplication.html#method_getServer", "name": "Windwalker\\Application\\AbstractWebApplication::getServer", "doc": "&quot;Method to get property Server&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractWebApplication", "fromLink": "Windwalker/Application/AbstractWebApplication.html", "link": "Windwalker/Application/AbstractWebApplication.html#method_setServer", "name": "Windwalker\\Application\\AbstractWebApplication::setServer", "doc": "&quot;Method to set property server&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractWebApplication", "fromLink": "Windwalker/Application/AbstractWebApplication.html", "link": "Windwalker/Application/AbstractWebApplication.html#method_getRequest", "name": "Windwalker\\Application\\AbstractWebApplication::getRequest", "doc": "&quot;Method to get property Request&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractWebApplication", "fromLink": "Windwalker/Application/AbstractWebApplication.html", "link": "Windwalker/Application/AbstractWebApplication.html#method_getUri", "name": "Windwalker\\Application\\AbstractWebApplication::getUri", "doc": "&quot;Method to get property Uri&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractWebApplication", "fromLink": "Windwalker/Application/AbstractWebApplication.html", "link": "Windwalker/Application/AbstractWebApplication.html#method_getBrowser", "name": "Windwalker\\Application\\AbstractWebApplication::getBrowser", "doc": "&quot;Method to get property Browser&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractWebApplication", "fromLink": "Windwalker/Application/AbstractWebApplication.html", "link": "Windwalker/Application/AbstractWebApplication.html#method_getPlatform", "name": "Windwalker\\Application\\AbstractWebApplication::getPlatform", "doc": "&quot;Method to get property Platform&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Application\\AbstractWebApplication", "fromLink": "Windwalker/Application/AbstractWebApplication.html", "link": "Windwalker/Application/AbstractWebApplication.html#method___get", "name": "Windwalker\\Application\\AbstractWebApplication::__get", "doc": "&quot;is utilized for reading data from inaccessible members.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Application\\Helper", "fromLink": "Windwalker/Application/Helper.html", "link": "Windwalker/Application/Helper/ApplicationHelper.html", "name": "Windwalker\\Application\\Helper\\ApplicationHelper", "doc": "&quot;Application Helper.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Application\\Helper\\ApplicationHelper", "fromLink": "Windwalker/Application/Helper/ApplicationHelper.html", "link": "Windwalker/Application/Helper/ApplicationHelper.html#method_isAscii", "name": "Windwalker\\Application\\Helper\\ApplicationHelper::isAscii", "doc": "&quot;Tests whether a string contains only 7bit ASCII bytes.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Authentication", "fromLink": "Windwalker/Authentication.html", "link": "Windwalker/Authentication/Authentication.html", "name": "Windwalker\\Authentication\\Authentication", "doc": "&quot;The Authentication class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Authentication\\Authentication", "fromLink": "Windwalker/Authentication/Authentication.html", "link": "Windwalker/Authentication/Authentication.html#method___construct", "name": "Windwalker\\Authentication\\Authentication::__construct", "doc": "&quot;Authentication constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authentication\\Authentication", "fromLink": "Windwalker/Authentication/Authentication.html", "link": "Windwalker/Authentication/Authentication.html#method_authenticate", "name": "Windwalker\\Authentication\\Authentication::authenticate", "doc": "&quot;authenticate&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authentication\\Authentication", "fromLink": "Windwalker/Authentication/Authentication.html", "link": "Windwalker/Authentication/Authentication.html#method_addMethod", "name": "Windwalker\\Authentication\\Authentication::addMethod", "doc": "&quot;addMethod&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authentication\\Authentication", "fromLink": "Windwalker/Authentication/Authentication.html", "link": "Windwalker/Authentication/Authentication.html#method_getMethod", "name": "Windwalker\\Authentication\\Authentication::getMethod", "doc": "&quot;getMethod&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authentication\\Authentication", "fromLink": "Windwalker/Authentication/Authentication.html", "link": "Windwalker/Authentication/Authentication.html#method_removeMethod", "name": "Windwalker\\Authentication\\Authentication::removeMethod", "doc": "&quot;removeMethod&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authentication\\Authentication", "fromLink": "Windwalker/Authentication/Authentication.html", "link": "Windwalker/Authentication/Authentication.html#method_getResults", "name": "Windwalker\\Authentication\\Authentication::getResults", "doc": "&quot;Method to get property Results&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authentication\\Authentication", "fromLink": "Windwalker/Authentication/Authentication.html", "link": "Windwalker/Authentication/Authentication.html#method_getCredential", "name": "Windwalker\\Authentication\\Authentication::getCredential", "doc": "&quot;Method to get property Credential&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Authentication", "fromLink": "Windwalker/Authentication.html", "link": "Windwalker/Authentication/AuthenticationInterface.html", "name": "Windwalker\\Authentication\\AuthenticationInterface", "doc": "&quot;Interface AuthenticationInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Authentication\\AuthenticationInterface", "fromLink": "Windwalker/Authentication/AuthenticationInterface.html", "link": "Windwalker/Authentication/AuthenticationInterface.html#method_authenticate", "name": "Windwalker\\Authentication\\AuthenticationInterface::authenticate", "doc": "&quot;authenticate&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authentication\\AuthenticationInterface", "fromLink": "Windwalker/Authentication/AuthenticationInterface.html", "link": "Windwalker/Authentication/AuthenticationInterface.html#method_addMethod", "name": "Windwalker\\Authentication\\AuthenticationInterface::addMethod", "doc": "&quot;addMethod&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authentication\\AuthenticationInterface", "fromLink": "Windwalker/Authentication/AuthenticationInterface.html", "link": "Windwalker/Authentication/AuthenticationInterface.html#method_getResults", "name": "Windwalker\\Authentication\\AuthenticationInterface::getResults", "doc": "&quot;Method to get property Results&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authentication\\AuthenticationInterface", "fromLink": "Windwalker/Authentication/AuthenticationInterface.html", "link": "Windwalker/Authentication/AuthenticationInterface.html#method_getCredential", "name": "Windwalker\\Authentication\\AuthenticationInterface::getCredential", "doc": "&quot;Method to get property Credential&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Authentication", "fromLink": "Windwalker/Authentication.html", "link": "Windwalker/Authentication/Credential.html", "name": "Windwalker\\Authentication\\Credential", "doc": "&quot;The Credential class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Authentication\\Credential", "fromLink": "Windwalker/Authentication/Credential.html", "link": "Windwalker/Authentication/Credential.html#method___construct", "name": "Windwalker\\Authentication\\Credential::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authentication\\Credential", "fromLink": "Windwalker/Authentication/Credential.html", "link": "Windwalker/Authentication/Credential.html#method___get", "name": "Windwalker\\Authentication\\Credential::__get", "doc": "&quot;__get&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authentication\\Credential", "fromLink": "Windwalker/Authentication/Credential.html", "link": "Windwalker/Authentication/Credential.html#method_bind", "name": "Windwalker\\Authentication\\Credential::bind", "doc": "&quot;bind&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authentication\\Credential", "fromLink": "Windwalker/Authentication/Credential.html", "link": "Windwalker/Authentication/Credential.html#method_offsetExists", "name": "Windwalker\\Authentication\\Credential::offsetExists", "doc": "&quot;Is a property exists or not.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authentication\\Credential", "fromLink": "Windwalker/Authentication/Credential.html", "link": "Windwalker/Authentication/Credential.html#method_offsetGet", "name": "Windwalker\\Authentication\\Credential::offsetGet", "doc": "&quot;Get a property.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authentication\\Credential", "fromLink": "Windwalker/Authentication/Credential.html", "link": "Windwalker/Authentication/Credential.html#method_offsetSet", "name": "Windwalker\\Authentication\\Credential::offsetSet", "doc": "&quot;Set a value to property.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authentication\\Credential", "fromLink": "Windwalker/Authentication/Credential.html", "link": "Windwalker/Authentication/Credential.html#method_offsetUnset", "name": "Windwalker\\Authentication\\Credential::offsetUnset", "doc": "&quot;Unset a property.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Authentication\\Method", "fromLink": "Windwalker/Authentication/Method.html", "link": "Windwalker/Authentication/Method/AbstractMethod.html", "name": "Windwalker\\Authentication\\Method\\AbstractMethod", "doc": "&quot;The AbstractMethod class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Authentication\\Method\\AbstractMethod", "fromLink": "Windwalker/Authentication/Method/AbstractMethod.html", "link": "Windwalker/Authentication/Method/AbstractMethod.html#method_getStatus", "name": "Windwalker\\Authentication\\Method\\AbstractMethod::getStatus", "doc": "&quot;getStatus&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Authentication\\Method", "fromLink": "Windwalker/Authentication/Method.html", "link": "Windwalker/Authentication/Method/LocalMethod.html", "name": "Windwalker\\Authentication\\Method\\LocalMethod", "doc": "&quot;The LocalMethod class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Authentication\\Method\\LocalMethod", "fromLink": "Windwalker/Authentication/Method/LocalMethod.html", "link": "Windwalker/Authentication/Method/LocalMethod.html#method___construct", "name": "Windwalker\\Authentication\\Method\\LocalMethod::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authentication\\Method\\LocalMethod", "fromLink": "Windwalker/Authentication/Method/LocalMethod.html", "link": "Windwalker/Authentication/Method/LocalMethod.html#method_authenticate", "name": "Windwalker\\Authentication\\Method\\LocalMethod::authenticate", "doc": "&quot;authenticate&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authentication\\Method\\LocalMethod", "fromLink": "Windwalker/Authentication/Method/LocalMethod.html", "link": "Windwalker/Authentication/Method/LocalMethod.html#method_getVerifyHandler", "name": "Windwalker\\Authentication\\Method\\LocalMethod::getVerifyHandler", "doc": "&quot;Method to get property VerifyHandler&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authentication\\Method\\LocalMethod", "fromLink": "Windwalker/Authentication/Method/LocalMethod.html", "link": "Windwalker/Authentication/Method/LocalMethod.html#method_setVerifyHandler", "name": "Windwalker\\Authentication\\Method\\LocalMethod::setVerifyHandler", "doc": "&quot;Method to set property verifyHandler&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authentication\\Method\\LocalMethod", "fromLink": "Windwalker/Authentication/Method/LocalMethod.html", "link": "Windwalker/Authentication/Method/LocalMethod.html#method_getUsers", "name": "Windwalker\\Authentication\\Method\\LocalMethod::getUsers", "doc": "&quot;Method to get property Users&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authentication\\Method\\LocalMethod", "fromLink": "Windwalker/Authentication/Method/LocalMethod.html", "link": "Windwalker/Authentication/Method/LocalMethod.html#method_setUsers", "name": "Windwalker\\Authentication\\Method\\LocalMethod::setUsers", "doc": "&quot;Method to set property users&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Authentication\\Method", "fromLink": "Windwalker/Authentication/Method.html", "link": "Windwalker/Authentication/Method/MethodInterface.html", "name": "Windwalker\\Authentication\\Method\\MethodInterface", "doc": "&quot;Interface MethodInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Authentication\\Method\\MethodInterface", "fromLink": "Windwalker/Authentication/Method/MethodInterface.html", "link": "Windwalker/Authentication/Method/MethodInterface.html#method_authenticate", "name": "Windwalker\\Authentication\\Method\\MethodInterface::authenticate", "doc": "&quot;authenticate&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authentication\\Method\\MethodInterface", "fromLink": "Windwalker/Authentication/Method/MethodInterface.html", "link": "Windwalker/Authentication/Method/MethodInterface.html#method_getStatus", "name": "Windwalker\\Authentication\\Method\\MethodInterface::getStatus", "doc": "&quot;getResult&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Authorisation", "fromLink": "Windwalker/Authorisation.html", "link": "Windwalker/Authorisation/Authorisation.html", "name": "Windwalker\\Authorisation\\Authorisation", "doc": "&quot;The Authorisation class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Authorisation\\Authorisation", "fromLink": "Windwalker/Authorisation/Authorisation.html", "link": "Windwalker/Authorisation/Authorisation.html#method_authorise", "name": "Windwalker\\Authorisation\\Authorisation::authorise", "doc": "&quot;authorise&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authorisation\\Authorisation", "fromLink": "Windwalker/Authorisation/Authorisation.html", "link": "Windwalker/Authorisation/Authorisation.html#method_addPolicy", "name": "Windwalker\\Authorisation\\Authorisation::addPolicy", "doc": "&quot;addPolicy&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authorisation\\Authorisation", "fromLink": "Windwalker/Authorisation/Authorisation.html", "link": "Windwalker/Authorisation/Authorisation.html#method_getPolicy", "name": "Windwalker\\Authorisation\\Authorisation::getPolicy", "doc": "&quot;getPolicy&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authorisation\\Authorisation", "fromLink": "Windwalker/Authorisation/Authorisation.html", "link": "Windwalker/Authorisation/Authorisation.html#method_registerPolicyProvider", "name": "Windwalker\\Authorisation\\Authorisation::registerPolicyProvider", "doc": "&quot;registerPolicy&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authorisation\\Authorisation", "fromLink": "Windwalker/Authorisation/Authorisation.html", "link": "Windwalker/Authorisation/Authorisation.html#method_hasPolicy", "name": "Windwalker\\Authorisation\\Authorisation::hasPolicy", "doc": "&quot;hasPolicy&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authorisation\\Authorisation", "fromLink": "Windwalker/Authorisation/Authorisation.html", "link": "Windwalker/Authorisation/Authorisation.html#method_getPolicies", "name": "Windwalker\\Authorisation\\Authorisation::getPolicies", "doc": "&quot;Method to get property Policies&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authorisation\\Authorisation", "fromLink": "Windwalker/Authorisation/Authorisation.html", "link": "Windwalker/Authorisation/Authorisation.html#method_setPolicies", "name": "Windwalker\\Authorisation\\Authorisation::setPolicies", "doc": "&quot;Method to set property policies&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Authorisation", "fromLink": "Windwalker/Authorisation.html", "link": "Windwalker/Authorisation/AuthorisationInterface.html", "name": "Windwalker\\Authorisation\\AuthorisationInterface", "doc": "&quot;The AuthorisationInterface class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Authorisation\\AuthorisationInterface", "fromLink": "Windwalker/Authorisation/AuthorisationInterface.html", "link": "Windwalker/Authorisation/AuthorisationInterface.html#method_authorise", "name": "Windwalker\\Authorisation\\AuthorisationInterface::authorise", "doc": "&quot;authorise&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authorisation\\AuthorisationInterface", "fromLink": "Windwalker/Authorisation/AuthorisationInterface.html", "link": "Windwalker/Authorisation/AuthorisationInterface.html#method_addPolicy", "name": "Windwalker\\Authorisation\\AuthorisationInterface::addPolicy", "doc": "&quot;addPolicy&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authorisation\\AuthorisationInterface", "fromLink": "Windwalker/Authorisation/AuthorisationInterface.html", "link": "Windwalker/Authorisation/AuthorisationInterface.html#method_registerPolicyProvider", "name": "Windwalker\\Authorisation\\AuthorisationInterface::registerPolicyProvider", "doc": "&quot;registerPolicy&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Authorisation", "fromLink": "Windwalker/Authorisation.html", "link": "Windwalker/Authorisation/CallbackPolicy.html", "name": "Windwalker\\Authorisation\\CallbackPolicy", "doc": "&quot;The CallbackPolicy class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Authorisation\\CallbackPolicy", "fromLink": "Windwalker/Authorisation/CallbackPolicy.html", "link": "Windwalker/Authorisation/CallbackPolicy.html#method___construct", "name": "Windwalker\\Authorisation\\CallbackPolicy::__construct", "doc": "&quot;CallbackPolicy constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authorisation\\CallbackPolicy", "fromLink": "Windwalker/Authorisation/CallbackPolicy.html", "link": "Windwalker/Authorisation/CallbackPolicy.html#method_authorise", "name": "Windwalker\\Authorisation\\CallbackPolicy::authorise", "doc": "&quot;authorise&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authorisation\\CallbackPolicy", "fromLink": "Windwalker/Authorisation/CallbackPolicy.html", "link": "Windwalker/Authorisation/CallbackPolicy.html#method_getHandler", "name": "Windwalker\\Authorisation\\CallbackPolicy::getHandler", "doc": "&quot;Method to get property Handler&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Authorisation\\CallbackPolicy", "fromLink": "Windwalker/Authorisation/CallbackPolicy.html", "link": "Windwalker/Authorisation/CallbackPolicy.html#method_setHandler", "name": "Windwalker\\Authorisation\\CallbackPolicy::setHandler", "doc": "&quot;Method to set property handler&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Authorisation", "fromLink": "Windwalker/Authorisation.html", "link": "Windwalker/Authorisation/PolicyInterface.html", "name": "Windwalker\\Authorisation\\PolicyInterface", "doc": "&quot;The PolicyInterface class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Authorisation\\PolicyInterface", "fromLink": "Windwalker/Authorisation/PolicyInterface.html", "link": "Windwalker/Authorisation/PolicyInterface.html#method_authorise", "name": "Windwalker\\Authorisation\\PolicyInterface::authorise", "doc": "&quot;authorise&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Authorisation", "fromLink": "Windwalker/Authorisation.html", "link": "Windwalker/Authorisation/PolicyProviderInterface.html", "name": "Windwalker\\Authorisation\\PolicyProviderInterface", "doc": "&quot;Interface PolicyInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Authorisation\\PolicyProviderInterface", "fromLink": "Windwalker/Authorisation/PolicyProviderInterface.html", "link": "Windwalker/Authorisation/PolicyProviderInterface.html#method_register", "name": "Windwalker\\Authorisation\\PolicyProviderInterface::register", "doc": "&quot;register&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Cache", "fromLink": "Windwalker/Cache.html", "link": "Windwalker/Cache/Cache.html", "name": "Windwalker\\Cache\\Cache", "doc": "&quot;Class Cache&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Cache\\Cache", "fromLink": "Windwalker/Cache/Cache.html", "link": "Windwalker/Cache/Cache.html#method___construct", "name": "Windwalker\\Cache\\Cache::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Cache", "fromLink": "Windwalker/Cache/Cache.html", "link": "Windwalker/Cache/Cache.html#method_get", "name": "Windwalker\\Cache\\Cache::get", "doc": "&quot;Here we pass in a cache key to be fetched from the cache.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Cache", "fromLink": "Windwalker/Cache/Cache.html", "link": "Windwalker/Cache/Cache.html#method_set", "name": "Windwalker\\Cache\\Cache::set", "doc": "&quot;Persisting our data in the cache, uniquely referenced by a key with an optional expiration TTL time.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Cache", "fromLink": "Windwalker/Cache/Cache.html", "link": "Windwalker/Cache/Cache.html#method_remove", "name": "Windwalker\\Cache\\Cache::remove", "doc": "&quot;Remove an item from the cache by its unique key&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Cache", "fromLink": "Windwalker/Cache/Cache.html", "link": "Windwalker/Cache/Cache.html#method_clear", "name": "Windwalker\\Cache\\Cache::clear", "doc": "&quot;This will wipe out the entire cache&#039;s keys&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Cache", "fromLink": "Windwalker/Cache/Cache.html", "link": "Windwalker/Cache/Cache.html#method_getMultiple", "name": "Windwalker\\Cache\\Cache::getMultiple", "doc": "&quot;Obtain multiple CacheItems by their unique keys&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Cache", "fromLink": "Windwalker/Cache/Cache.html", "link": "Windwalker/Cache/Cache.html#method_setMultiple", "name": "Windwalker\\Cache\\Cache::setMultiple", "doc": "&quot;Persisting a set of key =&gt; value pairs in the cache, with an optional TTL.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Cache", "fromLink": "Windwalker/Cache/Cache.html", "link": "Windwalker/Cache/Cache.html#method_removeMultiple", "name": "Windwalker\\Cache\\Cache::removeMultiple", "doc": "&quot;Remove multiple cache items in a single operation&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Cache", "fromLink": "Windwalker/Cache/Cache.html", "link": "Windwalker/Cache/Cache.html#method_call", "name": "Windwalker\\Cache\\Cache::call", "doc": "&quot;Fetch data from a callback if item not exists.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Cache", "fromLink": "Windwalker/Cache/Cache.html", "link": "Windwalker/Cache/Cache.html#method_getStorage", "name": "Windwalker\\Cache\\Cache::getStorage", "doc": "&quot;getStorage&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Cache", "fromLink": "Windwalker/Cache/Cache.html", "link": "Windwalker/Cache/Cache.html#method_setStorage", "name": "Windwalker\\Cache\\Cache::setStorage", "doc": "&quot;setStorage&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Cache", "fromLink": "Windwalker/Cache/Cache.html", "link": "Windwalker/Cache/Cache.html#method_exists", "name": "Windwalker\\Cache\\Cache::exists", "doc": "&quot;exists&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Cache", "fromLink": "Windwalker/Cache/Cache.html", "link": "Windwalker/Cache/Cache.html#method_getSerializer", "name": "Windwalker\\Cache\\Cache::getSerializer", "doc": "&quot;getHandler&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Cache", "fromLink": "Windwalker/Cache/Cache.html", "link": "Windwalker/Cache/Cache.html#method_setSerializer", "name": "Windwalker\\Cache\\Cache::setSerializer", "doc": "&quot;setHandler&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Cache", "fromLink": "Windwalker/Cache/Cache.html", "link": "Windwalker/Cache/Cache.html#method_offsetExists", "name": "Windwalker\\Cache\\Cache::offsetExists", "doc": "&quot;Is a property exists or not.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Cache", "fromLink": "Windwalker/Cache/Cache.html", "link": "Windwalker/Cache/Cache.html#method_offsetGet", "name": "Windwalker\\Cache\\Cache::offsetGet", "doc": "&quot;Get a property.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Cache", "fromLink": "Windwalker/Cache/Cache.html", "link": "Windwalker/Cache/Cache.html#method_offsetSet", "name": "Windwalker\\Cache\\Cache::offsetSet", "doc": "&quot;Set a value to property.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Cache", "fromLink": "Windwalker/Cache/Cache.html", "link": "Windwalker/Cache/Cache.html#method_offsetUnset", "name": "Windwalker\\Cache\\Cache::offsetUnset", "doc": "&quot;Unset a property.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Cache", "fromLink": "Windwalker/Cache.html", "link": "Windwalker/Cache/CacheInterface.html", "name": "Windwalker\\Cache\\CacheInterface", "doc": "&quot;Interface CacheInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Cache\\CacheInterface", "fromLink": "Windwalker/Cache/CacheInterface.html", "link": "Windwalker/Cache/CacheInterface.html#method_get", "name": "Windwalker\\Cache\\CacheInterface::get", "doc": "&quot;Here we pass in a cache key to be fetched from the cache.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\CacheInterface", "fromLink": "Windwalker/Cache/CacheInterface.html", "link": "Windwalker/Cache/CacheInterface.html#method_set", "name": "Windwalker\\Cache\\CacheInterface::set", "doc": "&quot;Persisting our data in the cache, uniquely referenced by a key with an optional expiration TTL time.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\CacheInterface", "fromLink": "Windwalker/Cache/CacheInterface.html", "link": "Windwalker/Cache/CacheInterface.html#method_remove", "name": "Windwalker\\Cache\\CacheInterface::remove", "doc": "&quot;Remove an item from the cache by its unique key&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\CacheInterface", "fromLink": "Windwalker/Cache/CacheInterface.html", "link": "Windwalker/Cache/CacheInterface.html#method_call", "name": "Windwalker\\Cache\\CacheInterface::call", "doc": "&quot;Fetch data from a callback if item not exists.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\CacheInterface", "fromLink": "Windwalker/Cache/CacheInterface.html", "link": "Windwalker/Cache/CacheInterface.html#method_getMultiple", "name": "Windwalker\\Cache\\CacheInterface::getMultiple", "doc": "&quot;Obtain multiple CacheItems by their unique keys&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\CacheInterface", "fromLink": "Windwalker/Cache/CacheInterface.html", "link": "Windwalker/Cache/CacheInterface.html#method_setMultiple", "name": "Windwalker\\Cache\\CacheInterface::setMultiple", "doc": "&quot;Persisting a set of key =&gt; value pairs in the cache, with an optional TTL.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\CacheInterface", "fromLink": "Windwalker/Cache/CacheInterface.html", "link": "Windwalker/Cache/CacheInterface.html#method_removeMultiple", "name": "Windwalker\\Cache\\CacheInterface::removeMultiple", "doc": "&quot;Remove multiple cache items in a single operation&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\CacheInterface", "fromLink": "Windwalker/Cache/CacheInterface.html", "link": "Windwalker/Cache/CacheInterface.html#method_clear", "name": "Windwalker\\Cache\\CacheInterface::clear", "doc": "&quot;This will wipe out the entire cache&#039;s keys&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\CacheInterface", "fromLink": "Windwalker/Cache/CacheInterface.html", "link": "Windwalker/Cache/CacheInterface.html#method_exists", "name": "Windwalker\\Cache\\CacheInterface::exists", "doc": "&quot;exists&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Cache\\Item", "fromLink": "Windwalker/Cache/Item.html", "link": "Windwalker/Cache/Item/CacheItem.html", "name": "Windwalker\\Cache\\Item\\CacheItem", "doc": "&quot;Class CacheItem&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Cache\\Item\\CacheItem", "fromLink": "Windwalker/Cache/Item/CacheItem.html", "link": "Windwalker/Cache/Item/CacheItem.html#method___construct", "name": "Windwalker\\Cache\\Item\\CacheItem::__construct", "doc": "&quot;Class constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Item\\CacheItem", "fromLink": "Windwalker/Cache/Item/CacheItem.html", "link": "Windwalker/Cache/Item/CacheItem.html#method_getKey", "name": "Windwalker\\Cache\\Item\\CacheItem::getKey", "doc": "&quot;Get the key associated with this CacheItem.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Item\\CacheItem", "fromLink": "Windwalker/Cache/Item/CacheItem.html", "link": "Windwalker/Cache/Item/CacheItem.html#method_get", "name": "Windwalker\\Cache\\Item\\CacheItem::get", "doc": "&quot;Obtain the value of this cache item.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Item\\CacheItem", "fromLink": "Windwalker/Cache/Item/CacheItem.html", "link": "Windwalker/Cache/Item/CacheItem.html#method_set", "name": "Windwalker\\Cache\\Item\\CacheItem::set", "doc": "&quot;Set the value of the item.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Item\\CacheItem", "fromLink": "Windwalker/Cache/Item/CacheItem.html", "link": "Windwalker/Cache/Item/CacheItem.html#method_isHit", "name": "Windwalker\\Cache\\Item\\CacheItem::isHit", "doc": "&quot;This boolean value tells us if our cache item is currently in the cache or not.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Item\\CacheItem", "fromLink": "Windwalker/Cache/Item/CacheItem.html", "link": "Windwalker/Cache/Item/CacheItem.html#method_expiresAt", "name": "Windwalker\\Cache\\Item\\CacheItem::expiresAt", "doc": "&quot;Sets the expiration time for this cache item.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Item\\CacheItem", "fromLink": "Windwalker/Cache/Item/CacheItem.html", "link": "Windwalker/Cache/Item/CacheItem.html#method_expiresAfter", "name": "Windwalker\\Cache\\Item\\CacheItem::expiresAfter", "doc": "&quot;Sets the expiration time for this cache item.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Item\\CacheItem", "fromLink": "Windwalker/Cache/Item/CacheItem.html", "link": "Windwalker/Cache/Item/CacheItem.html#method_getExpiration", "name": "Windwalker\\Cache\\Item\\CacheItem::getExpiration", "doc": "&quot;Method to get property Expiration&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Cache\\Serializer", "fromLink": "Windwalker/Cache/Serializer.html", "link": "Windwalker/Cache/Serializer/JsonSerializer.html", "name": "Windwalker\\Cache\\Serializer\\JsonSerializer", "doc": "&quot;Class JsonHandler&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Cache\\Serializer\\JsonSerializer", "fromLink": "Windwalker/Cache/Serializer/JsonSerializer.html", "link": "Windwalker/Cache/Serializer/JsonSerializer.html#method_serialize", "name": "Windwalker\\Cache\\Serializer\\JsonSerializer::serialize", "doc": "&quot;Encode data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Serializer\\JsonSerializer", "fromLink": "Windwalker/Cache/Serializer/JsonSerializer.html", "link": "Windwalker/Cache/Serializer/JsonSerializer.html#method_unserialize", "name": "Windwalker\\Cache\\Serializer\\JsonSerializer::unserialize", "doc": "&quot;Decode data.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Cache\\Serializer", "fromLink": "Windwalker/Cache/Serializer.html", "link": "Windwalker/Cache/Serializer/PhpFileSerializer.html", "name": "Windwalker\\Cache\\Serializer\\PhpFileSerializer", "doc": "&quot;The PhpFileSerializer class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Cache\\Serializer\\PhpFileSerializer", "fromLink": "Windwalker/Cache/Serializer/PhpFileSerializer.html", "link": "Windwalker/Cache/Serializer/PhpFileSerializer.html#method_serialize", "name": "Windwalker\\Cache\\Serializer\\PhpFileSerializer::serialize", "doc": "&quot;Encode data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Serializer\\PhpFileSerializer", "fromLink": "Windwalker/Cache/Serializer/PhpFileSerializer.html", "link": "Windwalker/Cache/Serializer/PhpFileSerializer.html#method_unserialize", "name": "Windwalker\\Cache\\Serializer\\PhpFileSerializer::unserialize", "doc": "&quot;Decode data.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Cache\\Serializer", "fromLink": "Windwalker/Cache/Serializer.html", "link": "Windwalker/Cache/Serializer/PhpSerializer.html", "name": "Windwalker\\Cache\\Serializer\\PhpSerializer", "doc": "&quot;Class SerializeHandler&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Cache\\Serializer\\PhpSerializer", "fromLink": "Windwalker/Cache/Serializer/PhpSerializer.html", "link": "Windwalker/Cache/Serializer/PhpSerializer.html#method_serialize", "name": "Windwalker\\Cache\\Serializer\\PhpSerializer::serialize", "doc": "&quot;Encode data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Serializer\\PhpSerializer", "fromLink": "Windwalker/Cache/Serializer/PhpSerializer.html", "link": "Windwalker/Cache/Serializer/PhpSerializer.html#method_unserialize", "name": "Windwalker\\Cache\\Serializer\\PhpSerializer::unserialize", "doc": "&quot;Decode data.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Cache\\Serializer", "fromLink": "Windwalker/Cache/Serializer.html", "link": "Windwalker/Cache/Serializer/RawSerializer.html", "name": "Windwalker\\Cache\\Serializer\\RawSerializer", "doc": "&quot;The RawDataHandler class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Cache\\Serializer\\RawSerializer", "fromLink": "Windwalker/Cache/Serializer/RawSerializer.html", "link": "Windwalker/Cache/Serializer/RawSerializer.html#method_serialize", "name": "Windwalker\\Cache\\Serializer\\RawSerializer::serialize", "doc": "&quot;Encode data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Serializer\\RawSerializer", "fromLink": "Windwalker/Cache/Serializer/RawSerializer.html", "link": "Windwalker/Cache/Serializer/RawSerializer.html#method_unserialize", "name": "Windwalker\\Cache\\Serializer\\RawSerializer::unserialize", "doc": "&quot;Decode data.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Cache\\Serializer", "fromLink": "Windwalker/Cache/Serializer.html", "link": "Windwalker/Cache/Serializer/SerializerInterface.html", "name": "Windwalker\\Cache\\Serializer\\SerializerInterface", "doc": "&quot;Interface DataHandlerInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Cache\\Serializer\\SerializerInterface", "fromLink": "Windwalker/Cache/Serializer/SerializerInterface.html", "link": "Windwalker/Cache/Serializer/SerializerInterface.html#method_serialize", "name": "Windwalker\\Cache\\Serializer\\SerializerInterface::serialize", "doc": "&quot;Encode data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Serializer\\SerializerInterface", "fromLink": "Windwalker/Cache/Serializer/SerializerInterface.html", "link": "Windwalker/Cache/Serializer/SerializerInterface.html#method_unserialize", "name": "Windwalker\\Cache\\Serializer\\SerializerInterface::unserialize", "doc": "&quot;Decode data.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Cache\\Serializer", "fromLink": "Windwalker/Cache/Serializer.html", "link": "Windwalker/Cache/Serializer/StringSerializer.html", "name": "Windwalker\\Cache\\Serializer\\StringSerializer", "doc": "&quot;Class RawHandler&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Cache\\Serializer\\StringSerializer", "fromLink": "Windwalker/Cache/Serializer/StringSerializer.html", "link": "Windwalker/Cache/Serializer/StringSerializer.html#method_serialize", "name": "Windwalker\\Cache\\Serializer\\StringSerializer::serialize", "doc": "&quot;Encode data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Serializer\\StringSerializer", "fromLink": "Windwalker/Cache/Serializer/StringSerializer.html", "link": "Windwalker/Cache/Serializer/StringSerializer.html#method_unserialize", "name": "Windwalker\\Cache\\Serializer\\StringSerializer::unserialize", "doc": "&quot;Decode data.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Cache\\Storage", "fromLink": "Windwalker/Cache/Storage.html", "link": "Windwalker/Cache/Storage/AbstractCacheStorage.html", "name": "Windwalker\\Cache\\Storage\\AbstractCacheStorage", "doc": "&quot;Class AbstractCacheStorage&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\AbstractCacheStorage", "fromLink": "Windwalker/Cache/Storage/AbstractCacheStorage.html", "link": "Windwalker/Cache/Storage/AbstractCacheStorage.html#method___construct", "name": "Windwalker\\Cache\\Storage\\AbstractCacheStorage::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\AbstractCacheStorage", "fromLink": "Windwalker/Cache/Storage/AbstractCacheStorage.html", "link": "Windwalker/Cache/Storage/AbstractCacheStorage.html#method_getItems", "name": "Windwalker\\Cache\\Storage\\AbstractCacheStorage::getItems", "doc": "&quot;getItems&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\AbstractCacheStorage", "fromLink": "Windwalker/Cache/Storage/AbstractCacheStorage.html", "link": "Windwalker/Cache/Storage/AbstractCacheStorage.html#method_deleteItems", "name": "Windwalker\\Cache\\Storage\\AbstractCacheStorage::deleteItems", "doc": "&quot;Removes multiple items from the pool.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\AbstractCacheStorage", "fromLink": "Windwalker/Cache/Storage/AbstractCacheStorage.html", "link": "Windwalker/Cache/Storage/AbstractCacheStorage.html#method_hasItem", "name": "Windwalker\\Cache\\Storage\\AbstractCacheStorage::hasItem", "doc": "&quot;Confirms if the cache contains specified cache item.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\AbstractCacheStorage", "fromLink": "Windwalker/Cache/Storage/AbstractCacheStorage.html", "link": "Windwalker/Cache/Storage/AbstractCacheStorage.html#method_exists", "name": "Windwalker\\Cache\\Storage\\AbstractCacheStorage::exists", "doc": "&quot;Confirms if the cache contains specified cache item.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\AbstractCacheStorage", "fromLink": "Windwalker/Cache/Storage/AbstractCacheStorage.html", "link": "Windwalker/Cache/Storage/AbstractCacheStorage.html#method_getOptions", "name": "Windwalker\\Cache\\Storage\\AbstractCacheStorage::getOptions", "doc": "&quot;Method to get property Options&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\AbstractCacheStorage", "fromLink": "Windwalker/Cache/Storage/AbstractCacheStorage.html", "link": "Windwalker/Cache/Storage/AbstractCacheStorage.html#method_setOptions", "name": "Windwalker\\Cache\\Storage\\AbstractCacheStorage::setOptions", "doc": "&quot;Method to set property options&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\AbstractCacheStorage", "fromLink": "Windwalker/Cache/Storage/AbstractCacheStorage.html", "link": "Windwalker/Cache/Storage/AbstractCacheStorage.html#method_saveDeferred", "name": "Windwalker\\Cache\\Storage\\AbstractCacheStorage::saveDeferred", "doc": "&quot;Sets a cache item to be persisted later.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\AbstractCacheStorage", "fromLink": "Windwalker/Cache/Storage/AbstractCacheStorage.html", "link": "Windwalker/Cache/Storage/AbstractCacheStorage.html#method_commit", "name": "Windwalker\\Cache\\Storage\\AbstractCacheStorage::commit", "doc": "&quot;Persists any deferred cache items.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Cache\\Storage", "fromLink": "Windwalker/Cache/Storage.html", "link": "Windwalker/Cache/Storage/AbstractDriverCacheStorage.html", "name": "Windwalker\\Cache\\Storage\\AbstractDriverCacheStorage", "doc": "&quot;Class AbstractDriverCacheStorage&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\AbstractDriverCacheStorage", "fromLink": "Windwalker/Cache/Storage/AbstractDriverCacheStorage.html", "link": "Windwalker/Cache/Storage/AbstractDriverCacheStorage.html#method___construct", "name": "Windwalker\\Cache\\Storage\\AbstractDriverCacheStorage::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\AbstractDriverCacheStorage", "fromLink": "Windwalker/Cache/Storage/AbstractDriverCacheStorage.html", "link": "Windwalker/Cache/Storage/AbstractDriverCacheStorage.html#method_getDriver", "name": "Windwalker\\Cache\\Storage\\AbstractDriverCacheStorage::getDriver", "doc": "&quot;getDriver&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\AbstractDriverCacheStorage", "fromLink": "Windwalker/Cache/Storage/AbstractDriverCacheStorage.html", "link": "Windwalker/Cache/Storage/AbstractDriverCacheStorage.html#method_setDriver", "name": "Windwalker\\Cache\\Storage\\AbstractDriverCacheStorage::setDriver", "doc": "&quot;setDriver&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Cache\\Storage", "fromLink": "Windwalker/Cache/Storage.html", "link": "Windwalker/Cache/Storage/ArrayStorage.html", "name": "Windwalker\\Cache\\Storage\\ArrayStorage", "doc": "&quot;Runtime Storage.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\ArrayStorage", "fromLink": "Windwalker/Cache/Storage/ArrayStorage.html", "link": "Windwalker/Cache/Storage/ArrayStorage.html#method_exists", "name": "Windwalker\\Cache\\Storage\\ArrayStorage::exists", "doc": "&quot;Method to determine whether a storage entry has been set for a key.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\ArrayStorage", "fromLink": "Windwalker/Cache/Storage/ArrayStorage.html", "link": "Windwalker/Cache/Storage/ArrayStorage.html#method_getItem", "name": "Windwalker\\Cache\\Storage\\ArrayStorage::getItem", "doc": "&quot;Here we pass in a cache key to be fetched from the cache.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\ArrayStorage", "fromLink": "Windwalker/Cache/Storage/ArrayStorage.html", "link": "Windwalker/Cache/Storage/ArrayStorage.html#method_save", "name": "Windwalker\\Cache\\Storage\\ArrayStorage::save", "doc": "&quot;Persisting our data in the cache, uniquely referenced by a key with an optional expiration TTL time.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\ArrayStorage", "fromLink": "Windwalker/Cache/Storage/ArrayStorage.html", "link": "Windwalker/Cache/Storage/ArrayStorage.html#method_deleteItem", "name": "Windwalker\\Cache\\Storage\\ArrayStorage::deleteItem", "doc": "&quot;Remove an item from the cache by its unique key&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\ArrayStorage", "fromLink": "Windwalker/Cache/Storage/ArrayStorage.html", "link": "Windwalker/Cache/Storage/ArrayStorage.html#method_clear", "name": "Windwalker\\Cache\\Storage\\ArrayStorage::clear", "doc": "&quot;This will wipe out the entire cache&#039;s keys&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\ArrayStorage", "fromLink": "Windwalker/Cache/Storage/ArrayStorage.html", "link": "Windwalker/Cache/Storage/ArrayStorage.html#method_getData", "name": "Windwalker\\Cache\\Storage\\ArrayStorage::getData", "doc": "&quot;Method to get property Data&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\ArrayStorage", "fromLink": "Windwalker/Cache/Storage/ArrayStorage.html", "link": "Windwalker/Cache/Storage/ArrayStorage.html#method_setData", "name": "Windwalker\\Cache\\Storage\\ArrayStorage::setData", "doc": "&quot;Method to set property data&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Cache\\Storage", "fromLink": "Windwalker/Cache/Storage.html", "link": "Windwalker/Cache/Storage/CacheStorageInterface.html", "name": "Windwalker\\Cache\\Storage\\CacheStorageInterface", "doc": "&quot;Class CacheStorageInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\CacheStorageInterface", "fromLink": "Windwalker/Cache/Storage/CacheStorageInterface.html", "link": "Windwalker/Cache/Storage/CacheStorageInterface.html#method_getItem", "name": "Windwalker\\Cache\\Storage\\CacheStorageInterface::getItem", "doc": "&quot;Here we pass in a cache key to be fetched from the cache.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\CacheStorageInterface", "fromLink": "Windwalker/Cache/Storage/CacheStorageInterface.html", "link": "Windwalker/Cache/Storage/CacheStorageInterface.html#method_getItems", "name": "Windwalker\\Cache\\Storage\\CacheStorageInterface::getItems", "doc": "&quot;getItems&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\CacheStorageInterface", "fromLink": "Windwalker/Cache/Storage/CacheStorageInterface.html", "link": "Windwalker/Cache/Storage/CacheStorageInterface.html#method_hasItem", "name": "Windwalker\\Cache\\Storage\\CacheStorageInterface::hasItem", "doc": "&quot;Method to determine whether a storage entry has been set for a key.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\CacheStorageInterface", "fromLink": "Windwalker/Cache/Storage/CacheStorageInterface.html", "link": "Windwalker/Cache/Storage/CacheStorageInterface.html#method_clear", "name": "Windwalker\\Cache\\Storage\\CacheStorageInterface::clear", "doc": "&quot;This will wipe out the entire cache&#039;s keys&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\CacheStorageInterface", "fromLink": "Windwalker/Cache/Storage/CacheStorageInterface.html", "link": "Windwalker/Cache/Storage/CacheStorageInterface.html#method_deleteItem", "name": "Windwalker\\Cache\\Storage\\CacheStorageInterface::deleteItem", "doc": "&quot;Remove an item from the cache by its unique key&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\CacheStorageInterface", "fromLink": "Windwalker/Cache/Storage/CacheStorageInterface.html", "link": "Windwalker/Cache/Storage/CacheStorageInterface.html#method_deleteItems", "name": "Windwalker\\Cache\\Storage\\CacheStorageInterface::deleteItems", "doc": "&quot;Removes multiple items from the pool.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\CacheStorageInterface", "fromLink": "Windwalker/Cache/Storage/CacheStorageInterface.html", "link": "Windwalker/Cache/Storage/CacheStorageInterface.html#method_save", "name": "Windwalker\\Cache\\Storage\\CacheStorageInterface::save", "doc": "&quot;Persisting our data in the cache, uniquely referenced by a key with an optional expiration TTL time.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\CacheStorageInterface", "fromLink": "Windwalker/Cache/Storage/CacheStorageInterface.html", "link": "Windwalker/Cache/Storage/CacheStorageInterface.html#method_saveDeferred", "name": "Windwalker\\Cache\\Storage\\CacheStorageInterface::saveDeferred", "doc": "&quot;Sets a cache item to be persisted later.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\CacheStorageInterface", "fromLink": "Windwalker/Cache/Storage/CacheStorageInterface.html", "link": "Windwalker/Cache/Storage/CacheStorageInterface.html#method_commit", "name": "Windwalker\\Cache\\Storage\\CacheStorageInterface::commit", "doc": "&quot;Persists any deferred cache items.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Cache\\Storage", "fromLink": "Windwalker/Cache/Storage.html", "link": "Windwalker/Cache/Storage/FileStorage.html", "name": "Windwalker\\Cache\\Storage\\FileStorage", "doc": "&quot;Filesystem cache driver for the Windwalker Framework.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\FileStorage", "fromLink": "Windwalker/Cache/Storage/FileStorage.html", "link": "Windwalker/Cache/Storage/FileStorage.html#method___construct", "name": "Windwalker\\Cache\\Storage\\FileStorage::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\FileStorage", "fromLink": "Windwalker/Cache/Storage/FileStorage.html", "link": "Windwalker/Cache/Storage/FileStorage.html#method_clear", "name": "Windwalker\\Cache\\Storage\\FileStorage::clear", "doc": "&quot;This will wipe out the entire cache&#039;s keys.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\FileStorage", "fromLink": "Windwalker/Cache/Storage/FileStorage.html", "link": "Windwalker/Cache/Storage/FileStorage.html#method_getItem", "name": "Windwalker\\Cache\\Storage\\FileStorage::getItem", "doc": "&quot;Method to get a storage entry value from a key.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\FileStorage", "fromLink": "Windwalker/Cache/Storage/FileStorage.html", "link": "Windwalker/Cache/Storage/FileStorage.html#method_deleteItem", "name": "Windwalker\\Cache\\Storage\\FileStorage::deleteItem", "doc": "&quot;Method to remove a storage entry for a key.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\FileStorage", "fromLink": "Windwalker/Cache/Storage/FileStorage.html", "link": "Windwalker/Cache/Storage/FileStorage.html#method_save", "name": "Windwalker\\Cache\\Storage\\FileStorage::save", "doc": "&quot;Persisting our data in the cache, uniquely referenced by a key with an optional expiration TTL time.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\FileStorage", "fromLink": "Windwalker/Cache/Storage/FileStorage.html", "link": "Windwalker/Cache/Storage/FileStorage.html#method_exists", "name": "Windwalker\\Cache\\Storage\\FileStorage::exists", "doc": "&quot;Method to determine whether a storage entry has been set for a key and not expired.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\FileStorage", "fromLink": "Windwalker/Cache/Storage/FileStorage.html", "link": "Windwalker/Cache/Storage/FileStorage.html#method_fetchStreamUri", "name": "Windwalker\\Cache\\Storage\\FileStorage::fetchStreamUri", "doc": "&quot;Get the full stream URI for the cache entry.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\FileStorage", "fromLink": "Windwalker/Cache/Storage/FileStorage.html", "link": "Windwalker/Cache/Storage/FileStorage.html#method_isExpired", "name": "Windwalker\\Cache\\Storage\\FileStorage::isExpired", "doc": "&quot;Check whether or not the cached data by id has expired.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\FileStorage", "fromLink": "Windwalker/Cache/Storage/FileStorage.html", "link": "Windwalker/Cache/Storage/FileStorage.html#method_denyAccess", "name": "Windwalker\\Cache\\Storage\\FileStorage::denyAccess", "doc": "&quot;getDenyAccess&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\FileStorage", "fromLink": "Windwalker/Cache/Storage/FileStorage.html", "link": "Windwalker/Cache/Storage/FileStorage.html#method_getGroup", "name": "Windwalker\\Cache\\Storage\\FileStorage::getGroup", "doc": "&quot;Method to get property Group&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\FileStorage", "fromLink": "Windwalker/Cache/Storage/FileStorage.html", "link": "Windwalker/Cache/Storage/FileStorage.html#method_setGroup", "name": "Windwalker\\Cache\\Storage\\FileStorage::setGroup", "doc": "&quot;Method to set property group&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\FileStorage", "fromLink": "Windwalker/Cache/Storage/FileStorage.html", "link": "Windwalker/Cache/Storage/FileStorage.html#method_getPath", "name": "Windwalker\\Cache\\Storage\\FileStorage::getPath", "doc": "&quot;Method to get property Path&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\FileStorage", "fromLink": "Windwalker/Cache/Storage/FileStorage.html", "link": "Windwalker/Cache/Storage/FileStorage.html#method_setPath", "name": "Windwalker\\Cache\\Storage\\FileStorage::setPath", "doc": "&quot;Method to set property path&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\FileStorage", "fromLink": "Windwalker/Cache/Storage/FileStorage.html", "link": "Windwalker/Cache/Storage/FileStorage.html#method_setFileFormat", "name": "Windwalker\\Cache\\Storage\\FileStorage::setFileFormat", "doc": "&quot;setFileFormat&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Cache\\Storage", "fromLink": "Windwalker/Cache/Storage.html", "link": "Windwalker/Cache/Storage/MemcachedStorage.html", "name": "Windwalker\\Cache\\Storage\\MemcachedStorage", "doc": "&quot;Class MemcachedStorage&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\MemcachedStorage", "fromLink": "Windwalker/Cache/Storage/MemcachedStorage.html", "link": "Windwalker/Cache/Storage/MemcachedStorage.html#method___construct", "name": "Windwalker\\Cache\\Storage\\MemcachedStorage::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\MemcachedStorage", "fromLink": "Windwalker/Cache/Storage/MemcachedStorage.html", "link": "Windwalker/Cache/Storage/MemcachedStorage.html#method_exists", "name": "Windwalker\\Cache\\Storage\\MemcachedStorage::exists", "doc": "&quot;Method to determine whether a storage entry has been set for a key.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\MemcachedStorage", "fromLink": "Windwalker/Cache/Storage/MemcachedStorage.html", "link": "Windwalker/Cache/Storage/MemcachedStorage.html#method_getItem", "name": "Windwalker\\Cache\\Storage\\MemcachedStorage::getItem", "doc": "&quot;Here we pass in a cache key to be fetched from the cache.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\MemcachedStorage", "fromLink": "Windwalker/Cache/Storage/MemcachedStorage.html", "link": "Windwalker/Cache/Storage/MemcachedStorage.html#method_save", "name": "Windwalker\\Cache\\Storage\\MemcachedStorage::save", "doc": "&quot;Persisting our data in the cache, uniquely referenced by a key with an optional expiration TTL time.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\MemcachedStorage", "fromLink": "Windwalker/Cache/Storage/MemcachedStorage.html", "link": "Windwalker/Cache/Storage/MemcachedStorage.html#method_deleteItem", "name": "Windwalker\\Cache\\Storage\\MemcachedStorage::deleteItem", "doc": "&quot;Remove an item from the cache by its unique key&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\MemcachedStorage", "fromLink": "Windwalker/Cache/Storage/MemcachedStorage.html", "link": "Windwalker/Cache/Storage/MemcachedStorage.html#method_clear", "name": "Windwalker\\Cache\\Storage\\MemcachedStorage::clear", "doc": "&quot;This will wipe out the entire cache&#039;s keys&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Cache\\Storage", "fromLink": "Windwalker/Cache/Storage.html", "link": "Windwalker/Cache/Storage/NullStorage.html", "name": "Windwalker\\Cache\\Storage\\NullStorage", "doc": "&quot;Class NullStorage&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\NullStorage", "fromLink": "Windwalker/Cache/Storage/NullStorage.html", "link": "Windwalker/Cache/Storage/NullStorage.html#method_exists", "name": "Windwalker\\Cache\\Storage\\NullStorage::exists", "doc": "&quot;Method to determine whether a storage entry has been set for a key.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\NullStorage", "fromLink": "Windwalker/Cache/Storage/NullStorage.html", "link": "Windwalker/Cache/Storage/NullStorage.html#method_getItem", "name": "Windwalker\\Cache\\Storage\\NullStorage::getItem", "doc": "&quot;Here we pass in a cache key to be fetched from the cache.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\NullStorage", "fromLink": "Windwalker/Cache/Storage/NullStorage.html", "link": "Windwalker/Cache/Storage/NullStorage.html#method_save", "name": "Windwalker\\Cache\\Storage\\NullStorage::save", "doc": "&quot;Persisting our data in the cache, uniquely referenced by a key with an optional expiration TTL time.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\NullStorage", "fromLink": "Windwalker/Cache/Storage/NullStorage.html", "link": "Windwalker/Cache/Storage/NullStorage.html#method_deleteItem", "name": "Windwalker\\Cache\\Storage\\NullStorage::deleteItem", "doc": "&quot;Remove an item from the cache by its unique key&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\NullStorage", "fromLink": "Windwalker/Cache/Storage/NullStorage.html", "link": "Windwalker/Cache/Storage/NullStorage.html#method_clear", "name": "Windwalker\\Cache\\Storage\\NullStorage::clear", "doc": "&quot;This will wipe out the entire cache&#039;s keys&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Cache\\Storage", "fromLink": "Windwalker/Cache/Storage.html", "link": "Windwalker/Cache/Storage/PhpFileStorage.html", "name": "Windwalker\\Cache\\Storage\\PhpFileStorage", "doc": "&quot;The PhpFileStorage class.&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Cache\\Storage", "fromLink": "Windwalker/Cache/Storage.html", "link": "Windwalker/Cache/Storage/RedisStorage.html", "name": "Windwalker\\Cache\\Storage\\RedisStorage", "doc": "&quot;Class RedisStorage&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\RedisStorage", "fromLink": "Windwalker/Cache/Storage/RedisStorage.html", "link": "Windwalker/Cache/Storage/RedisStorage.html#method___construct", "name": "Windwalker\\Cache\\Storage\\RedisStorage::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\RedisStorage", "fromLink": "Windwalker/Cache/Storage/RedisStorage.html", "link": "Windwalker/Cache/Storage/RedisStorage.html#method_exists", "name": "Windwalker\\Cache\\Storage\\RedisStorage::exists", "doc": "&quot;Method to determine whether a storage entry has been set for a key.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\RedisStorage", "fromLink": "Windwalker/Cache/Storage/RedisStorage.html", "link": "Windwalker/Cache/Storage/RedisStorage.html#method_getItem", "name": "Windwalker\\Cache\\Storage\\RedisStorage::getItem", "doc": "&quot;Here we pass in a cache key to be fetched from the cache.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\RedisStorage", "fromLink": "Windwalker/Cache/Storage/RedisStorage.html", "link": "Windwalker/Cache/Storage/RedisStorage.html#method_save", "name": "Windwalker\\Cache\\Storage\\RedisStorage::save", "doc": "&quot;Persisting our data in the cache, uniquely referenced by a key with an optional expiration TTL time.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\RedisStorage", "fromLink": "Windwalker/Cache/Storage/RedisStorage.html", "link": "Windwalker/Cache/Storage/RedisStorage.html#method_deleteItem", "name": "Windwalker\\Cache\\Storage\\RedisStorage::deleteItem", "doc": "&quot;Remove an item from the cache by its unique key&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\RedisStorage", "fromLink": "Windwalker/Cache/Storage/RedisStorage.html", "link": "Windwalker/Cache/Storage/RedisStorage.html#method_clear", "name": "Windwalker\\Cache\\Storage\\RedisStorage::clear", "doc": "&quot;This will wipe out the entire cache&#039;s keys&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Cache\\Storage", "fromLink": "Windwalker/Cache/Storage.html", "link": "Windwalker/Cache/Storage/RuntimeArrayStorage.html", "name": "Windwalker\\Cache\\Storage\\RuntimeArrayStorage", "doc": "&quot;StaticRuntime Storage.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\RuntimeArrayStorage", "fromLink": "Windwalker/Cache/Storage/RuntimeArrayStorage.html", "link": "Windwalker/Cache/Storage/RuntimeArrayStorage.html#method_exists", "name": "Windwalker\\Cache\\Storage\\RuntimeArrayStorage::exists", "doc": "&quot;Method to determine whether a storage entry has been set for a key.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\RuntimeArrayStorage", "fromLink": "Windwalker/Cache/Storage/RuntimeArrayStorage.html", "link": "Windwalker/Cache/Storage/RuntimeArrayStorage.html#method_getItem", "name": "Windwalker\\Cache\\Storage\\RuntimeArrayStorage::getItem", "doc": "&quot;Here we pass in a cache key to be fetched from the cache.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\RuntimeArrayStorage", "fromLink": "Windwalker/Cache/Storage/RuntimeArrayStorage.html", "link": "Windwalker/Cache/Storage/RuntimeArrayStorage.html#method_save", "name": "Windwalker\\Cache\\Storage\\RuntimeArrayStorage::save", "doc": "&quot;Persisting our data in the cache, uniquely referenced by a key with an optional expiration TTL time.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\RuntimeArrayStorage", "fromLink": "Windwalker/Cache/Storage/RuntimeArrayStorage.html", "link": "Windwalker/Cache/Storage/RuntimeArrayStorage.html#method_deleteItem", "name": "Windwalker\\Cache\\Storage\\RuntimeArrayStorage::deleteItem", "doc": "&quot;Remove an item from the cache by its unique key&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\RuntimeArrayStorage", "fromLink": "Windwalker/Cache/Storage/RuntimeArrayStorage.html", "link": "Windwalker/Cache/Storage/RuntimeArrayStorage.html#method_clear", "name": "Windwalker\\Cache\\Storage\\RuntimeArrayStorage::clear", "doc": "&quot;This will wipe out the entire cache&#039;s keys&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Cache\\Storage", "fromLink": "Windwalker/Cache/Storage.html", "link": "Windwalker/Cache/Storage/XcacheStorage.html", "name": "Windwalker\\Cache\\Storage\\XcacheStorage", "doc": "&quot;Class XcacheStorage&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\XcacheStorage", "fromLink": "Windwalker/Cache/Storage/XcacheStorage.html", "link": "Windwalker/Cache/Storage/XcacheStorage.html#method___construct", "name": "Windwalker\\Cache\\Storage\\XcacheStorage::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\XcacheStorage", "fromLink": "Windwalker/Cache/Storage/XcacheStorage.html", "link": "Windwalker/Cache/Storage/XcacheStorage.html#method_exists", "name": "Windwalker\\Cache\\Storage\\XcacheStorage::exists", "doc": "&quot;Method to determine whether a storage entry has been set for a key.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\XcacheStorage", "fromLink": "Windwalker/Cache/Storage/XcacheStorage.html", "link": "Windwalker/Cache/Storage/XcacheStorage.html#method_getItem", "name": "Windwalker\\Cache\\Storage\\XcacheStorage::getItem", "doc": "&quot;Here we pass in a cache key to be fetched from the cache.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\XcacheStorage", "fromLink": "Windwalker/Cache/Storage/XcacheStorage.html", "link": "Windwalker/Cache/Storage/XcacheStorage.html#method_save", "name": "Windwalker\\Cache\\Storage\\XcacheStorage::save", "doc": "&quot;Persisting our data in the cache, uniquely referenced by a key with an optional expiration TTL time.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\XcacheStorage", "fromLink": "Windwalker/Cache/Storage/XcacheStorage.html", "link": "Windwalker/Cache/Storage/XcacheStorage.html#method_deleteItem", "name": "Windwalker\\Cache\\Storage\\XcacheStorage::deleteItem", "doc": "&quot;Remove an item from the cache by its unique key&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Cache\\Storage\\XcacheStorage", "fromLink": "Windwalker/Cache/Storage/XcacheStorage.html", "link": "Windwalker/Cache/Storage/XcacheStorage.html#method_clear", "name": "Windwalker\\Cache\\Storage\\XcacheStorage::clear", "doc": "&quot;This will wipe out the entire cache&#039;s keys&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Compare", "fromLink": "Windwalker/Compare.html", "link": "Windwalker/Compare/Compare.html", "name": "Windwalker\\Compare\\Compare", "doc": "&quot;The compare object.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Compare\\Compare", "fromLink": "Windwalker/Compare/Compare.html", "link": "Windwalker/Compare/Compare.html#method___construct", "name": "Windwalker\\Compare\\Compare::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Compare\\Compare", "fromLink": "Windwalker/Compare/Compare.html", "link": "Windwalker/Compare/Compare.html#method_toString", "name": "Windwalker\\Compare\\Compare::toString", "doc": "&quot;Convert to string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Compare\\Compare", "fromLink": "Windwalker/Compare/Compare.html", "link": "Windwalker/Compare/Compare.html#method___toString", "name": "Windwalker\\Compare\\Compare::__toString", "doc": "&quot;Magic method to convert this to string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Compare\\Compare", "fromLink": "Windwalker/Compare/Compare.html", "link": "Windwalker/Compare/Compare.html#method_getCompare2", "name": "Windwalker\\Compare\\Compare::getCompare2", "doc": "&quot;Compare 2 getter.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Compare\\Compare", "fromLink": "Windwalker/Compare/Compare.html", "link": "Windwalker/Compare/Compare.html#method_setCompare2", "name": "Windwalker\\Compare\\Compare::setCompare2", "doc": "&quot;Compare 2 setter.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Compare\\Compare", "fromLink": "Windwalker/Compare/Compare.html", "link": "Windwalker/Compare/Compare.html#method_getCompare1", "name": "Windwalker\\Compare\\Compare::getCompare1", "doc": "&quot;Compare 1 getter.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Compare\\Compare", "fromLink": "Windwalker/Compare/Compare.html", "link": "Windwalker/Compare/Compare.html#method_setCompare1", "name": "Windwalker\\Compare\\Compare::setCompare1", "doc": "&quot;Compare 1 setter.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Compare\\Compare", "fromLink": "Windwalker/Compare/Compare.html", "link": "Windwalker/Compare/Compare.html#method_swap", "name": "Windwalker\\Compare\\Compare::swap", "doc": "&quot;Swap compares.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Compare\\Compare", "fromLink": "Windwalker/Compare/Compare.html", "link": "Windwalker/Compare/Compare.html#method_compare", "name": "Windwalker\\Compare\\Compare::compare", "doc": "&quot;Do compare.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Compare\\Compare", "fromLink": "Windwalker/Compare/Compare.html", "link": "Windwalker/Compare/Compare.html#method_getOperator", "name": "Windwalker\\Compare\\Compare::getOperator", "doc": "&quot;Operator getter.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Compare\\Compare", "fromLink": "Windwalker/Compare/Compare.html", "link": "Windwalker/Compare/Compare.html#method_setOperator", "name": "Windwalker\\Compare\\Compare::setOperator", "doc": "&quot;Method to set property operator&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Compare\\Compare", "fromLink": "Windwalker/Compare/Compare.html", "link": "Windwalker/Compare/Compare.html#method_quote", "name": "Windwalker\\Compare\\Compare::quote", "doc": "&quot;Quote our compare string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Compare\\Compare", "fromLink": "Windwalker/Compare/Compare.html", "link": "Windwalker/Compare/Compare.html#method_getHandler", "name": "Windwalker\\Compare\\Compare::getHandler", "doc": "&quot;Get handler.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Compare\\Compare", "fromLink": "Windwalker/Compare/Compare.html", "link": "Windwalker/Compare/Compare.html#method_setHandler", "name": "Windwalker\\Compare\\Compare::setHandler", "doc": "&quot;Ser handler.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Compare", "fromLink": "Windwalker/Compare.html", "link": "Windwalker/Compare/CompareHelper.html", "name": "Windwalker\\Compare\\CompareHelper", "doc": "&quot;The CompareHelper class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Compare\\CompareHelper", "fromLink": "Windwalker/Compare/CompareHelper.html", "link": "Windwalker/Compare/CompareHelper.html#method_compare", "name": "Windwalker\\Compare\\CompareHelper::compare", "doc": "&quot;Compare two values.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Compare", "fromLink": "Windwalker/Compare.html", "link": "Windwalker/Compare/EqCompare.html", "name": "Windwalker\\Compare\\EqCompare", "doc": "&quot;Class EqCompare&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Compare", "fromLink": "Windwalker/Compare.html", "link": "Windwalker/Compare/GtCompare.html", "name": "Windwalker\\Compare\\GtCompare", "doc": "&quot;Class GtCompare&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Compare", "fromLink": "Windwalker/Compare.html", "link": "Windwalker/Compare/GteCompare.html", "name": "Windwalker\\Compare\\GteCompare", "doc": "&quot;Class GteCompare&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Compare", "fromLink": "Windwalker/Compare.html", "link": "Windwalker/Compare/InCompare.html", "name": "Windwalker\\Compare\\InCompare", "doc": "&quot;Class InCompare&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Compare\\InCompare", "fromLink": "Windwalker/Compare/InCompare.html", "link": "Windwalker/Compare/InCompare.html#method_compare", "name": "Windwalker\\Compare\\InCompare::compare", "doc": "&quot;Do compare.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Compare\\InCompare", "fromLink": "Windwalker/Compare/InCompare.html", "link": "Windwalker/Compare/InCompare.html#method_toString", "name": "Windwalker\\Compare\\InCompare::toString", "doc": "&quot;Convert to string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Compare\\InCompare", "fromLink": "Windwalker/Compare/InCompare.html", "link": "Windwalker/Compare/InCompare.html#method_getSeparator", "name": "Windwalker\\Compare\\InCompare::getSeparator", "doc": "&quot;getSeparator&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Compare\\InCompare", "fromLink": "Windwalker/Compare/InCompare.html", "link": "Windwalker/Compare/InCompare.html#method_setSeparator", "name": "Windwalker\\Compare\\InCompare::setSeparator", "doc": "&quot;setSeparator&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Compare", "fromLink": "Windwalker/Compare.html", "link": "Windwalker/Compare/LtCompare.html", "name": "Windwalker\\Compare\\LtCompare", "doc": "&quot;Class LtCompare&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Compare", "fromLink": "Windwalker/Compare.html", "link": "Windwalker/Compare/LteCompare.html", "name": "Windwalker\\Compare\\LteCompare", "doc": "&quot;Class LteCompare&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Compare", "fromLink": "Windwalker/Compare.html", "link": "Windwalker/Compare/NeqCompare.html", "name": "Windwalker\\Compare\\NeqCompare", "doc": "&quot;Class NeqCompare&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Compare", "fromLink": "Windwalker/Compare.html", "link": "Windwalker/Compare/NinCompare.html", "name": "Windwalker\\Compare\\NinCompare", "doc": "&quot;Class NotinCompare&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Console", "fromLink": "Windwalker/Console.html", "link": "Windwalker/Console/AbstractConsole.html", "name": "Windwalker\\Console\\AbstractConsole", "doc": "&quot;The AbstractConsole class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Console\\AbstractConsole", "fromLink": "Windwalker/Console/AbstractConsole.html", "link": "Windwalker/Console/AbstractConsole.html#method___construct", "name": "Windwalker\\Console\\AbstractConsole::__construct", "doc": "&quot;Class constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\AbstractConsole", "fromLink": "Windwalker/Console/AbstractConsole.html", "link": "Windwalker/Console/AbstractConsole.html#method_out", "name": "Windwalker\\Console\\AbstractConsole::out", "doc": "&quot;Write a string to standard output.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\AbstractConsole", "fromLink": "Windwalker/Console/AbstractConsole.html", "link": "Windwalker/Console/AbstractConsole.html#method_in", "name": "Windwalker\\Console\\AbstractConsole::in", "doc": "&quot;Get a value from standard input.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\AbstractConsole", "fromLink": "Windwalker/Console/AbstractConsole.html", "link": "Windwalker/Console/AbstractConsole.html#method_getIO", "name": "Windwalker\\Console\\AbstractConsole::getIO", "doc": "&quot;getIo&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\AbstractConsole", "fromLink": "Windwalker/Console/AbstractConsole.html", "link": "Windwalker/Console/AbstractConsole.html#method_setIO", "name": "Windwalker\\Console\\AbstractConsole::setIO", "doc": "&quot;setIo&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\AbstractConsole", "fromLink": "Windwalker/Console/AbstractConsole.html", "link": "Windwalker/Console/AbstractConsole.html#method_close", "name": "Windwalker\\Console\\AbstractConsole::close", "doc": "&quot;Method to close the application.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\AbstractConsole", "fromLink": "Windwalker/Console/AbstractConsole.html", "link": "Windwalker/Console/AbstractConsole.html#method_execute", "name": "Windwalker\\Console\\AbstractConsole::execute", "doc": "&quot;Execute the application.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\AbstractConsole", "fromLink": "Windwalker/Console/AbstractConsole.html", "link": "Windwalker/Console/AbstractConsole.html#method_get", "name": "Windwalker\\Console\\AbstractConsole::get", "doc": "&quot;Returns a property of the object or the default value if the property is not set.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\AbstractConsole", "fromLink": "Windwalker/Console/AbstractConsole.html", "link": "Windwalker/Console/AbstractConsole.html#method_set", "name": "Windwalker\\Console\\AbstractConsole::set", "doc": "&quot;Modifies a property of the object, creating it if it does not already exist.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\AbstractConsole", "fromLink": "Windwalker/Console/AbstractConsole.html", "link": "Windwalker/Console/AbstractConsole.html#method_setConfiguration", "name": "Windwalker\\Console\\AbstractConsole::setConfiguration", "doc": "&quot;Sets the configuration for the application.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\AbstractConsole", "fromLink": "Windwalker/Console/AbstractConsole.html", "link": "Windwalker/Console/AbstractConsole.html#method_getConfig", "name": "Windwalker\\Console\\AbstractConsole::getConfig", "doc": "&quot;Method to get property Config&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\AbstractConsole", "fromLink": "Windwalker/Console/AbstractConsole.html", "link": "Windwalker/Console/AbstractConsole.html#method_setConfig", "name": "Windwalker\\Console\\AbstractConsole::setConfig", "doc": "&quot;Method to set property config&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\AbstractConsole", "fromLink": "Windwalker/Console/AbstractConsole.html", "link": "Windwalker/Console/AbstractConsole.html#method_getDescriptor", "name": "Windwalker\\Console\\AbstractConsole::getDescriptor", "doc": "&quot;Get or create descriptor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\AbstractConsole", "fromLink": "Windwalker/Console/AbstractConsole.html", "link": "Windwalker/Console/AbstractConsole.html#method_setDescriptor", "name": "Windwalker\\Console\\AbstractConsole::setDescriptor", "doc": "&quot;Method to set property descriptor&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\AbstractConsole", "fromLink": "Windwalker/Console/AbstractConsole.html", "link": "Windwalker/Console/AbstractConsole.html#method_describeCommand", "name": "Windwalker\\Console\\AbstractConsole::describeCommand", "doc": "&quot;describeCommand&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Console\\Command", "fromLink": "Windwalker/Console/Command.html", "link": "Windwalker/Console/Command/AbstractCommand.html", "name": "Windwalker\\Console\\Command\\AbstractCommand", "doc": "&quot;Abstract Console class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method___construct", "name": "Windwalker\\Console\\Command\\AbstractCommand::__construct", "doc": "&quot;Console constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_execute", "name": "Windwalker\\Console\\Command\\AbstractCommand::execute", "doc": "&quot;Execute this command.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_getIO", "name": "Windwalker\\Console\\Command\\AbstractCommand::getIO", "doc": "&quot;Method to get property Io&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_setIO", "name": "Windwalker\\Console\\Command\\AbstractCommand::setIO", "doc": "&quot;Method to set property io&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_setParent", "name": "Windwalker\\Console\\Command\\AbstractCommand::setParent", "doc": "&quot;Parent command setter.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_getParent", "name": "Windwalker\\Console\\Command\\AbstractCommand::getParent", "doc": "&quot;Get Parent Command.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_addCommand", "name": "Windwalker\\Console\\Command\\AbstractCommand::addCommand", "doc": "&quot;Add an argument(sub command) setting.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_getArgument", "name": "Windwalker\\Console\\Command\\AbstractCommand::getArgument", "doc": "&quot;Get argument by offset or return default.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_addChild", "name": "Windwalker\\Console\\Command\\AbstractCommand::addChild", "doc": "&quot;Alias of addCommand if someone think child is more semantic.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_getChild", "name": "Windwalker\\Console\\Command\\AbstractCommand::getChild", "doc": "&quot;Get a argument(command) by name path.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_getChildren", "name": "Windwalker\\Console\\Command\\AbstractCommand::getChildren", "doc": "&quot;Get children array.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_setChildren", "name": "Windwalker\\Console\\Command\\AbstractCommand::setChildren", "doc": "&quot;Batch set children (sub commands).&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_addOption", "name": "Windwalker\\Console\\Command\\AbstractCommand::addOption", "doc": "&quot;Add a option object to this command.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_addGlobalOption", "name": "Windwalker\\Console\\Command\\AbstractCommand::addGlobalOption", "doc": "&quot;Add a option object to this command.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_getOption", "name": "Windwalker\\Console\\Command\\AbstractCommand::getOption", "doc": "&quot;Get value from an option.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_getOptions", "name": "Windwalker\\Console\\Command\\AbstractCommand::getOptions", "doc": "&quot;Get options as array.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_getOptionSet", "name": "Windwalker\\Console\\Command\\AbstractCommand::getOptionSet", "doc": "&quot;Get option set object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_getAllOptions", "name": "Windwalker\\Console\\Command\\AbstractCommand::getAllOptions", "doc": "&quot;Get all options include global.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_setOptions", "name": "Windwalker\\Console\\Command\\AbstractCommand::setOptions", "doc": "&quot;Batch add options to command.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_setOptionAliases", "name": "Windwalker\\Console\\Command\\AbstractCommand::setOptionAliases", "doc": "&quot;set the option alias.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_getDescription", "name": "Windwalker\\Console\\Command\\AbstractCommand::getDescription", "doc": "&quot;The command description getter.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_description", "name": "Windwalker\\Console\\Command\\AbstractCommand::description", "doc": "&quot;The command description setter.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_getName", "name": "Windwalker\\Console\\Command\\AbstractCommand::getName", "doc": "&quot;Console name getter.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_setName", "name": "Windwalker\\Console\\Command\\AbstractCommand::setName", "doc": "&quot;Console name setter.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_getHandler", "name": "Windwalker\\Console\\Command\\AbstractCommand::getHandler", "doc": "&quot;Console execute code getter.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_handler", "name": "Windwalker\\Console\\Command\\AbstractCommand::handler", "doc": "&quot;Console execute code setter.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_getApplication", "name": "Windwalker\\Console\\Command\\AbstractCommand::getApplication", "doc": "&quot;Get the application.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_setApplication", "name": "Windwalker\\Console\\Command\\AbstractCommand::setApplication", "doc": "&quot;Set the application.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_getHelp", "name": "Windwalker\\Console\\Command\\AbstractCommand::getHelp", "doc": "&quot;Get the help manual.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_help", "name": "Windwalker\\Console\\Command\\AbstractCommand::help", "doc": "&quot;Sets the help manual&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_getUsage", "name": "Windwalker\\Console\\Command\\AbstractCommand::getUsage", "doc": "&quot;Get the usage.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_usage", "name": "Windwalker\\Console\\Command\\AbstractCommand::usage", "doc": "&quot;Sets the usage to tell user how to use this command.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_renderAlternatives", "name": "Windwalker\\Console\\Command\\AbstractCommand::renderAlternatives", "doc": "&quot;Render auto complete alternatives.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_renderException", "name": "Windwalker\\Console\\Command\\AbstractCommand::renderException", "doc": "&quot;Render exception for debugging.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_error", "name": "Windwalker\\Console\\Command\\AbstractCommand::error", "doc": "&quot;Raise error message.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_out", "name": "Windwalker\\Console\\Command\\AbstractCommand::out", "doc": "&quot;Write a string to standard output.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_err", "name": "Windwalker\\Console\\Command\\AbstractCommand::err", "doc": "&quot;Write a string to standard error output.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_in", "name": "Windwalker\\Console\\Command\\AbstractCommand::in", "doc": "&quot;Get a value from standard input.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_offsetSet", "name": "Windwalker\\Console\\Command\\AbstractCommand::offsetSet", "doc": "&quot;Set child command, note the key is no use, we use command name as key.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_offsetExists", "name": "Windwalker\\Console\\Command\\AbstractCommand::offsetExists", "doc": "&quot;Is a child exists?&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_offsetUnset", "name": "Windwalker\\Console\\Command\\AbstractCommand::offsetUnset", "doc": "&quot;Unset a child command.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Command\\AbstractCommand", "fromLink": "Windwalker/Console/Command/AbstractCommand.html", "link": "Windwalker/Console/Command/AbstractCommand.html#method_offsetGet", "name": "Windwalker\\Console\\Command\\AbstractCommand::offsetGet", "doc": "&quot;Get a command by name.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Console\\Command", "fromLink": "Windwalker/Console/Command.html", "link": "Windwalker/Console/Command/Command.html", "name": "Windwalker\\Console\\Command\\Command", "doc": "&quot;Base Command class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Console\\Command\\Command", "fromLink": "Windwalker/Console/Command/Command.html", "link": "Windwalker/Console/Command/Command.html#method_addCommand", "name": "Windwalker\\Console\\Command\\Command::addCommand", "doc": "&quot;Add an argument(sub command) setting. This method in Command use &#039;self&#039; instead &#039;static&#039; to make sure every sub\ncommand add Command class as arguments.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Console\\Command", "fromLink": "Windwalker/Console/Command.html", "link": "Windwalker/Console/Command/RootCommand.html", "name": "Windwalker\\Console\\Command\\RootCommand", "doc": "&quot;The default command.&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Console", "fromLink": "Windwalker/Console.html", "link": "Windwalker/Console/Console.html", "name": "Windwalker\\Console\\Console", "doc": "&quot;Class Console&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Console\\Console", "fromLink": "Windwalker/Console/Console.html", "link": "Windwalker/Console/Console.html#method___construct", "name": "Windwalker\\Console\\Console::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Console", "fromLink": "Windwalker/Console/Console.html", "link": "Windwalker/Console/Console.html#method_execute", "name": "Windwalker\\Console\\Console::execute", "doc": "&quot;Execute the application.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Console", "fromLink": "Windwalker/Console/Console.html", "link": "Windwalker/Console/Console.html#method_doExecute", "name": "Windwalker\\Console\\Console::doExecute", "doc": "&quot;Method to run the application routines.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Console", "fromLink": "Windwalker/Console/Console.html", "link": "Windwalker/Console/Console.html#method_executeByPath", "name": "Windwalker\\Console\\Console::executeByPath", "doc": "&quot;executeByPath&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Console", "fromLink": "Windwalker/Console/Console.html", "link": "Windwalker/Console/Console.html#method_registerRootCommand", "name": "Windwalker\\Console\\Console::registerRootCommand", "doc": "&quot;Register default command.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Console", "fromLink": "Windwalker/Console/Console.html", "link": "Windwalker/Console/Console.html#method_register", "name": "Windwalker\\Console\\Console::register", "doc": "&quot;Register a new Console.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Console", "fromLink": "Windwalker/Console/Console.html", "link": "Windwalker/Console/Console.html#method_addCommand", "name": "Windwalker\\Console\\Console::addCommand", "doc": "&quot;Add a new command object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Console", "fromLink": "Windwalker/Console/Console.html", "link": "Windwalker/Console/Console.html#method_getCommand", "name": "Windwalker\\Console\\Console::getCommand", "doc": "&quot;Get command by path.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Console", "fromLink": "Windwalker/Console/Console.html", "link": "Windwalker/Console/Console.html#method_setAutoExit", "name": "Windwalker\\Console\\Console::setAutoExit", "doc": "&quot;Sets whether to automatically exit after a command execution or not.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Console", "fromLink": "Windwalker/Console/Console.html", "link": "Windwalker/Console/Console.html#method_getRootCommand", "name": "Windwalker\\Console\\Console::getRootCommand", "doc": "&quot;Get the default command.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Console", "fromLink": "Windwalker/Console/Console.html", "link": "Windwalker/Console/Console.html#method_getVersion", "name": "Windwalker\\Console\\Console::getVersion", "doc": "&quot;Get version.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Console", "fromLink": "Windwalker/Console/Console.html", "link": "Windwalker/Console/Console.html#method_setVersion", "name": "Windwalker\\Console\\Console::setVersion", "doc": "&quot;Set version.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Console", "fromLink": "Windwalker/Console/Console.html", "link": "Windwalker/Console/Console.html#method_getDescription", "name": "Windwalker\\Console\\Console::getDescription", "doc": "&quot;Get description.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Console", "fromLink": "Windwalker/Console/Console.html", "link": "Windwalker/Console/Console.html#method_setDescription", "name": "Windwalker\\Console\\Console::setDescription", "doc": "&quot;Set description.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Console", "fromLink": "Windwalker/Console/Console.html", "link": "Windwalker/Console/Console.html#method_setHandler", "name": "Windwalker\\Console\\Console::setHandler", "doc": "&quot;Set execute code to default command.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Console", "fromLink": "Windwalker/Console/Console.html", "link": "Windwalker/Console/Console.html#method_setUsage", "name": "Windwalker\\Console\\Console::setUsage", "doc": "&quot;setUsage&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Console", "fromLink": "Windwalker/Console/Console.html", "link": "Windwalker/Console/Console.html#method_setHelp", "name": "Windwalker\\Console\\Console::setHelp", "doc": "&quot;setHelp&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Console", "fromLink": "Windwalker/Console/Console.html", "link": "Windwalker/Console/Console.html#method_getHelp", "name": "Windwalker\\Console\\Console::getHelp", "doc": "&quot;Method to get property Help&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Console", "fromLink": "Windwalker/Console/Console.html", "link": "Windwalker/Console/Console.html#method_getTitle", "name": "Windwalker\\Console\\Console::getTitle", "doc": "&quot;Method to get property Title&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Console", "fromLink": "Windwalker/Console/Console.html", "link": "Windwalker/Console/Console.html#method_setTitle", "name": "Windwalker\\Console\\Console::setTitle", "doc": "&quot;Method to set property title&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Console\\Descriptor", "fromLink": "Windwalker/Console/Descriptor.html", "link": "Windwalker/Console/Descriptor/AbstractDescriptor.html", "name": "Windwalker\\Console\\Descriptor\\AbstractDescriptor", "doc": "&quot;The abstract base descriptor.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Console\\Descriptor\\AbstractDescriptor", "fromLink": "Windwalker/Console/Descriptor/AbstractDescriptor.html", "link": "Windwalker/Console/Descriptor/AbstractDescriptor.html#method_addItem", "name": "Windwalker\\Console\\Descriptor\\AbstractDescriptor::addItem", "doc": "&quot;Add a item to describe.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Descriptor\\AbstractDescriptor", "fromLink": "Windwalker/Console/Descriptor/AbstractDescriptor.html", "link": "Windwalker/Console/Descriptor/AbstractDescriptor.html#method_render", "name": "Windwalker\\Console\\Descriptor\\AbstractDescriptor::render", "doc": "&quot;Render all items description.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Console\\Descriptor", "fromLink": "Windwalker/Console/Descriptor.html", "link": "Windwalker/Console/Descriptor/AbstractDescriptorHelper.html", "name": "Windwalker\\Console\\Descriptor\\AbstractDescriptorHelper", "doc": "&quot;A descriptor helper to get different descriptor and render it.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Console\\Descriptor\\AbstractDescriptorHelper", "fromLink": "Windwalker/Console/Descriptor/AbstractDescriptorHelper.html", "link": "Windwalker/Console/Descriptor/AbstractDescriptorHelper.html#method___construct", "name": "Windwalker\\Console\\Descriptor\\AbstractDescriptorHelper::__construct", "doc": "&quot;The class constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Descriptor\\AbstractDescriptorHelper", "fromLink": "Windwalker/Console/Descriptor/AbstractDescriptorHelper.html", "link": "Windwalker/Console/Descriptor/AbstractDescriptorHelper.html#method_getCommandDescriptor", "name": "Windwalker\\Console\\Descriptor\\AbstractDescriptorHelper::getCommandDescriptor", "doc": "&quot;Command descriptor getter.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Descriptor\\AbstractDescriptorHelper", "fromLink": "Windwalker/Console/Descriptor/AbstractDescriptorHelper.html", "link": "Windwalker/Console/Descriptor/AbstractDescriptorHelper.html#method_setCommandDescriptor", "name": "Windwalker\\Console\\Descriptor\\AbstractDescriptorHelper::setCommandDescriptor", "doc": "&quot;Command descriptor setter.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Descriptor\\AbstractDescriptorHelper", "fromLink": "Windwalker/Console/Descriptor/AbstractDescriptorHelper.html", "link": "Windwalker/Console/Descriptor/AbstractDescriptorHelper.html#method_getOptionDescriptor", "name": "Windwalker\\Console\\Descriptor\\AbstractDescriptorHelper::getOptionDescriptor", "doc": "&quot;Option descriptor getter.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Descriptor\\AbstractDescriptorHelper", "fromLink": "Windwalker/Console/Descriptor/AbstractDescriptorHelper.html", "link": "Windwalker/Console/Descriptor/AbstractDescriptorHelper.html#method_setOptionDescriptor", "name": "Windwalker\\Console\\Descriptor\\AbstractDescriptorHelper::setOptionDescriptor", "doc": "&quot;Option descriptor setter.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Console\\Descriptor", "fromLink": "Windwalker/Console/Descriptor.html", "link": "Windwalker/Console/Descriptor/DescriptorHelperInterface.html", "name": "Windwalker\\Console\\Descriptor\\DescriptorHelperInterface", "doc": "&quot;A descriptor helper to get different descriptor and render it.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Console\\Descriptor\\DescriptorHelperInterface", "fromLink": "Windwalker/Console/Descriptor/DescriptorHelperInterface.html", "link": "Windwalker/Console/Descriptor/DescriptorHelperInterface.html#method_describe", "name": "Windwalker\\Console\\Descriptor\\DescriptorHelperInterface::describe", "doc": "&quot;Describe a command detail.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Console\\Descriptor", "fromLink": "Windwalker/Console/Descriptor.html", "link": "Windwalker/Console/Descriptor/DescriptorInterface.html", "name": "Windwalker\\Console\\Descriptor\\DescriptorInterface", "doc": "&quot;Interface of Descriptor.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Console\\Descriptor\\DescriptorInterface", "fromLink": "Windwalker/Console/Descriptor/DescriptorInterface.html", "link": "Windwalker/Console/Descriptor/DescriptorInterface.html#method_addItem", "name": "Windwalker\\Console\\Descriptor\\DescriptorInterface::addItem", "doc": "&quot;Add an item to describe.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Descriptor\\DescriptorInterface", "fromLink": "Windwalker/Console/Descriptor/DescriptorInterface.html", "link": "Windwalker/Console/Descriptor/DescriptorInterface.html#method_render", "name": "Windwalker\\Console\\Descriptor\\DescriptorInterface::render", "doc": "&quot;Render all items description.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Console\\Descriptor\\Text", "fromLink": "Windwalker/Console/Descriptor/Text.html", "link": "Windwalker/Console/Descriptor/Text/TextCommandDescriptor.html", "name": "Windwalker\\Console\\Descriptor\\Text\\TextCommandDescriptor", "doc": "&quot;Class TextCommandDescriptor&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Console\\Descriptor\\Text\\TextCommandDescriptor", "fromLink": "Windwalker/Console/Descriptor/Text/TextCommandDescriptor.html", "link": "Windwalker/Console/Descriptor/Text/TextCommandDescriptor.html#method_render", "name": "Windwalker\\Console\\Descriptor\\Text\\TextCommandDescriptor::render", "doc": "&quot;Render all items description.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Console\\Descriptor\\Text", "fromLink": "Windwalker/Console/Descriptor/Text.html", "link": "Windwalker/Console/Descriptor/Text/TextDescriptorHelper.html", "name": "Windwalker\\Console\\Descriptor\\Text\\TextDescriptorHelper", "doc": "&quot;A descriptor helper to get different descriptor and render it.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Console\\Descriptor\\Text\\TextDescriptorHelper", "fromLink": "Windwalker/Console/Descriptor/Text/TextDescriptorHelper.html", "link": "Windwalker/Console/Descriptor/Text/TextDescriptorHelper.html#method_describe", "name": "Windwalker\\Console\\Descriptor\\Text\\TextDescriptorHelper::describe", "doc": "&quot;Describe a command detail.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Console\\Descriptor\\Text", "fromLink": "Windwalker/Console/Descriptor/Text.html", "link": "Windwalker/Console/Descriptor/Text/TextOptionDescriptor.html", "name": "Windwalker\\Console\\Descriptor\\Text\\TextOptionDescriptor", "doc": "&quot;Class Option AbstractDescriptor&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Console\\Descriptor\\Text\\TextOptionDescriptor", "fromLink": "Windwalker/Console/Descriptor/Text/TextOptionDescriptor.html", "link": "Windwalker/Console/Descriptor/Text/TextOptionDescriptor.html#method_render", "name": "Windwalker\\Console\\Descriptor\\Text\\TextOptionDescriptor::render", "doc": "&quot;Render all items description.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Console\\Exception", "fromLink": "Windwalker/Console/Exception.html", "link": "Windwalker/Console/Exception/CommandNotFoundException.html", "name": "Windwalker\\Console\\Exception\\CommandNotFoundException", "doc": "&quot;Command not found exception.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Console\\Exception\\CommandNotFoundException", "fromLink": "Windwalker/Console/Exception/CommandNotFoundException.html", "link": "Windwalker/Console/Exception/CommandNotFoundException.html#method___construct", "name": "Windwalker\\Console\\Exception\\CommandNotFoundException::__construct", "doc": "&quot;Exception constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Exception\\CommandNotFoundException", "fromLink": "Windwalker/Console/Exception/CommandNotFoundException.html", "link": "Windwalker/Console/Exception/CommandNotFoundException.html#method_setArgument", "name": "Windwalker\\Console\\Exception\\CommandNotFoundException::setArgument", "doc": "&quot;Argument setter.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Exception\\CommandNotFoundException", "fromLink": "Windwalker/Console/Exception/CommandNotFoundException.html", "link": "Windwalker/Console/Exception/CommandNotFoundException.html#method_getChild", "name": "Windwalker\\Console\\Exception\\CommandNotFoundException::getChild", "doc": "&quot;Argument getter.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Exception\\CommandNotFoundException", "fromLink": "Windwalker/Console/Exception/CommandNotFoundException.html", "link": "Windwalker/Console/Exception/CommandNotFoundException.html#method_setCommand", "name": "Windwalker\\Console\\Exception\\CommandNotFoundException::setCommand", "doc": "&quot;Command setter.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Exception\\CommandNotFoundException", "fromLink": "Windwalker/Console/Exception/CommandNotFoundException.html", "link": "Windwalker/Console/Exception/CommandNotFoundException.html#method_getCommand", "name": "Windwalker\\Console\\Exception\\CommandNotFoundException::getCommand", "doc": "&quot;Command getter.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Console\\Exception", "fromLink": "Windwalker/Console/Exception.html", "link": "Windwalker/Console/Exception/WrongArgumentException.html", "name": "Windwalker\\Console\\Exception\\WrongArgumentException", "doc": "&quot;The WrongArgumentException class.&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Console\\IO", "fromLink": "Windwalker/Console/IO.html", "link": "Windwalker/Console/IO/IO.html", "name": "Windwalker\\Console\\IO\\IO", "doc": "&quot;The IO class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IO", "fromLink": "Windwalker/Console/IO/IO.html", "link": "Windwalker/Console/IO/IO.html#method_setArguments", "name": "Windwalker\\Console\\IO\\IO::setArguments", "doc": "&quot;set Arguments&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IO", "fromLink": "Windwalker/Console/IO/IO.html", "link": "Windwalker/Console/IO/IO.html#method_shiftArgument", "name": "Windwalker\\Console\\IO\\IO::shiftArgument", "doc": "&quot;shiftArgument&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IO", "fromLink": "Windwalker/Console/IO/IO.html", "link": "Windwalker/Console/IO/IO.html#method_unshiftArgument", "name": "Windwalker\\Console\\IO\\IO::unshiftArgument", "doc": "&quot;unshiftArgument&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IO", "fromLink": "Windwalker/Console/IO/IO.html", "link": "Windwalker/Console/IO/IO.html#method_pushArgument", "name": "Windwalker\\Console\\IO\\IO::pushArgument", "doc": "&quot;pushArgument&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IO", "fromLink": "Windwalker/Console/IO/IO.html", "link": "Windwalker/Console/IO/IO.html#method_popArgument", "name": "Windwalker\\Console\\IO\\IO::popArgument", "doc": "&quot;popArgument&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IO", "fromLink": "Windwalker/Console/IO/IO.html", "link": "Windwalker/Console/IO/IO.html#method_addColor", "name": "Windwalker\\Console\\IO\\IO::addColor", "doc": "&quot;addColor&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IO", "fromLink": "Windwalker/Console/IO/IO.html", "link": "Windwalker/Console/IO/IO.html#method_useColor", "name": "Windwalker\\Console\\IO\\IO::useColor", "doc": "&quot;useColor&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IO", "fromLink": "Windwalker/Console/IO/IO.html", "link": "Windwalker/Console/IO/IO.html#method___clone", "name": "Windwalker\\Console\\IO\\IO::__clone", "doc": "&quot;__clone&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IO", "fromLink": "Windwalker/Console/IO/IO.html", "link": "Windwalker/Console/IO/IO.html#method_getOutputStream", "name": "Windwalker\\Console\\IO\\IO::getOutputStream", "doc": "&quot;getOutStream&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IO", "fromLink": "Windwalker/Console/IO/IO.html", "link": "Windwalker/Console/IO/IO.html#method_setOutputStream", "name": "Windwalker\\Console\\IO\\IO::setOutputStream", "doc": "&quot;setOutStream&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IO", "fromLink": "Windwalker/Console/IO/IO.html", "link": "Windwalker/Console/IO/IO.html#method_getErrorStream", "name": "Windwalker\\Console\\IO\\IO::getErrorStream", "doc": "&quot;Method to get property ErrorStream&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IO", "fromLink": "Windwalker/Console/IO/IO.html", "link": "Windwalker/Console/IO/IO.html#method_setErrorStream", "name": "Windwalker\\Console\\IO\\IO::setErrorStream", "doc": "&quot;Method to set property errorStream&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IO", "fromLink": "Windwalker/Console/IO/IO.html", "link": "Windwalker/Console/IO/IO.html#method_getInputStream", "name": "Windwalker\\Console\\IO\\IO::getInputStream", "doc": "&quot;getInputStream&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IO", "fromLink": "Windwalker/Console/IO/IO.html", "link": "Windwalker/Console/IO/IO.html#method_setInputStream", "name": "Windwalker\\Console\\IO\\IO::setInputStream", "doc": "&quot;setInputStream&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Console\\IO", "fromLink": "Windwalker/Console/IO.html", "link": "Windwalker/Console/IO/IOFactory.html", "name": "Windwalker\\Console\\IO\\IOFactory", "doc": "&quot;The IOFactory class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IOFactory", "fromLink": "Windwalker/Console/IO/IOFactory.html", "link": "Windwalker/Console/IO/IOFactory.html#method_getIO", "name": "Windwalker\\Console\\IO\\IOFactory::getIO", "doc": "&quot;getIO&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Console\\IO", "fromLink": "Windwalker/Console/IO.html", "link": "Windwalker/Console/IO/IOInterface.html", "name": "Windwalker\\Console\\IO\\IOInterface", "doc": "&quot;The IOInterface class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IOInterface", "fromLink": "Windwalker/Console/IO/IOInterface.html", "link": "Windwalker/Console/IO/IOInterface.html#method_shiftArgument", "name": "Windwalker\\Console\\IO\\IOInterface::shiftArgument", "doc": "&quot;shiftArgument&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IOInterface", "fromLink": "Windwalker/Console/IO/IOInterface.html", "link": "Windwalker/Console/IO/IOInterface.html#method_unshiftArgument", "name": "Windwalker\\Console\\IO\\IOInterface::unshiftArgument", "doc": "&quot;unshiftArgument&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IOInterface", "fromLink": "Windwalker/Console/IO/IOInterface.html", "link": "Windwalker/Console/IO/IOInterface.html#method_popArgument", "name": "Windwalker\\Console\\IO\\IOInterface::popArgument", "doc": "&quot;popArgument&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IOInterface", "fromLink": "Windwalker/Console/IO/IOInterface.html", "link": "Windwalker/Console/IO/IOInterface.html#method_pushArgument", "name": "Windwalker\\Console\\IO\\IOInterface::pushArgument", "doc": "&quot;pushArgument&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IOInterface", "fromLink": "Windwalker/Console/IO/IOInterface.html", "link": "Windwalker/Console/IO/IOInterface.html#method_setArguments", "name": "Windwalker\\Console\\IO\\IOInterface::setArguments", "doc": "&quot;set Arguments&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IOInterface", "fromLink": "Windwalker/Console/IO/IOInterface.html", "link": "Windwalker/Console/IO/IOInterface.html#method_addColor", "name": "Windwalker\\Console\\IO\\IOInterface::addColor", "doc": "&quot;addColor&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IOInterface", "fromLink": "Windwalker/Console/IO/IOInterface.html", "link": "Windwalker/Console/IO/IOInterface.html#method_useColor", "name": "Windwalker\\Console\\IO\\IOInterface::useColor", "doc": "&quot;useColor&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IOInterface", "fromLink": "Windwalker/Console/IO/IOInterface.html", "link": "Windwalker/Console/IO/IOInterface.html#method___clone", "name": "Windwalker\\Console\\IO\\IOInterface::__clone", "doc": "&quot;__clone&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IOInterface", "fromLink": "Windwalker/Console/IO/IOInterface.html", "link": "Windwalker/Console/IO/IOInterface.html#method_setOutputStream", "name": "Windwalker\\Console\\IO\\IOInterface::setOutputStream", "doc": "&quot;setOutStream&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IOInterface", "fromLink": "Windwalker/Console/IO/IOInterface.html", "link": "Windwalker/Console/IO/IOInterface.html#method_setErrorStream", "name": "Windwalker\\Console\\IO\\IOInterface::setErrorStream", "doc": "&quot;Method to set property errorStream&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\IO\\IOInterface", "fromLink": "Windwalker/Console/IO/IOInterface.html", "link": "Windwalker/Console/IO/IOInterface.html#method_setInputStream", "name": "Windwalker\\Console\\IO\\IOInterface::setInputStream", "doc": "&quot;setInputStream&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Console\\IO", "fromLink": "Windwalker/Console/IO.html", "link": "Windwalker/Console/IO/NullInput.html", "name": "Windwalker\\Console\\IO\\NullInput", "doc": "&quot;The YesManInput class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Console\\IO\\NullInput", "fromLink": "Windwalker/Console/IO/NullInput.html", "link": "Windwalker/Console/IO/NullInput.html#method_in", "name": "Windwalker\\Console\\IO\\NullInput::in", "doc": "&quot;Get a value from standard input.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Console\\Option", "fromLink": "Windwalker/Console/Option.html", "link": "Windwalker/Console/Option/Option.html", "name": "Windwalker\\Console\\Option\\Option", "doc": "&quot;The cli option class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Console\\Option\\Option", "fromLink": "Windwalker/Console/Option/Option.html", "link": "Windwalker/Console/Option/Option.html#method___construct", "name": "Windwalker\\Console\\Option\\Option::__construct", "doc": "&quot;Class Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Option\\Option", "fromLink": "Windwalker/Console/Option/Option.html", "link": "Windwalker/Console/Option/Option.html#method_setAliases", "name": "Windwalker\\Console\\Option\\Option::setAliases", "doc": "&quot;Alias setter.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Option\\Option", "fromLink": "Windwalker/Console/Option/Option.html", "link": "Windwalker/Console/Option/Option.html#method_getAliases", "name": "Windwalker\\Console\\Option\\Option::getAliases", "doc": "&quot;Alias getter.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Option\\Option", "fromLink": "Windwalker/Console/Option/Option.html", "link": "Windwalker/Console/Option/Option.html#method_hasAlias", "name": "Windwalker\\Console\\Option\\Option::hasAlias", "doc": "&quot;Has alias.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Option\\Option", "fromLink": "Windwalker/Console/Option/Option.html", "link": "Windwalker/Console/Option/Option.html#method_alias", "name": "Windwalker\\Console\\Option\\Option::alias", "doc": "&quot;Add a new alias.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Option\\Option", "fromLink": "Windwalker/Console/Option/Option.html", "link": "Windwalker/Console/Option/Option.html#method_defaultValue", "name": "Windwalker\\Console\\Option\\Option::defaultValue", "doc": "&quot;Default value getter.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Option\\Option", "fromLink": "Windwalker/Console/Option/Option.html", "link": "Windwalker/Console/Option/Option.html#method_getDefaultValue", "name": "Windwalker\\Console\\Option\\Option::getDefaultValue", "doc": "&quot;Default value getter.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Option\\Option", "fromLink": "Windwalker/Console/Option/Option.html", "link": "Windwalker/Console/Option/Option.html#method_description", "name": "Windwalker\\Console\\Option\\Option::description", "doc": "&quot;Description setter.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Option\\Option", "fromLink": "Windwalker/Console/Option/Option.html", "link": "Windwalker/Console/Option/Option.html#method_getDescription", "name": "Windwalker\\Console\\Option\\Option::getDescription", "doc": "&quot;Description getter.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Option\\Option", "fromLink": "Windwalker/Console/Option/Option.html", "link": "Windwalker/Console/Option/Option.html#method_setName", "name": "Windwalker\\Console\\Option\\Option::setName", "doc": "&quot;Name setter.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Option\\Option", "fromLink": "Windwalker/Console/Option/Option.html", "link": "Windwalker/Console/Option/Option.html#method_getName", "name": "Windwalker\\Console\\Option\\Option::getName", "doc": "&quot;Name getter.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Option\\Option", "fromLink": "Windwalker/Console/Option/Option.html", "link": "Windwalker/Console/Option/Option.html#method_getIO", "name": "Windwalker\\Console\\Option\\Option::getIO", "doc": "&quot;Get Cli Input object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Option\\Option", "fromLink": "Windwalker/Console/Option/Option.html", "link": "Windwalker/Console/Option/Option.html#method_setIO", "name": "Windwalker\\Console\\Option\\Option::setIO", "doc": "&quot;Set Cli Input object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Option\\Option", "fromLink": "Windwalker/Console/Option/Option.html", "link": "Windwalker/Console/Option/Option.html#method_getValue", "name": "Windwalker\\Console\\Option\\Option::getValue", "doc": "&quot;Get the value of this option which sent from command line.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Option\\Option", "fromLink": "Windwalker/Console/Option/Option.html", "link": "Windwalker/Console/Option/Option.html#method_isGlobal", "name": "Windwalker\\Console\\Option\\Option::isGlobal", "doc": "&quot;Is this a global option?&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Option\\Option", "fromLink": "Windwalker/Console/Option/Option.html", "link": "Windwalker/Console/Option/Option.html#method_setGlobal", "name": "Windwalker\\Console\\Option\\Option::setGlobal", "doc": "&quot;Set this option is global or not.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Console\\Option", "fromLink": "Windwalker/Console/Option.html", "link": "Windwalker/Console/Option/OptionSet.html", "name": "Windwalker\\Console\\Option\\OptionSet", "doc": "&quot;Option set to store options and resolve aliases.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Console\\Option\\OptionSet", "fromLink": "Windwalker/Console/Option/OptionSet.html", "link": "Windwalker/Console/Option/OptionSet.html#method_addOption", "name": "Windwalker\\Console\\Option\\OptionSet::addOption", "doc": "&quot;Add a new option.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Option\\OptionSet", "fromLink": "Windwalker/Console/Option/OptionSet.html", "link": "Windwalker/Console/Option/OptionSet.html#method_getIterator", "name": "Windwalker\\Console\\Option\\OptionSet::getIterator", "doc": "&quot;Retrieve an external iterator&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Option\\OptionSet", "fromLink": "Windwalker/Console/Option/OptionSet.html", "link": "Windwalker/Console/Option/OptionSet.html#method_offsetExists", "name": "Windwalker\\Console\\Option\\OptionSet::offsetExists", "doc": "&quot;Is a option exists?&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Option\\OptionSet", "fromLink": "Windwalker/Console/Option/OptionSet.html", "link": "Windwalker/Console/Option/OptionSet.html#method_offsetGet", "name": "Windwalker\\Console\\Option\\OptionSet::offsetGet", "doc": "&quot;Get an option by name.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Option\\OptionSet", "fromLink": "Windwalker/Console/Option/OptionSet.html", "link": "Windwalker/Console/Option/OptionSet.html#method_offsetSet", "name": "Windwalker\\Console\\Option\\OptionSet::offsetSet", "doc": "&quot;Set a new option.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Option\\OptionSet", "fromLink": "Windwalker/Console/Option/OptionSet.html", "link": "Windwalker/Console/Option/OptionSet.html#method_offsetUnset", "name": "Windwalker\\Console\\Option\\OptionSet::offsetUnset", "doc": "&quot;Remove an option.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Option\\OptionSet", "fromLink": "Windwalker/Console/Option/OptionSet.html", "link": "Windwalker/Console/Option/OptionSet.html#method_count", "name": "Windwalker\\Console\\Option\\OptionSet::count", "doc": "&quot;Count options.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Option\\OptionSet", "fromLink": "Windwalker/Console/Option/OptionSet.html", "link": "Windwalker/Console/Option/OptionSet.html#method_serialize", "name": "Windwalker\\Console\\Option\\OptionSet::serialize", "doc": "&quot;Serialize this object&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Option\\OptionSet", "fromLink": "Windwalker/Console/Option/OptionSet.html", "link": "Windwalker/Console/Option/OptionSet.html#method_unserialize", "name": "Windwalker\\Console\\Option\\OptionSet::unserialize", "doc": "&quot;Un serialize this object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Option\\OptionSet", "fromLink": "Windwalker/Console/Option/OptionSet.html", "link": "Windwalker/Console/Option/OptionSet.html#method_toArray", "name": "Windwalker\\Console\\Option\\OptionSet::toArray", "doc": "&quot;Convert to array.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Console\\Prompter", "fromLink": "Windwalker/Console/Prompter.html", "link": "Windwalker/Console/Prompter/AbstractPrompter.html", "name": "Windwalker\\Console\\Prompter\\AbstractPrompter", "doc": "&quot;Prompter class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\AbstractPrompter", "fromLink": "Windwalker/Console/Prompter/AbstractPrompter.html", "link": "Windwalker/Console/Prompter/AbstractPrompter.html#method___construct", "name": "Windwalker\\Console\\Prompter\\AbstractPrompter::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\AbstractPrompter", "fromLink": "Windwalker/Console/Prompter/AbstractPrompter.html", "link": "Windwalker/Console/Prompter/AbstractPrompter.html#method_ask", "name": "Windwalker\\Console\\Prompter\\AbstractPrompter::ask", "doc": "&quot;Show prompt to ask user.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\AbstractPrompter", "fromLink": "Windwalker/Console/Prompter/AbstractPrompter.html", "link": "Windwalker/Console/Prompter/AbstractPrompter.html#method_in", "name": "Windwalker\\Console\\Prompter\\AbstractPrompter::in", "doc": "&quot;Get a value from standard input.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\AbstractPrompter", "fromLink": "Windwalker/Console/Prompter/AbstractPrompter.html", "link": "Windwalker/Console/Prompter/AbstractPrompter.html#method___invoke", "name": "Windwalker\\Console\\Prompter\\AbstractPrompter::__invoke", "doc": "&quot;Proxy to ask method.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\AbstractPrompter", "fromLink": "Windwalker/Console/Prompter/AbstractPrompter.html", "link": "Windwalker/Console/Prompter/AbstractPrompter.html#method_getIO", "name": "Windwalker\\Console\\Prompter\\AbstractPrompter::getIO", "doc": "&quot;Method to get property Io&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\AbstractPrompter", "fromLink": "Windwalker/Console/Prompter/AbstractPrompter.html", "link": "Windwalker/Console/Prompter/AbstractPrompter.html#method_setIO", "name": "Windwalker\\Console\\Prompter\\AbstractPrompter::setIO", "doc": "&quot;Method to set property io&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Console\\Prompter", "fromLink": "Windwalker/Console/Prompter.html", "link": "Windwalker/Console/Prompter/BooleanPrompter.html", "name": "Windwalker\\Console\\Prompter\\BooleanPrompter", "doc": "&quot;Class BooleanPrompter&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\BooleanPrompter", "fromLink": "Windwalker/Console/Prompter/BooleanPrompter.html", "link": "Windwalker/Console/Prompter/BooleanPrompter.html#method_ask", "name": "Windwalker\\Console\\Prompter\\BooleanPrompter::ask", "doc": "&quot;Show prompt to ask user.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\BooleanPrompter", "fromLink": "Windwalker/Console/Prompter/BooleanPrompter.html", "link": "Windwalker/Console/Prompter/BooleanPrompter.html#method_getTrueAlias", "name": "Windwalker\\Console\\Prompter\\BooleanPrompter::getTrueAlias", "doc": "&quot;Get true value alias.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\BooleanPrompter", "fromLink": "Windwalker/Console/Prompter/BooleanPrompter.html", "link": "Windwalker/Console/Prompter/BooleanPrompter.html#method_setTrueAlias", "name": "Windwalker\\Console\\Prompter\\BooleanPrompter::setTrueAlias", "doc": "&quot;Set true value alias.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\BooleanPrompter", "fromLink": "Windwalker/Console/Prompter/BooleanPrompter.html", "link": "Windwalker/Console/Prompter/BooleanPrompter.html#method_getFalseAlias", "name": "Windwalker\\Console\\Prompter\\BooleanPrompter::getFalseAlias", "doc": "&quot;Get aliases of false value.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\BooleanPrompter", "fromLink": "Windwalker/Console/Prompter/BooleanPrompter.html", "link": "Windwalker/Console/Prompter/BooleanPrompter.html#method_setFalseAlias", "name": "Windwalker\\Console\\Prompter\\BooleanPrompter::setFalseAlias", "doc": "&quot;Set aliases of false value.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Console\\Prompter", "fromLink": "Windwalker/Console/Prompter.html", "link": "Windwalker/Console/Prompter/CallbackPrompter.html", "name": "Windwalker\\Console\\Prompter\\CallbackPrompter", "doc": "&quot;Callback validate prompter.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\CallbackPrompter", "fromLink": "Windwalker/Console/Prompter/CallbackPrompter.html", "link": "Windwalker/Console/Prompter/CallbackPrompter.html#method___construct", "name": "Windwalker\\Console\\Prompter\\CallbackPrompter::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\CallbackPrompter", "fromLink": "Windwalker/Console/Prompter/CallbackPrompter.html", "link": "Windwalker/Console/Prompter/CallbackPrompter.html#method_ask", "name": "Windwalker\\Console\\Prompter\\CallbackPrompter::ask", "doc": "&quot;Show prompt to ask user.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\CallbackPrompter", "fromLink": "Windwalker/Console/Prompter/CallbackPrompter.html", "link": "Windwalker/Console/Prompter/CallbackPrompter.html#method_setHandler", "name": "Windwalker\\Console\\Prompter\\CallbackPrompter::setHandler", "doc": "&quot;Set a callable handler, can be a Closure.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\CallbackPrompter", "fromLink": "Windwalker/Console/Prompter/CallbackPrompter.html", "link": "Windwalker/Console/Prompter/CallbackPrompter.html#method_getHandler", "name": "Windwalker\\Console\\Prompter\\CallbackPrompter::getHandler", "doc": "&quot;Get callable handler.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\CallbackPrompter", "fromLink": "Windwalker/Console/Prompter/CallbackPrompter.html", "link": "Windwalker/Console/Prompter/CallbackPrompter.html#method_setAttemptTimes", "name": "Windwalker\\Console\\Prompter\\CallbackPrompter::setAttemptTimes", "doc": "&quot;Set attempt number.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\CallbackPrompter", "fromLink": "Windwalker/Console/Prompter/CallbackPrompter.html", "link": "Windwalker/Console/Prompter/CallbackPrompter.html#method_setNoValidMessage", "name": "Windwalker\\Console\\Prompter\\CallbackPrompter::setNoValidMessage", "doc": "&quot;Set message when validate fail.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\CallbackPrompter", "fromLink": "Windwalker/Console/Prompter/CallbackPrompter.html", "link": "Windwalker/Console/Prompter/CallbackPrompter.html#method_failToClose", "name": "Windwalker\\Console\\Prompter\\CallbackPrompter::failToClose", "doc": "&quot;If validate fail, whether close application or not.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Console\\Prompter", "fromLink": "Windwalker/Console/Prompter.html", "link": "Windwalker/Console/Prompter/NotNullPrompter.html", "name": "Windwalker\\Console\\Prompter\\NotNullPrompter", "doc": "&quot;The NotNullPrompter class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\NotNullPrompter", "fromLink": "Windwalker/Console/Prompter/NotNullPrompter.html", "link": "Windwalker/Console/Prompter/NotNullPrompter.html#method_getHandler", "name": "Windwalker\\Console\\Prompter\\NotNullPrompter::getHandler", "doc": "&quot;Get callable handler.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Console\\Prompter", "fromLink": "Windwalker/Console/Prompter.html", "link": "Windwalker/Console/Prompter/PasswordPrompter.html", "name": "Windwalker\\Console\\Prompter\\PasswordPrompter", "doc": "&quot;A password prompter supports hidden input.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\PasswordPrompter", "fromLink": "Windwalker/Console/Prompter/PasswordPrompter.html", "link": "Windwalker/Console/Prompter/PasswordPrompter.html#method_ask", "name": "Windwalker\\Console\\Prompter\\PasswordPrompter::ask", "doc": "&quot;Show prompt to ask user.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\PasswordPrompter", "fromLink": "Windwalker/Console/Prompter/PasswordPrompter.html", "link": "Windwalker/Console/Prompter/PasswordPrompter.html#method_in", "name": "Windwalker\\Console\\Prompter\\PasswordPrompter::in", "doc": "&quot;Get a value from standard input.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Console\\Prompter", "fromLink": "Windwalker/Console/Prompter.html", "link": "Windwalker/Console/Prompter/Prompter.html", "name": "Windwalker\\Console\\Prompter\\Prompter", "doc": "&quot;The Prompter class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\Prompter", "fromLink": "Windwalker/Console/Prompter/Prompter.html", "link": "Windwalker/Console/Prompter/Prompter.html#method_boolean", "name": "Windwalker\\Console\\Prompter\\Prompter::boolean", "doc": "&quot;boolean&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\Prompter", "fromLink": "Windwalker/Console/Prompter/Prompter.html", "link": "Windwalker/Console/Prompter/Prompter.html#method_text", "name": "Windwalker\\Console\\Prompter\\Prompter::text", "doc": "&quot;text&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\Prompter", "fromLink": "Windwalker/Console/Prompter/Prompter.html", "link": "Windwalker/Console/Prompter/Prompter.html#method_callback", "name": "Windwalker\\Console\\Prompter\\Prompter::callback", "doc": "&quot;callback&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\Prompter", "fromLink": "Windwalker/Console/Prompter/Prompter.html", "link": "Windwalker/Console/Prompter/Prompter.html#method_validText", "name": "Windwalker\\Console\\Prompter\\Prompter::validText", "doc": "&quot;validText&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\Prompter", "fromLink": "Windwalker/Console/Prompter/Prompter.html", "link": "Windwalker/Console/Prompter/Prompter.html#method_notNullText", "name": "Windwalker\\Console\\Prompter\\Prompter::notNullText", "doc": "&quot;notNullText&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\Prompter", "fromLink": "Windwalker/Console/Prompter/Prompter.html", "link": "Windwalker/Console/Prompter/Prompter.html#method_selector", "name": "Windwalker\\Console\\Prompter\\Prompter::selector", "doc": "&quot;selector&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\Prompter", "fromLink": "Windwalker/Console/Prompter/Prompter.html", "link": "Windwalker/Console/Prompter/Prompter.html#method_password", "name": "Windwalker\\Console\\Prompter\\Prompter::password", "doc": "&quot;password&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Console\\Prompter", "fromLink": "Windwalker/Console/Prompter.html", "link": "Windwalker/Console/Prompter/PrompterInterface.html", "name": "Windwalker\\Console\\Prompter\\PrompterInterface", "doc": "&quot;Prompter Interface.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\PrompterInterface", "fromLink": "Windwalker/Console/Prompter/PrompterInterface.html", "link": "Windwalker/Console/Prompter/PrompterInterface.html#method_ask", "name": "Windwalker\\Console\\Prompter\\PrompterInterface::ask", "doc": "&quot;Show prompt to ask user.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\PrompterInterface", "fromLink": "Windwalker/Console/Prompter/PrompterInterface.html", "link": "Windwalker/Console/Prompter/PrompterInterface.html#method___invoke", "name": "Windwalker\\Console\\Prompter\\PrompterInterface::__invoke", "doc": "&quot;Proxy to ask method.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Console\\Prompter", "fromLink": "Windwalker/Console/Prompter.html", "link": "Windwalker/Console/Prompter/SelectPrompter.html", "name": "Windwalker\\Console\\Prompter\\SelectPrompter", "doc": "&quot;A prompter supports select list.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\SelectPrompter", "fromLink": "Windwalker/Console/Prompter/SelectPrompter.html", "link": "Windwalker/Console/Prompter/SelectPrompter.html#method_ask", "name": "Windwalker\\Console\\Prompter\\SelectPrompter::ask", "doc": "&quot;Show prompt to ask user.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\SelectPrompter", "fromLink": "Windwalker/Console/Prompter/SelectPrompter.html", "link": "Windwalker/Console/Prompter/SelectPrompter.html#method_getHandler", "name": "Windwalker\\Console\\Prompter\\SelectPrompter::getHandler", "doc": "&quot;Get callable handler.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Console\\Prompter", "fromLink": "Windwalker/Console/Prompter.html", "link": "Windwalker/Console/Prompter/TextPrompter.html", "name": "Windwalker\\Console\\Prompter\\TextPrompter", "doc": "&quot;General text prompter.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\TextPrompter", "fromLink": "Windwalker/Console/Prompter/TextPrompter.html", "link": "Windwalker/Console/Prompter/TextPrompter.html#method_ask", "name": "Windwalker\\Console\\Prompter\\TextPrompter::ask", "doc": "&quot;Show prompt to ask user.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Console\\Prompter", "fromLink": "Windwalker/Console/Prompter.html", "link": "Windwalker/Console/Prompter/ValidatePrompter.html", "name": "Windwalker\\Console\\Prompter\\ValidatePrompter", "doc": "&quot;A text prompter but we can set an array to validate input value.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\ValidatePrompter", "fromLink": "Windwalker/Console/Prompter/ValidatePrompter.html", "link": "Windwalker/Console/Prompter/ValidatePrompter.html#method___construct", "name": "Windwalker\\Console\\Prompter\\ValidatePrompter::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\ValidatePrompter", "fromLink": "Windwalker/Console/Prompter/ValidatePrompter.html", "link": "Windwalker/Console/Prompter/ValidatePrompter.html#method_getHandler", "name": "Windwalker\\Console\\Prompter\\ValidatePrompter::getHandler", "doc": "&quot;Get callable handler.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\ValidatePrompter", "fromLink": "Windwalker/Console/Prompter/ValidatePrompter.html", "link": "Windwalker/Console/Prompter/ValidatePrompter.html#method_addOption", "name": "Windwalker\\Console\\Prompter\\ValidatePrompter::addOption", "doc": "&quot;Add an option.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\ValidatePrompter", "fromLink": "Windwalker/Console/Prompter/ValidatePrompter.html", "link": "Windwalker/Console/Prompter/ValidatePrompter.html#method_removeOption", "name": "Windwalker\\Console\\Prompter\\ValidatePrompter::removeOption", "doc": "&quot;Remove an option by key.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Console\\Prompter\\ValidatePrompter", "fromLink": "Windwalker/Console/Prompter/ValidatePrompter.html", "link": "Windwalker/Console/Prompter/ValidatePrompter.html#method_setOptions", "name": "Windwalker\\Console\\Prompter\\ValidatePrompter::setOptions", "doc": "&quot;Set option list.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Core\\Profiler", "fromLink": "Windwalker/Core/Profiler.html", "link": "Windwalker/Core/Profiler/NullProfiler.html", "name": "Windwalker\\Core\\Profiler\\NullProfiler", "doc": "&quot;The NullProfiler class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Core\\Profiler\\NullProfiler", "fromLink": "Windwalker/Core/Profiler/NullProfiler.html", "link": "Windwalker/Core/Profiler/NullProfiler.html#method_mark", "name": "Windwalker\\Core\\Profiler\\NullProfiler::mark", "doc": "&quot;Mark a profile point.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Core\\Profiler\\NullProfiler", "fromLink": "Windwalker/Core/Profiler/NullProfiler.html", "link": "Windwalker/Core/Profiler/NullProfiler.html#method_hasPoint", "name": "Windwalker\\Core\\Profiler\\NullProfiler::hasPoint", "doc": "&quot;Check if the profiler has marked the given point.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Core\\Profiler\\NullProfiler", "fromLink": "Windwalker/Core/Profiler/NullProfiler.html", "link": "Windwalker/Core/Profiler/NullProfiler.html#method_getPoint", "name": "Windwalker\\Core\\Profiler\\NullProfiler::getPoint", "doc": "&quot;Get the point identified by the given name.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Core\\Profiler\\NullProfiler", "fromLink": "Windwalker/Core/Profiler/NullProfiler.html", "link": "Windwalker/Core/Profiler/NullProfiler.html#method_getTimeBetween", "name": "Windwalker\\Core\\Profiler\\NullProfiler::getTimeBetween", "doc": "&quot;Get the elapsed time in seconds between the two points.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Core\\Profiler\\NullProfiler", "fromLink": "Windwalker/Core/Profiler/NullProfiler.html", "link": "Windwalker/Core/Profiler/NullProfiler.html#method_getMemoryBetween", "name": "Windwalker\\Core\\Profiler\\NullProfiler::getMemoryBetween", "doc": "&quot;Get the amount of allocated memory in bytes between the two points.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Core\\Profiler\\NullProfiler", "fromLink": "Windwalker/Core/Profiler/NullProfiler.html", "link": "Windwalker/Core/Profiler/NullProfiler.html#method_getMemoryPeakBytes", "name": "Windwalker\\Core\\Profiler\\NullProfiler::getMemoryPeakBytes", "doc": "&quot;Get the memory peak in bytes during the profiler run.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Core\\Profiler\\NullProfiler", "fromLink": "Windwalker/Core/Profiler/NullProfiler.html", "link": "Windwalker/Core/Profiler/NullProfiler.html#method_getPoints", "name": "Windwalker\\Core\\Profiler\\NullProfiler::getPoints", "doc": "&quot;Get the points in this profiler (from the first to the last).&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Core\\Profiler\\NullProfiler", "fromLink": "Windwalker/Core/Profiler/NullProfiler.html", "link": "Windwalker/Core/Profiler/NullProfiler.html#method_render", "name": "Windwalker\\Core\\Profiler\\NullProfiler::render", "doc": "&quot;Render the profiler.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Core\\Profiler\\NullProfiler", "fromLink": "Windwalker/Core/Profiler/NullProfiler.html", "link": "Windwalker/Core/Profiler/NullProfiler.html#method_getName", "name": "Windwalker\\Core\\Profiler\\NullProfiler::getName", "doc": "&quot;Get the name of this profiler.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Crypt\\Cipher", "fromLink": "Windwalker/Crypt/Cipher.html", "link": "Windwalker/Crypt/Cipher/AbstractCipher.html", "name": "Windwalker\\Crypt\\Cipher\\AbstractCipher", "doc": "&quot;The Openssl Cipher class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Crypt\\Cipher\\AbstractCipher", "fromLink": "Windwalker/Crypt/Cipher/AbstractCipher.html", "link": "Windwalker/Crypt/Cipher/AbstractCipher.html#method___construct", "name": "Windwalker\\Crypt\\Cipher\\AbstractCipher::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\Cipher\\AbstractCipher", "fromLink": "Windwalker/Crypt/Cipher/AbstractCipher.html", "link": "Windwalker/Crypt/Cipher/AbstractCipher.html#method_encrypt", "name": "Windwalker\\Crypt\\Cipher\\AbstractCipher::encrypt", "doc": "&quot;Method to encrypt a data string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\Cipher\\AbstractCipher", "fromLink": "Windwalker/Crypt/Cipher/AbstractCipher.html", "link": "Windwalker/Crypt/Cipher/AbstractCipher.html#method_decrypt", "name": "Windwalker\\Crypt\\Cipher\\AbstractCipher::decrypt", "doc": "&quot;Method to decrypt a data string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\Cipher\\AbstractCipher", "fromLink": "Windwalker/Crypt/Cipher/AbstractCipher.html", "link": "Windwalker/Crypt/Cipher/AbstractCipher.html#method_getIVKey", "name": "Windwalker\\Crypt\\Cipher\\AbstractCipher::getIVKey", "doc": "&quot;getIVKey&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\Cipher\\AbstractCipher", "fromLink": "Windwalker/Crypt/Cipher/AbstractCipher.html", "link": "Windwalker/Crypt/Cipher/AbstractCipher.html#method_getIVSize", "name": "Windwalker\\Crypt\\Cipher\\AbstractCipher::getIVSize", "doc": "&quot;getIVSize&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\Cipher\\AbstractCipher", "fromLink": "Windwalker/Crypt/Cipher/AbstractCipher.html", "link": "Windwalker/Crypt/Cipher/AbstractCipher.html#method_getMethod", "name": "Windwalker\\Crypt\\Cipher\\AbstractCipher::getMethod", "doc": "&quot;Method to get property Type&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Crypt\\Cipher", "fromLink": "Windwalker/Crypt/Cipher.html", "link": "Windwalker/Crypt/Cipher/Aes256Cipher.html", "name": "Windwalker\\Crypt\\Cipher\\Aes256Cipher", "doc": "&quot;The Aes256Cipher class.&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Crypt\\Cipher", "fromLink": "Windwalker/Crypt/Cipher.html", "link": "Windwalker/Crypt/Cipher/BlowfishCipher.html", "name": "Windwalker\\Crypt\\Cipher\\BlowfishCipher", "doc": "&quot;The BlowfishChipher class.&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Crypt\\Cipher", "fromLink": "Windwalker/Crypt/Cipher.html", "link": "Windwalker/Crypt/Cipher/CipherInterface.html", "name": "Windwalker\\Crypt\\Cipher\\CipherInterface", "doc": "&quot;Interface CipherInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Crypt\\Cipher\\CipherInterface", "fromLink": "Windwalker/Crypt/Cipher/CipherInterface.html", "link": "Windwalker/Crypt/Cipher/CipherInterface.html#method_decrypt", "name": "Windwalker\\Crypt\\Cipher\\CipherInterface::decrypt", "doc": "&quot;Method to decrypt a data string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\Cipher\\CipherInterface", "fromLink": "Windwalker/Crypt/Cipher/CipherInterface.html", "link": "Windwalker/Crypt/Cipher/CipherInterface.html#method_encrypt", "name": "Windwalker\\Crypt\\Cipher\\CipherInterface::encrypt", "doc": "&quot;Method to encrypt a data string.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Crypt\\Cipher", "fromLink": "Windwalker/Crypt/Cipher.html", "link": "Windwalker/Crypt/Cipher/Des3Cipher.html", "name": "Windwalker\\Crypt\\Cipher\\Des3Cipher", "doc": "&quot;The Cipher3DES class.&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Crypt\\Cipher", "fromLink": "Windwalker/Crypt/Cipher.html", "link": "Windwalker/Crypt/Cipher/PhpAesCipher.html", "name": "Windwalker\\Crypt\\Cipher\\PhpAesCipher", "doc": "&quot;The PhpAesCipher class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Crypt\\Cipher\\PhpAesCipher", "fromLink": "Windwalker/Crypt/Cipher/PhpAesCipher.html", "link": "Windwalker/Crypt/Cipher/PhpAesCipher.html#method_decrypt", "name": "Windwalker\\Crypt\\Cipher\\PhpAesCipher::decrypt", "doc": "&quot;Method to decrypt a data string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\Cipher\\PhpAesCipher", "fromLink": "Windwalker/Crypt/Cipher/PhpAesCipher.html", "link": "Windwalker/Crypt/Cipher/PhpAesCipher.html#method_encrypt", "name": "Windwalker\\Crypt\\Cipher\\PhpAesCipher::encrypt", "doc": "&quot;Method to encrypt a data string.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Crypt\\Cipher", "fromLink": "Windwalker/Crypt/Cipher.html", "link": "Windwalker/Crypt/Cipher/SimpleCipher.html", "name": "Windwalker\\Crypt\\Cipher\\SimpleCipher", "doc": "&quot;The Simple class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Crypt\\Cipher\\SimpleCipher", "fromLink": "Windwalker/Crypt/Cipher/SimpleCipher.html", "link": "Windwalker/Crypt/Cipher/SimpleCipher.html#method_decrypt", "name": "Windwalker\\Crypt\\Cipher\\SimpleCipher::decrypt", "doc": "&quot;Method to decrypt a data string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\Cipher\\SimpleCipher", "fromLink": "Windwalker/Crypt/Cipher/SimpleCipher.html", "link": "Windwalker/Crypt/Cipher/SimpleCipher.html#method_encrypt", "name": "Windwalker\\Crypt\\Cipher\\SimpleCipher::encrypt", "doc": "&quot;Method to encrypt a data string.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Crypt", "fromLink": "Windwalker/Crypt.html", "link": "Windwalker/Crypt/Crypt.html", "name": "Windwalker\\Crypt\\Crypt", "doc": "&quot;The Crypt class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Crypt\\Crypt", "fromLink": "Windwalker/Crypt/Crypt.html", "link": "Windwalker/Crypt/Crypt.html#method___construct", "name": "Windwalker\\Crypt\\Crypt::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\Crypt", "fromLink": "Windwalker/Crypt/Crypt.html", "link": "Windwalker/Crypt/Crypt.html#method_encrypt", "name": "Windwalker\\Crypt\\Crypt::encrypt", "doc": "&quot;encrypt&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\Crypt", "fromLink": "Windwalker/Crypt/Crypt.html", "link": "Windwalker/Crypt/Crypt.html#method_decrypt", "name": "Windwalker\\Crypt\\Crypt::decrypt", "doc": "&quot;decrypt&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\Crypt", "fromLink": "Windwalker/Crypt/Crypt.html", "link": "Windwalker/Crypt/Crypt.html#method_verify", "name": "Windwalker\\Crypt\\Crypt::verify", "doc": "&quot;match&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\Crypt", "fromLink": "Windwalker/Crypt/Crypt.html", "link": "Windwalker/Crypt/Crypt.html#method_getIV", "name": "Windwalker\\Crypt\\Crypt::getIV", "doc": "&quot;Method to get property Public&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\Crypt", "fromLink": "Windwalker/Crypt/Crypt.html", "link": "Windwalker/Crypt/Crypt.html#method_setIV", "name": "Windwalker\\Crypt\\Crypt::setIV", "doc": "&quot;Method to set property public&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\Crypt", "fromLink": "Windwalker/Crypt/Crypt.html", "link": "Windwalker/Crypt/Crypt.html#method_getKey", "name": "Windwalker\\Crypt\\Crypt::getKey", "doc": "&quot;Method to get property Private&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\Crypt", "fromLink": "Windwalker/Crypt/Crypt.html", "link": "Windwalker/Crypt/Crypt.html#method_setKey", "name": "Windwalker\\Crypt\\Crypt::setKey", "doc": "&quot;Method to set property private&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Crypt", "fromLink": "Windwalker/Crypt.html", "link": "Windwalker/Crypt/CryptHelper.html", "name": "Windwalker\\Crypt\\CryptHelper", "doc": "&quot;The CryptHelper class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Crypt\\CryptHelper", "fromLink": "Windwalker/Crypt/CryptHelper.html", "link": "Windwalker/Crypt/CryptHelper.html#method_limitInteger", "name": "Windwalker\\Crypt\\CryptHelper::limitInteger", "doc": "&quot;limitInteger&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\CryptHelper", "fromLink": "Windwalker/Crypt/CryptHelper.html", "link": "Windwalker/Crypt/CryptHelper.html#method_repeatToLength", "name": "Windwalker\\Crypt\\CryptHelper::repeatToLength", "doc": "&quot;repeatToLength&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\CryptHelper", "fromLink": "Windwalker/Crypt/CryptHelper.html", "link": "Windwalker/Crypt/CryptHelper.html#method_genRandomBytes", "name": "Windwalker\\Crypt\\CryptHelper::genRandomBytes", "doc": "&quot;Generate random bytes.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\CryptHelper", "fromLink": "Windwalker/Crypt/CryptHelper.html", "link": "Windwalker/Crypt/CryptHelper.html#method_getLength", "name": "Windwalker\\Crypt\\CryptHelper::getLength", "doc": "&quot;mb safe string length calculator&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Crypt", "fromLink": "Windwalker/Crypt.html", "link": "Windwalker/Crypt/CryptInterface.html", "name": "Windwalker\\Crypt\\CryptInterface", "doc": "&quot;Interface CryptInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Crypt\\CryptInterface", "fromLink": "Windwalker/Crypt/CryptInterface.html", "link": "Windwalker/Crypt/CryptInterface.html#method_encrypt", "name": "Windwalker\\Crypt\\CryptInterface::encrypt", "doc": "&quot;encrypt&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\CryptInterface", "fromLink": "Windwalker/Crypt/CryptInterface.html", "link": "Windwalker/Crypt/CryptInterface.html#method_decrypt", "name": "Windwalker\\Crypt\\CryptInterface::decrypt", "doc": "&quot;decrypt&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\CryptInterface", "fromLink": "Windwalker/Crypt/CryptInterface.html", "link": "Windwalker/Crypt/CryptInterface.html#method_verify", "name": "Windwalker\\Crypt\\CryptInterface::verify", "doc": "&quot;match&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Crypt\\Mcrypt", "fromLink": "Windwalker/Crypt/Mcrypt.html", "link": "Windwalker/Crypt/Mcrypt/AbstractMcryptCipher.html", "name": "Windwalker\\Crypt\\Mcrypt\\AbstractMcryptCipher", "doc": "&quot;The McryptCipher class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Crypt\\Mcrypt\\AbstractMcryptCipher", "fromLink": "Windwalker/Crypt/Mcrypt/AbstractMcryptCipher.html", "link": "Windwalker/Crypt/Mcrypt/AbstractMcryptCipher.html#method___construct", "name": "Windwalker\\Crypt\\Mcrypt\\AbstractMcryptCipher::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\Mcrypt\\AbstractMcryptCipher", "fromLink": "Windwalker/Crypt/Mcrypt/AbstractMcryptCipher.html", "link": "Windwalker/Crypt/Mcrypt/AbstractMcryptCipher.html#method_decrypt", "name": "Windwalker\\Crypt\\Mcrypt\\AbstractMcryptCipher::decrypt", "doc": "&quot;Method to decrypt a data string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\Mcrypt\\AbstractMcryptCipher", "fromLink": "Windwalker/Crypt/Mcrypt/AbstractMcryptCipher.html", "link": "Windwalker/Crypt/Mcrypt/AbstractMcryptCipher.html#method_encrypt", "name": "Windwalker\\Crypt\\Mcrypt\\AbstractMcryptCipher::encrypt", "doc": "&quot;Method to encrypt a data string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\Mcrypt\\AbstractMcryptCipher", "fromLink": "Windwalker/Crypt/Mcrypt/AbstractMcryptCipher.html", "link": "Windwalker/Crypt/Mcrypt/AbstractMcryptCipher.html#method_getIVKey", "name": "Windwalker\\Crypt\\Mcrypt\\AbstractMcryptCipher::getIVKey", "doc": "&quot;getIVKey&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\Mcrypt\\AbstractMcryptCipher", "fromLink": "Windwalker/Crypt/Mcrypt/AbstractMcryptCipher.html", "link": "Windwalker/Crypt/Mcrypt/AbstractMcryptCipher.html#method_getIVSize", "name": "Windwalker\\Crypt\\Mcrypt\\AbstractMcryptCipher::getIVSize", "doc": "&quot;getIVSize&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Crypt\\Mcrypt", "fromLink": "Windwalker/Crypt/Mcrypt.html", "link": "Windwalker/Crypt/Mcrypt/Cipher3DES.html", "name": "Windwalker\\Crypt\\Mcrypt\\Cipher3DES", "doc": "&quot;The Cipher3DES class.&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Crypt\\Mcrypt", "fromLink": "Windwalker/Crypt/Mcrypt.html", "link": "Windwalker/Crypt/Mcrypt/CipherBlowfish.html", "name": "Windwalker\\Crypt\\Mcrypt\\CipherBlowfish", "doc": "&quot;The BlowfishChipher class.&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Crypt\\Mcrypt", "fromLink": "Windwalker/Crypt/Mcrypt.html", "link": "Windwalker/Crypt/Mcrypt/CipherRijndael256.html", "name": "Windwalker\\Crypt\\Mcrypt\\CipherRijndael256", "doc": "&quot;The Rijndael256 class.&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Crypt", "fromLink": "Windwalker/Crypt.html", "link": "Windwalker/Crypt/Password.html", "name": "Windwalker\\Crypt\\Password", "doc": "&quot;The SimplePassword class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Crypt\\Password", "fromLink": "Windwalker/Crypt/Password.html", "link": "Windwalker/Crypt/Password.html#method___construct", "name": "Windwalker\\Crypt\\Password::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\Password", "fromLink": "Windwalker/Crypt/Password.html", "link": "Windwalker/Crypt/Password.html#method_create", "name": "Windwalker\\Crypt\\Password::create", "doc": "&quot;create&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\Password", "fromLink": "Windwalker/Crypt/Password.html", "link": "Windwalker/Crypt/Password.html#method_verify", "name": "Windwalker\\Crypt\\Password::verify", "doc": "&quot;Verify the password.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\Password", "fromLink": "Windwalker/Crypt/Password.html", "link": "Windwalker/Crypt/Password.html#method_genRandomPassword", "name": "Windwalker\\Crypt\\Password::genRandomPassword", "doc": "&quot;Generate a random password.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\Password", "fromLink": "Windwalker/Crypt/Password.html", "link": "Windwalker/Crypt/Password.html#method_getSalt", "name": "Windwalker\\Crypt\\Password::getSalt", "doc": "&quot;Method to get property Salt&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\Password", "fromLink": "Windwalker/Crypt/Password.html", "link": "Windwalker/Crypt/Password.html#method_setSalt", "name": "Windwalker\\Crypt\\Password::setSalt", "doc": "&quot;Method to set property salt&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\Password", "fromLink": "Windwalker/Crypt/Password.html", "link": "Windwalker/Crypt/Password.html#method_getCost", "name": "Windwalker\\Crypt\\Password::getCost", "doc": "&quot;Method to get property Cost&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\Password", "fromLink": "Windwalker/Crypt/Password.html", "link": "Windwalker/Crypt/Password.html#method_setCost", "name": "Windwalker\\Crypt\\Password::setCost", "doc": "&quot;Method to set property cost&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\Password", "fromLink": "Windwalker/Crypt/Password.html", "link": "Windwalker/Crypt/Password.html#method_getType", "name": "Windwalker\\Crypt\\Password::getType", "doc": "&quot;Method to get property Type&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Crypt\\Password", "fromLink": "Windwalker/Crypt/Password.html", "link": "Windwalker/Crypt/Password.html#method_setType", "name": "Windwalker\\Crypt\\Password::setType", "doc": "&quot;Method to set property type&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\DI", "fromLink": "Windwalker/DI.html", "link": "Windwalker/DI/ClassMeta.html", "name": "Windwalker\\DI\\ClassMeta", "doc": "&quot;The ClassMeta class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\DI\\ClassMeta", "fromLink": "Windwalker/DI/ClassMeta.html", "link": "Windwalker/DI/ClassMeta.html#method___construct", "name": "Windwalker\\DI\\ClassMeta::__construct", "doc": "&quot;ClassMeta constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\ClassMeta", "fromLink": "Windwalker/DI/ClassMeta.html", "link": "Windwalker/DI/ClassMeta.html#method_getArgument", "name": "Windwalker\\DI\\ClassMeta::getArgument", "doc": "&quot;Method to get property Argument&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\ClassMeta", "fromLink": "Windwalker/DI/ClassMeta.html", "link": "Windwalker/DI/ClassMeta.html#method_setArgument", "name": "Windwalker\\DI\\ClassMeta::setArgument", "doc": "&quot;Method to set property argument&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\ClassMeta", "fromLink": "Windwalker/DI/ClassMeta.html", "link": "Windwalker/DI/ClassMeta.html#method_removeArgument", "name": "Windwalker\\DI\\ClassMeta::removeArgument", "doc": "&quot;removeArgument&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\ClassMeta", "fromLink": "Windwalker/DI/ClassMeta.html", "link": "Windwalker/DI/ClassMeta.html#method_getArguments", "name": "Windwalker\\DI\\ClassMeta::getArguments", "doc": "&quot;Method to get property Arguments&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\ClassMeta", "fromLink": "Windwalker/DI/ClassMeta.html", "link": "Windwalker/DI/ClassMeta.html#method_setArguments", "name": "Windwalker\\DI\\ClassMeta::setArguments", "doc": "&quot;Method to set property arguments&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\ClassMeta", "fromLink": "Windwalker/DI/ClassMeta.html", "link": "Windwalker/DI/ClassMeta.html#method_reset", "name": "Windwalker\\DI\\ClassMeta::reset", "doc": "&quot;reset&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\ClassMeta", "fromLink": "Windwalker/DI/ClassMeta.html", "link": "Windwalker/DI/ClassMeta.html#method___call", "name": "Windwalker\\DI\\ClassMeta::__call", "doc": "&quot;__call&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\ClassMeta", "fromLink": "Windwalker/DI/ClassMeta.html", "link": "Windwalker/DI/ClassMeta.html#method_newInstance", "name": "Windwalker\\DI\\ClassMeta::newInstance", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\ClassMeta", "fromLink": "Windwalker/DI/ClassMeta.html", "link": "Windwalker/DI/ClassMeta.html#method_createObject", "name": "Windwalker\\DI\\ClassMeta::createObject", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\ClassMeta", "fromLink": "Windwalker/DI/ClassMeta.html", "link": "Windwalker/DI/ClassMeta.html#method_createSharedObject", "name": "Windwalker\\DI\\ClassMeta::createSharedObject", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\ClassMeta", "fromLink": "Windwalker/DI/ClassMeta.html", "link": "Windwalker/DI/ClassMeta.html#method_bind", "name": "Windwalker\\DI\\ClassMeta::bind", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\ClassMeta", "fromLink": "Windwalker/DI/ClassMeta.html", "link": "Windwalker/DI/ClassMeta.html#method_bindShared", "name": "Windwalker\\DI\\ClassMeta::bindShared", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\DI", "fromLink": "Windwalker/DI.html", "link": "Windwalker/DI/Container.html", "name": "Windwalker\\DI\\Container", "doc": "&quot;The DI Container.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method___construct", "name": "Windwalker\\DI\\Container::__construct", "doc": "&quot;Constructor for the DI Container&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_alias", "name": "Windwalker\\DI\\Container::alias", "doc": "&quot;Create an alias for a given key for easy access.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_bind", "name": "Windwalker\\DI\\Container::bind", "doc": "&quot;bind&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_bindShared", "name": "Windwalker\\DI\\Container::bindShared", "doc": "&quot;bindShared&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_prepareObject", "name": "Windwalker\\DI\\Container::prepareObject", "doc": "&quot;prepareObject&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_prepareSharedObject", "name": "Windwalker\\DI\\Container::prepareSharedObject", "doc": "&quot;prepareSharedObject&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_createObject", "name": "Windwalker\\DI\\Container::createObject", "doc": "&quot;createObject&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_createSharedObject", "name": "Windwalker\\DI\\Container::createSharedObject", "doc": "&quot;createSharedObject&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_newInstance", "name": "Windwalker\\DI\\Container::newInstance", "doc": "&quot;Create an object of class $key;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_execute", "name": "Windwalker\\DI\\Container::execute", "doc": "&quot;Execute a callable with dependencies.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_whenCreating", "name": "Windwalker\\DI\\Container::whenCreating", "doc": "&quot;whenCreating&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_createChild", "name": "Windwalker\\DI\\Container::createChild", "doc": "&quot;Create a child Container with a new property scope that\nthat has the ability to access the parent scope when resolving.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_extend", "name": "Windwalker\\DI\\Container::extend", "doc": "&quot;Extend a defined service Closure by wrapping the existing one with a new Closure.  This\nworks very similar to a decorator pattern.  Note that this only works on service Closures\nthat have been defined in the current Provider, not parent providers.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_set", "name": "Windwalker\\DI\\Container::set", "doc": "&quot;Method to set the key and callback to the dataStore array.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_protect", "name": "Windwalker\\DI\\Container::protect", "doc": "&quot;Convenience method for creating protected keys.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_share", "name": "Windwalker\\DI\\Container::share", "doc": "&quot;Convenience method for creating shared keys.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_get", "name": "Windwalker\\DI\\Container::get", "doc": "&quot;Method to retrieve the results of running the $callback for the specified $key;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_remove", "name": "Windwalker\\DI\\Container::remove", "doc": "&quot;Remove an item from container.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_exists", "name": "Windwalker\\DI\\Container::exists", "doc": "&quot;Method to check if specified dataStore key exists.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_getNewInstance", "name": "Windwalker\\DI\\Container::getNewInstance", "doc": "&quot;Method to force the container to return a new instance\nof the results of the callback for requested $key.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_fork", "name": "Windwalker\\DI\\Container::fork", "doc": "&quot;Fork an instance to a new key.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_registerServiceProvider", "name": "Windwalker\\DI\\Container::registerServiceProvider", "doc": "&quot;Register a service provider to the container.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_getParent", "name": "Windwalker\\DI\\Container::getParent", "doc": "&quot;Method to get property Parent&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_setParent", "name": "Windwalker\\DI\\Container::setParent", "doc": "&quot;Method to set property parent&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_addChild", "name": "Windwalker\\DI\\Container::addChild", "doc": "&quot;addChild&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_getChild", "name": "Windwalker\\DI\\Container::getChild", "doc": "&quot;getChild&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_hasChild", "name": "Windwalker\\DI\\Container::hasChild", "doc": "&quot;hasChild&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_removeChild", "name": "Windwalker\\DI\\Container::removeChild", "doc": "&quot;removeChild&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_getChildren", "name": "Windwalker\\DI\\Container::getChildren", "doc": "&quot;Method to get property Children&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_setChildren", "name": "Windwalker\\DI\\Container::setChildren", "doc": "&quot;Method to set property children&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_getIterator", "name": "Windwalker\\DI\\Container::getIterator", "doc": "&quot;Retrieve an external iterator&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_offsetExists", "name": "Windwalker\\DI\\Container::offsetExists", "doc": "&quot;Is a property exists or not.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_offsetGet", "name": "Windwalker\\DI\\Container::offsetGet", "doc": "&quot;Get a property.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_offsetSet", "name": "Windwalker\\DI\\Container::offsetSet", "doc": "&quot;Set a value to property.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_offsetUnset", "name": "Windwalker\\DI\\Container::offsetUnset", "doc": "&quot;Unset a property.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\Container", "fromLink": "Windwalker/DI/Container.html", "link": "Windwalker/DI/Container.html#method_count", "name": "Windwalker\\DI\\Container::count", "doc": "&quot;Count this object.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\DI", "fromLink": "Windwalker/DI.html", "link": "Windwalker/DI/ContainerAwareInterface.html", "name": "Windwalker\\DI\\ContainerAwareInterface", "doc": "&quot;Interface ContainerAwareInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\DI\\ContainerAwareInterface", "fromLink": "Windwalker/DI/ContainerAwareInterface.html", "link": "Windwalker/DI/ContainerAwareInterface.html#method_getContainer", "name": "Windwalker\\DI\\ContainerAwareInterface::getContainer", "doc": "&quot;Get the DI container.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\ContainerAwareInterface", "fromLink": "Windwalker/DI/ContainerAwareInterface.html", "link": "Windwalker/DI/ContainerAwareInterface.html#method_setContainer", "name": "Windwalker\\DI\\ContainerAwareInterface::setContainer", "doc": "&quot;Set the DI container.&quot;"},
            
            {"type": "Trait", "fromName": "Windwalker\\DI", "fromLink": "Windwalker/DI.html", "link": "Windwalker/DI/ContainerAwareTrait.html", "name": "Windwalker\\DI\\ContainerAwareTrait", "doc": "&quot;Container Aware Trait&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\DI\\ContainerAwareTrait", "fromLink": "Windwalker/DI/ContainerAwareTrait.html", "link": "Windwalker/DI/ContainerAwareTrait.html#method_getContainer", "name": "Windwalker\\DI\\ContainerAwareTrait::getContainer", "doc": "&quot;Get the DI container.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\ContainerAwareTrait", "fromLink": "Windwalker/DI/ContainerAwareTrait.html", "link": "Windwalker/DI/ContainerAwareTrait.html#method_setContainer", "name": "Windwalker\\DI\\ContainerAwareTrait::setContainer", "doc": "&quot;Set the DI container.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\DI", "fromLink": "Windwalker/DI.html", "link": "Windwalker/DI/DataStore.html", "name": "Windwalker\\DI\\DataStore", "doc": "&quot;The DataStore class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\DI\\DataStore", "fromLink": "Windwalker/DI/DataStore.html", "link": "Windwalker/DI/DataStore.html#method___construct", "name": "Windwalker\\DI\\DataStore::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\DataStore", "fromLink": "Windwalker/DI/DataStore.html", "link": "Windwalker/DI/DataStore.html#method_get", "name": "Windwalker\\DI\\DataStore::get", "doc": "&quot;Get instance of this DataStore.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\DataStore", "fromLink": "Windwalker/DI/DataStore.html", "link": "Windwalker/DI/DataStore.html#method_getCallback", "name": "Windwalker\\DI\\DataStore::getCallback", "doc": "&quot;Method to get property Callback&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\DataStore", "fromLink": "Windwalker/DI/DataStore.html", "link": "Windwalker/DI/DataStore.html#method_setCallback", "name": "Windwalker\\DI\\DataStore::setCallback", "doc": "&quot;Method to set property callback&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\DataStore", "fromLink": "Windwalker/DI/DataStore.html", "link": "Windwalker/DI/DataStore.html#method_isShared", "name": "Windwalker\\DI\\DataStore::isShared", "doc": "&quot;Method to get property Shared&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\DataStore", "fromLink": "Windwalker/DI/DataStore.html", "link": "Windwalker/DI/DataStore.html#method_isProtected", "name": "Windwalker\\DI\\DataStore::isProtected", "doc": "&quot;Method to get property Protected&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\DataStore", "fromLink": "Windwalker/DI/DataStore.html", "link": "Windwalker/DI/DataStore.html#method_getInstance", "name": "Windwalker\\DI\\DataStore::getInstance", "doc": "&quot;Method to get property Instance&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DI\\DataStore", "fromLink": "Windwalker/DI/DataStore.html", "link": "Windwalker/DI/DataStore.html#method_setInstance", "name": "Windwalker\\DI\\DataStore::setInstance", "doc": "&quot;Method to set property instance&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\DI\\Exception", "fromLink": "Windwalker/DI/Exception.html", "link": "Windwalker/DI/Exception/DependencyResolutionException.html", "name": "Windwalker\\DI\\Exception\\DependencyResolutionException", "doc": "&quot;Exception class for handling errors in resolving a dependency&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\DI", "fromLink": "Windwalker/DI.html", "link": "Windwalker/DI/ServiceProviderInterface.html", "name": "Windwalker\\DI\\ServiceProviderInterface", "doc": "&quot;Interface ServiceProviderInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\DI\\ServiceProviderInterface", "fromLink": "Windwalker/DI/ServiceProviderInterface.html", "link": "Windwalker/DI/ServiceProviderInterface.html#method_register", "name": "Windwalker\\DI\\ServiceProviderInterface::register", "doc": "&quot;Registers the service provider with a DI container.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\DataMapper", "fromLink": "Windwalker/DataMapper.html", "link": "Windwalker/DataMapper/AbstractDataMapper.html", "name": "Windwalker\\DataMapper\\AbstractDataMapper", "doc": "&quot;Abstract DataMapper.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\DataMapper\\AbstractDataMapper", "fromLink": "Windwalker/DataMapper/AbstractDataMapper.html", "link": "Windwalker/DataMapper/AbstractDataMapper.html#method___construct", "name": "Windwalker\\DataMapper\\AbstractDataMapper::__construct", "doc": "&quot;Init this class.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\AbstractDataMapper", "fromLink": "Windwalker/DataMapper/AbstractDataMapper.html", "link": "Windwalker/DataMapper/AbstractDataMapper.html#method_find", "name": "Windwalker\\DataMapper\\AbstractDataMapper::find", "doc": "&quot;Find records and return data set.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\AbstractDataMapper", "fromLink": "Windwalker/DataMapper/AbstractDataMapper.html", "link": "Windwalker/DataMapper/AbstractDataMapper.html#method_findAll", "name": "Windwalker\\DataMapper\\AbstractDataMapper::findAll", "doc": "&quot;Find records without where conditions and return data set.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\AbstractDataMapper", "fromLink": "Windwalker/DataMapper/AbstractDataMapper.html", "link": "Windwalker/DataMapper/AbstractDataMapper.html#method_findOne", "name": "Windwalker\\DataMapper\\AbstractDataMapper::findOne", "doc": "&quot;Find one record and return a data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\AbstractDataMapper", "fromLink": "Windwalker/DataMapper/AbstractDataMapper.html", "link": "Windwalker/DataMapper/AbstractDataMapper.html#method_findColumn", "name": "Windwalker\\DataMapper\\AbstractDataMapper::findColumn", "doc": "&quot;Find column as an array.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\AbstractDataMapper", "fromLink": "Windwalker/DataMapper/AbstractDataMapper.html", "link": "Windwalker/DataMapper/AbstractDataMapper.html#method_create", "name": "Windwalker\\DataMapper\\AbstractDataMapper::create", "doc": "&quot;Create records by data set.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\AbstractDataMapper", "fromLink": "Windwalker/DataMapper/AbstractDataMapper.html", "link": "Windwalker/DataMapper/AbstractDataMapper.html#method_createOne", "name": "Windwalker\\DataMapper\\AbstractDataMapper::createOne", "doc": "&quot;Create one record by data object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\AbstractDataMapper", "fromLink": "Windwalker/DataMapper/AbstractDataMapper.html", "link": "Windwalker/DataMapper/AbstractDataMapper.html#method_update", "name": "Windwalker\\DataMapper\\AbstractDataMapper::update", "doc": "&quot;Update records by data set. Every data depend on this table&#039;s primary key to update itself.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\AbstractDataMapper", "fromLink": "Windwalker/DataMapper/AbstractDataMapper.html", "link": "Windwalker/DataMapper/AbstractDataMapper.html#method_updateOne", "name": "Windwalker\\DataMapper\\AbstractDataMapper::updateOne", "doc": "&quot;Same as update(), just update one row.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\AbstractDataMapper", "fromLink": "Windwalker/DataMapper/AbstractDataMapper.html", "link": "Windwalker/DataMapper/AbstractDataMapper.html#method_updateBatch", "name": "Windwalker\\DataMapper\\AbstractDataMapper::updateBatch", "doc": "&quot;Using one data to update multiple rows, filter by where conditions.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\AbstractDataMapper", "fromLink": "Windwalker/DataMapper/AbstractDataMapper.html", "link": "Windwalker/DataMapper/AbstractDataMapper.html#method_flush", "name": "Windwalker\\DataMapper\\AbstractDataMapper::flush", "doc": "&quot;Flush records, will delete all by conditions then recreate new.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\AbstractDataMapper", "fromLink": "Windwalker/DataMapper/AbstractDataMapper.html", "link": "Windwalker/DataMapper/AbstractDataMapper.html#method_save", "name": "Windwalker\\DataMapper\\AbstractDataMapper::save", "doc": "&quot;Save will auto detect is conditions matched in data or not.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\AbstractDataMapper", "fromLink": "Windwalker/DataMapper/AbstractDataMapper.html", "link": "Windwalker/DataMapper/AbstractDataMapper.html#method_saveOne", "name": "Windwalker\\DataMapper\\AbstractDataMapper::saveOne", "doc": "&quot;Save only one row.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\AbstractDataMapper", "fromLink": "Windwalker/DataMapper/AbstractDataMapper.html", "link": "Windwalker/DataMapper/AbstractDataMapper.html#method_delete", "name": "Windwalker\\DataMapper\\AbstractDataMapper::delete", "doc": "&quot;Delete records by where conditions.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\AbstractDataMapper", "fromLink": "Windwalker/DataMapper/AbstractDataMapper.html", "link": "Windwalker/DataMapper/AbstractDataMapper.html#method_getFields", "name": "Windwalker\\DataMapper\\AbstractDataMapper::getFields", "doc": "&quot;Get table fields.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\AbstractDataMapper", "fromLink": "Windwalker/DataMapper/AbstractDataMapper.html", "link": "Windwalker/DataMapper/AbstractDataMapper.html#method_getTable", "name": "Windwalker\\DataMapper\\AbstractDataMapper::getTable", "doc": "&quot;Get table name.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\AbstractDataMapper", "fromLink": "Windwalker/DataMapper/AbstractDataMapper.html", "link": "Windwalker/DataMapper/AbstractDataMapper.html#method_setTable", "name": "Windwalker\\DataMapper\\AbstractDataMapper::setTable", "doc": "&quot;Set table name.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\AbstractDataMapper", "fromLink": "Windwalker/DataMapper/AbstractDataMapper.html", "link": "Windwalker/DataMapper/AbstractDataMapper.html#method_getDataClass", "name": "Windwalker\\DataMapper\\AbstractDataMapper::getDataClass", "doc": "&quot;Get data class.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\AbstractDataMapper", "fromLink": "Windwalker/DataMapper/AbstractDataMapper.html", "link": "Windwalker/DataMapper/AbstractDataMapper.html#method_setDataClass", "name": "Windwalker\\DataMapper\\AbstractDataMapper::setDataClass", "doc": "&quot;Set data class.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\AbstractDataMapper", "fromLink": "Windwalker/DataMapper/AbstractDataMapper.html", "link": "Windwalker/DataMapper/AbstractDataMapper.html#method_getDatasetClass", "name": "Windwalker\\DataMapper\\AbstractDataMapper::getDatasetClass", "doc": "&quot;Get data set class.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\AbstractDataMapper", "fromLink": "Windwalker/DataMapper/AbstractDataMapper.html", "link": "Windwalker/DataMapper/AbstractDataMapper.html#method_setDatasetClass", "name": "Windwalker\\DataMapper\\AbstractDataMapper::setDatasetClass", "doc": "&quot;Set Data set class.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\AbstractDataMapper", "fromLink": "Windwalker/DataMapper/AbstractDataMapper.html", "link": "Windwalker/DataMapper/AbstractDataMapper.html#method_useTransaction", "name": "Windwalker\\DataMapper\\AbstractDataMapper::useTransaction", "doc": "&quot;To use transaction or not.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\AbstractDataMapper", "fromLink": "Windwalker/DataMapper/AbstractDataMapper.html", "link": "Windwalker/DataMapper/AbstractDataMapper.html#method_triggerEvent", "name": "Windwalker\\DataMapper\\AbstractDataMapper::triggerEvent", "doc": "&quot;triggerEvent&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\AbstractDataMapper", "fromLink": "Windwalker/DataMapper/AbstractDataMapper.html", "link": "Windwalker/DataMapper/AbstractDataMapper.html#method_getDispatcher", "name": "Windwalker\\DataMapper\\AbstractDataMapper::getDispatcher", "doc": "&quot;Method to get property Dispatcher&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\AbstractDataMapper", "fromLink": "Windwalker/DataMapper/AbstractDataMapper.html", "link": "Windwalker/DataMapper/AbstractDataMapper.html#method_setDispatcher", "name": "Windwalker\\DataMapper\\AbstractDataMapper::setDispatcher", "doc": "&quot;Method to set property dispatcher&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\AbstractDataMapper", "fromLink": "Windwalker/DataMapper/AbstractDataMapper.html", "link": "Windwalker/DataMapper/AbstractDataMapper.html#method_getKeyName", "name": "Windwalker\\DataMapper\\AbstractDataMapper::getKeyName", "doc": "&quot;Method to get the primary key field name for the table.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\AbstractDataMapper", "fromLink": "Windwalker/DataMapper/AbstractDataMapper.html", "link": "Windwalker/DataMapper/AbstractDataMapper.html#method_hasPrimaryKey", "name": "Windwalker\\DataMapper\\AbstractDataMapper::hasPrimaryKey", "doc": "&quot;Validate that the primary key has been set.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\DataMapper", "fromLink": "Windwalker/DataMapper.html", "link": "Windwalker/DataMapper/AbstractDatabaseMapperProxy.html", "name": "Windwalker\\DataMapper\\AbstractDatabaseMapperProxy", "doc": "&quot;The AbstractDataMapperProxy class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\DataMapper\\AbstractDatabaseMapperProxy", "fromLink": "Windwalker/DataMapper/AbstractDatabaseMapperProxy.html", "link": "Windwalker/DataMapper/AbstractDatabaseMapperProxy.html#method___call", "name": "Windwalker\\DataMapper\\AbstractDatabaseMapperProxy::__call", "doc": "&quot;is triggered when invoking inaccessible methods in an object context.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\AbstractDatabaseMapperProxy", "fromLink": "Windwalker/DataMapper/AbstractDatabaseMapperProxy.html", "link": "Windwalker/DataMapper/AbstractDatabaseMapperProxy.html#method___callStatic", "name": "Windwalker\\DataMapper\\AbstractDatabaseMapperProxy::__callStatic", "doc": "&quot;is triggered when invoking inaccessible methods in a static context.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\AbstractDatabaseMapperProxy", "fromLink": "Windwalker/DataMapper/AbstractDatabaseMapperProxy.html", "link": "Windwalker/DataMapper/AbstractDatabaseMapperProxy.html#method_getInstance", "name": "Windwalker\\DataMapper\\AbstractDatabaseMapperProxy::getInstance", "doc": "&quot;getInstance&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\AbstractDatabaseMapperProxy", "fromLink": "Windwalker/DataMapper/AbstractDatabaseMapperProxy.html", "link": "Windwalker/DataMapper/AbstractDatabaseMapperProxy.html#method_createDataMapper", "name": "Windwalker\\DataMapper\\AbstractDatabaseMapperProxy::createDataMapper", "doc": "&quot;createDataMapper&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\AbstractDatabaseMapperProxy", "fromLink": "Windwalker/DataMapper/AbstractDatabaseMapperProxy.html", "link": "Windwalker/DataMapper/AbstractDatabaseMapperProxy.html#method_setDataMapper", "name": "Windwalker\\DataMapper\\AbstractDatabaseMapperProxy::setDataMapper", "doc": "&quot;setDataMapper&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\AbstractDatabaseMapperProxy", "fromLink": "Windwalker/DataMapper/AbstractDatabaseMapperProxy.html", "link": "Windwalker/DataMapper/AbstractDatabaseMapperProxy.html#method_reset", "name": "Windwalker\\DataMapper\\AbstractDatabaseMapperProxy::reset", "doc": "&quot;reset&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\DataMapper", "fromLink": "Windwalker/DataMapper.html", "link": "Windwalker/DataMapper/DataMapper.html", "name": "Windwalker\\DataMapper\\DataMapper", "doc": "&quot;Main Database Mapper class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapper", "fromLink": "Windwalker/DataMapper/DataMapper.html", "link": "Windwalker/DataMapper/DataMapper.html#method_newRelation", "name": "Windwalker\\DataMapper\\DataMapper::newRelation", "doc": "&quot;newRelation&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapper", "fromLink": "Windwalker/DataMapper/DataMapper.html", "link": "Windwalker/DataMapper/DataMapper.html#method___construct", "name": "Windwalker\\DataMapper\\DataMapper::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapper", "fromLink": "Windwalker/DataMapper/DataMapper.html", "link": "Windwalker/DataMapper/DataMapper.html#method_alias", "name": "Windwalker\\DataMapper\\DataMapper::alias", "doc": "&quot;Method to set property alias&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapper", "fromLink": "Windwalker/DataMapper/DataMapper.html", "link": "Windwalker/DataMapper/DataMapper.html#method_findColumn", "name": "Windwalker\\DataMapper\\DataMapper::findColumn", "doc": "&quot;Find column as an array.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapper", "fromLink": "Windwalker/DataMapper/DataMapper.html", "link": "Windwalker/DataMapper/DataMapper.html#method_getDb", "name": "Windwalker\\DataMapper\\DataMapper::getDb", "doc": "&quot;Get DB adapter.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapper", "fromLink": "Windwalker/DataMapper/DataMapper.html", "link": "Windwalker/DataMapper/DataMapper.html#method_setDb", "name": "Windwalker\\DataMapper\\DataMapper::setDb", "doc": "&quot;Set db adapter.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapper", "fromLink": "Windwalker/DataMapper/DataMapper.html", "link": "Windwalker/DataMapper/DataMapper.html#method_getFields", "name": "Windwalker\\DataMapper\\DataMapper::getFields", "doc": "&quot;Get table fields.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapper", "fromLink": "Windwalker/DataMapper/DataMapper.html", "link": "Windwalker/DataMapper/DataMapper.html#method_getQuery", "name": "Windwalker\\DataMapper\\DataMapper::getQuery", "doc": "&quot;Method to get property Query&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapper", "fromLink": "Windwalker/DataMapper/DataMapper.html", "link": "Windwalker/DataMapper/DataMapper.html#method_setQuery", "name": "Windwalker\\DataMapper\\DataMapper::setQuery", "doc": "&quot;Method to set property query&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapper", "fromLink": "Windwalker/DataMapper/DataMapper.html", "link": "Windwalker/DataMapper/DataMapper.html#method_getQueryHelper", "name": "Windwalker\\DataMapper\\DataMapper::getQueryHelper", "doc": "&quot;Method to get property QueryHelper&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapper", "fromLink": "Windwalker/DataMapper/DataMapper.html", "link": "Windwalker/DataMapper/DataMapper.html#method_setQueryHelper", "name": "Windwalker\\DataMapper\\DataMapper::setQueryHelper", "doc": "&quot;Method to set property queryHelper&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapper", "fromLink": "Windwalker/DataMapper/DataMapper.html", "link": "Windwalker/DataMapper/DataMapper.html#method_reset", "name": "Windwalker\\DataMapper\\DataMapper::reset", "doc": "&quot;reset&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapper", "fromLink": "Windwalker/DataMapper/DataMapper.html", "link": "Windwalker/DataMapper/DataMapper.html#method_join", "name": "Windwalker\\DataMapper\\DataMapper::join", "doc": "&quot;join&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapper", "fromLink": "Windwalker/DataMapper/DataMapper.html", "link": "Windwalker/DataMapper/DataMapper.html#method___call", "name": "Windwalker\\DataMapper\\DataMapper::__call", "doc": "&quot;__call&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\DataMapper", "fromLink": "Windwalker/DataMapper.html", "link": "Windwalker/DataMapper/DataMapperInterface.html", "name": "Windwalker\\DataMapper\\DataMapperInterface", "doc": "&quot;DataMapper Interface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapperInterface", "fromLink": "Windwalker/DataMapper/DataMapperInterface.html", "link": "Windwalker/DataMapper/DataMapperInterface.html#method_find", "name": "Windwalker\\DataMapper\\DataMapperInterface::find", "doc": "&quot;Find records and return data set.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapperInterface", "fromLink": "Windwalker/DataMapper/DataMapperInterface.html", "link": "Windwalker/DataMapper/DataMapperInterface.html#method_findAll", "name": "Windwalker\\DataMapper\\DataMapperInterface::findAll", "doc": "&quot;Find records without where conditions and return data set.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapperInterface", "fromLink": "Windwalker/DataMapper/DataMapperInterface.html", "link": "Windwalker/DataMapper/DataMapperInterface.html#method_findOne", "name": "Windwalker\\DataMapper\\DataMapperInterface::findOne", "doc": "&quot;Find one record and return a data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapperInterface", "fromLink": "Windwalker/DataMapper/DataMapperInterface.html", "link": "Windwalker/DataMapper/DataMapperInterface.html#method_findColumn", "name": "Windwalker\\DataMapper\\DataMapperInterface::findColumn", "doc": "&quot;Find column as an array.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapperInterface", "fromLink": "Windwalker/DataMapper/DataMapperInterface.html", "link": "Windwalker/DataMapper/DataMapperInterface.html#method_create", "name": "Windwalker\\DataMapper\\DataMapperInterface::create", "doc": "&quot;Create records by data set.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapperInterface", "fromLink": "Windwalker/DataMapper/DataMapperInterface.html", "link": "Windwalker/DataMapper/DataMapperInterface.html#method_createOne", "name": "Windwalker\\DataMapper\\DataMapperInterface::createOne", "doc": "&quot;Create one record by data object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapperInterface", "fromLink": "Windwalker/DataMapper/DataMapperInterface.html", "link": "Windwalker/DataMapper/DataMapperInterface.html#method_update", "name": "Windwalker\\DataMapper\\DataMapperInterface::update", "doc": "&quot;Update records by data set. Every data depend on this table&#039;s primary key to update itself.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapperInterface", "fromLink": "Windwalker/DataMapper/DataMapperInterface.html", "link": "Windwalker/DataMapper/DataMapperInterface.html#method_updateBatch", "name": "Windwalker\\DataMapper\\DataMapperInterface::updateBatch", "doc": "&quot;Using one data to update multiple rows, filter by where conditions.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapperInterface", "fromLink": "Windwalker/DataMapper/DataMapperInterface.html", "link": "Windwalker/DataMapper/DataMapperInterface.html#method_updateOne", "name": "Windwalker\\DataMapper\\DataMapperInterface::updateOne", "doc": "&quot;Same as update(), just update one row.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapperInterface", "fromLink": "Windwalker/DataMapper/DataMapperInterface.html", "link": "Windwalker/DataMapper/DataMapperInterface.html#method_flush", "name": "Windwalker\\DataMapper\\DataMapperInterface::flush", "doc": "&quot;Flush records, will delete all by conditions then recreate new.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapperInterface", "fromLink": "Windwalker/DataMapper/DataMapperInterface.html", "link": "Windwalker/DataMapper/DataMapperInterface.html#method_save", "name": "Windwalker\\DataMapper\\DataMapperInterface::save", "doc": "&quot;Save will auto detect is conditions matched in data or not.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapperInterface", "fromLink": "Windwalker/DataMapper/DataMapperInterface.html", "link": "Windwalker/DataMapper/DataMapperInterface.html#method_saveOne", "name": "Windwalker\\DataMapper\\DataMapperInterface::saveOne", "doc": "&quot;Save only one row.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DataMapperInterface", "fromLink": "Windwalker/DataMapper/DataMapperInterface.html", "link": "Windwalker/DataMapper/DataMapperInterface.html#method_delete", "name": "Windwalker\\DataMapper\\DataMapperInterface::delete", "doc": "&quot;Delete records by where conditions.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\DataMapper", "fromLink": "Windwalker/DataMapper.html", "link": "Windwalker/DataMapper/DatabaseContainer.html", "name": "Windwalker\\DataMapper\\DatabaseContainer", "doc": "&quot;The DbContainer class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\DataMapper\\DatabaseContainer", "fromLink": "Windwalker/DataMapper/DatabaseContainer.html", "link": "Windwalker/DataMapper/DatabaseContainer.html#method_getDb", "name": "Windwalker\\DataMapper\\DatabaseContainer::getDb", "doc": "&quot;Method to get property Db&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DatabaseContainer", "fromLink": "Windwalker/DataMapper/DatabaseContainer.html", "link": "Windwalker/DataMapper/DatabaseContainer.html#method_setDb", "name": "Windwalker\\DataMapper\\DatabaseContainer::setDb", "doc": "&quot;Method to set property db&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\DataMapper", "fromLink": "Windwalker/DataMapper.html", "link": "Windwalker/DataMapper/DatabaseMapperInterface.html", "name": "Windwalker\\DataMapper\\DatabaseMapperInterface", "doc": "&quot;The DatabaseMapperInterface class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\DataMapper\\DatabaseMapperInterface", "fromLink": "Windwalker/DataMapper/DatabaseMapperInterface.html", "link": "Windwalker/DataMapper/DatabaseMapperInterface.html#method_getFields", "name": "Windwalker\\DataMapper\\DatabaseMapperInterface::getFields", "doc": "&quot;Get table fields.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DatabaseMapperInterface", "fromLink": "Windwalker/DataMapper/DatabaseMapperInterface.html", "link": "Windwalker/DataMapper/DatabaseMapperInterface.html#method_getTable", "name": "Windwalker\\DataMapper\\DatabaseMapperInterface::getTable", "doc": "&quot;Get table name.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DatabaseMapperInterface", "fromLink": "Windwalker/DataMapper/DatabaseMapperInterface.html", "link": "Windwalker/DataMapper/DatabaseMapperInterface.html#method_getDb", "name": "Windwalker\\DataMapper\\DatabaseMapperInterface::getDb", "doc": "&quot;Get DB adapter.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\DatabaseMapperInterface", "fromLink": "Windwalker/DataMapper/DatabaseMapperInterface.html", "link": "Windwalker/DataMapper/DatabaseMapperInterface.html#method_setDb", "name": "Windwalker\\DataMapper\\DatabaseMapperInterface::setDb", "doc": "&quot;Set db adapter.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\DataMapper\\Entity", "fromLink": "Windwalker/DataMapper/Entity.html", "link": "Windwalker/DataMapper/Entity/Entity.html", "name": "Windwalker\\DataMapper\\Entity\\Entity", "doc": "&quot;Entity is a Data object sub class, we can set fields of this object\nthen help us filter non necessary values to prevent error when inserting to database.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\DataMapper\\Entity\\Entity", "fromLink": "Windwalker/DataMapper/Entity/Entity.html", "link": "Windwalker/DataMapper/Entity/Entity.html#method___construct", "name": "Windwalker\\DataMapper\\Entity\\Entity::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\Entity\\Entity", "fromLink": "Windwalker/DataMapper/Entity/Entity.html", "link": "Windwalker/DataMapper/Entity/Entity.html#method_getFields", "name": "Windwalker\\DataMapper\\Entity\\Entity::getFields", "doc": "&quot;loadFields&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\Entity\\Entity", "fromLink": "Windwalker/DataMapper/Entity/Entity.html", "link": "Windwalker/DataMapper/Entity/Entity.html#method_addField", "name": "Windwalker\\DataMapper\\Entity\\Entity::addField", "doc": "&quot;addField&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\Entity\\Entity", "fromLink": "Windwalker/DataMapper/Entity/Entity.html", "link": "Windwalker/DataMapper/Entity/Entity.html#method_addFields", "name": "Windwalker\\DataMapper\\Entity\\Entity::addFields", "doc": "&quot;Add a field to this entity.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\Entity\\Entity", "fromLink": "Windwalker/DataMapper/Entity/Entity.html", "link": "Windwalker/DataMapper/Entity/Entity.html#method_removeField", "name": "Windwalker\\DataMapper\\Entity\\Entity::removeField", "doc": "&quot;Remove field from this entity.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\Entity\\Entity", "fromLink": "Windwalker/DataMapper/Entity/Entity.html", "link": "Windwalker/DataMapper/Entity/Entity.html#method_hasField", "name": "Windwalker\\DataMapper\\Entity\\Entity::hasField", "doc": "&quot;Method to check a field exists or not.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\Entity\\Entity", "fromLink": "Windwalker/DataMapper/Entity/Entity.html", "link": "Windwalker/DataMapper/Entity/Entity.html#method_getIterator", "name": "Windwalker\\DataMapper\\Entity\\Entity::getIterator", "doc": "&quot;Get an iterator object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\Entity\\Entity", "fromLink": "Windwalker/DataMapper/Entity/Entity.html", "link": "Windwalker/DataMapper/Entity/Entity.html#method_setAlias", "name": "Windwalker\\DataMapper\\Entity\\Entity::setAlias", "doc": "&quot;Set column alias.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\Entity\\Entity", "fromLink": "Windwalker/DataMapper/Entity/Entity.html", "link": "Windwalker/DataMapper/Entity/Entity.html#method_resolveAlias", "name": "Windwalker\\DataMapper\\Entity\\Entity::resolveAlias", "doc": "&quot;Resolve alias.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\Entity\\Entity", "fromLink": "Windwalker/DataMapper/Entity/Entity.html", "link": "Windwalker/DataMapper/Entity/Entity.html#method___isset", "name": "Windwalker\\DataMapper\\Entity\\Entity::__isset", "doc": "&quot;__isset&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\Entity\\Entity", "fromLink": "Windwalker/DataMapper/Entity/Entity.html", "link": "Windwalker/DataMapper/Entity/Entity.html#method___set", "name": "Windwalker\\DataMapper\\Entity\\Entity::__set", "doc": "&quot;Set value.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\Entity\\Entity", "fromLink": "Windwalker/DataMapper/Entity/Entity.html", "link": "Windwalker/DataMapper/Entity/Entity.html#method___get", "name": "Windwalker\\DataMapper\\Entity\\Entity::__get", "doc": "&quot;Get value.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\Entity\\Entity", "fromLink": "Windwalker/DataMapper/Entity/Entity.html", "link": "Windwalker/DataMapper/Entity/Entity.html#method___unset", "name": "Windwalker\\DataMapper\\Entity\\Entity::__unset", "doc": "&quot;__unset&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\Entity\\Entity", "fromLink": "Windwalker/DataMapper/Entity/Entity.html", "link": "Windwalker/DataMapper/Entity/Entity.html#method_set", "name": "Windwalker\\DataMapper\\Entity\\Entity::set", "doc": "&quot;Magic setter to set a table field.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\Entity\\Entity", "fromLink": "Windwalker/DataMapper/Entity/Entity.html", "link": "Windwalker/DataMapper/Entity/Entity.html#method_get", "name": "Windwalker\\DataMapper\\Entity\\Entity::get", "doc": "&quot;Magic getter to get a table field.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\Entity\\Entity", "fromLink": "Windwalker/DataMapper/Entity/Entity.html", "link": "Windwalker/DataMapper/Entity/Entity.html#method_offsetExists", "name": "Windwalker\\DataMapper\\Entity\\Entity::offsetExists", "doc": "&quot;Is a property exists or not.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\Entity\\Entity", "fromLink": "Windwalker/DataMapper/Entity/Entity.html", "link": "Windwalker/DataMapper/Entity/Entity.html#method_offsetGet", "name": "Windwalker\\DataMapper\\Entity\\Entity::offsetGet", "doc": "&quot;Get a property.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\Entity\\Entity", "fromLink": "Windwalker/DataMapper/Entity/Entity.html", "link": "Windwalker/DataMapper/Entity/Entity.html#method_offsetSet", "name": "Windwalker\\DataMapper\\Entity\\Entity::offsetSet", "doc": "&quot;Set a value to property.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\Entity\\Entity", "fromLink": "Windwalker/DataMapper/Entity/Entity.html", "link": "Windwalker/DataMapper/Entity/Entity.html#method_offsetUnset", "name": "Windwalker\\DataMapper\\Entity\\Entity::offsetUnset", "doc": "&quot;Unset a property.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\Entity\\Entity", "fromLink": "Windwalker/DataMapper/Entity/Entity.html", "link": "Windwalker/DataMapper/Entity/Entity.html#method_count", "name": "Windwalker\\DataMapper\\Entity\\Entity::count", "doc": "&quot;Count this object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\Entity\\Entity", "fromLink": "Windwalker/DataMapper/Entity/Entity.html", "link": "Windwalker/DataMapper/Entity/Entity.html#method_exists", "name": "Windwalker\\DataMapper\\Entity\\Entity::exists", "doc": "&quot;Method to check a field exists.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\Entity\\Entity", "fromLink": "Windwalker/DataMapper/Entity/Entity.html", "link": "Windwalker/DataMapper/Entity/Entity.html#method_isNull", "name": "Windwalker\\DataMapper\\Entity\\Entity::isNull", "doc": "&quot;Is this object empty?&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\Entity\\Entity", "fromLink": "Windwalker/DataMapper/Entity/Entity.html", "link": "Windwalker/DataMapper/Entity/Entity.html#method_dump", "name": "Windwalker\\DataMapper\\Entity\\Entity::dump", "doc": "&quot;Dump all data as array&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\DataMapper\\Entity\\Entity", "fromLink": "Windwalker/DataMapper/Entity/Entity.html", "link": "Windwalker/DataMapper/Entity/Entity.html#method_reset", "name": "Windwalker\\DataMapper\\Entity\\Entity::reset", "doc": "&quot;Method to reset class properties to the defaults set in the class\ndefinition. It will ignore the primary key as well as any private class\nproperties.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Data", "fromLink": "Windwalker/Data.html", "link": "Windwalker/Data/Data.html", "name": "Windwalker\\Data\\Data", "doc": "&quot;Data object to store values.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Data\\Data", "fromLink": "Windwalker/Data/Data.html", "link": "Windwalker/Data/Data.html#method___construct", "name": "Windwalker\\Data\\Data::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\Data", "fromLink": "Windwalker/Data/Data.html", "link": "Windwalker/Data/Data.html#method_bind", "name": "Windwalker\\Data\\Data::bind", "doc": "&quot;Bind the data into this object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\Data", "fromLink": "Windwalker/Data/Data.html", "link": "Windwalker/Data/Data.html#method_set", "name": "Windwalker\\Data\\Data::set", "doc": "&quot;Set value to Data object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\Data", "fromLink": "Windwalker/Data/Data.html", "link": "Windwalker/Data/Data.html#method_get", "name": "Windwalker\\Data\\Data::get", "doc": "&quot;Get value.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\Data", "fromLink": "Windwalker/Data/Data.html", "link": "Windwalker/Data/Data.html#method_exists", "name": "Windwalker\\Data\\Data::exists", "doc": "&quot;Method to check a field exists.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\Data", "fromLink": "Windwalker/Data/Data.html", "link": "Windwalker/Data/Data.html#method___set", "name": "Windwalker\\Data\\Data::__set", "doc": "&quot;Set value.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\Data", "fromLink": "Windwalker/Data/Data.html", "link": "Windwalker/Data/Data.html#method___isset", "name": "Windwalker\\Data\\Data::__isset", "doc": "&quot;__isset&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\Data", "fromLink": "Windwalker/Data/Data.html", "link": "Windwalker/Data/Data.html#method___get", "name": "Windwalker\\Data\\Data::__get", "doc": "&quot;Get value.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\Data", "fromLink": "Windwalker/Data/Data.html", "link": "Windwalker/Data/Data.html#method___unset", "name": "Windwalker\\Data\\Data::__unset", "doc": "&quot;__unset&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\Data", "fromLink": "Windwalker/Data/Data.html", "link": "Windwalker/Data/Data.html#method_getIterator", "name": "Windwalker\\Data\\Data::getIterator", "doc": "&quot;Retrieve an external iterator&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\Data", "fromLink": "Windwalker/Data/Data.html", "link": "Windwalker/Data/Data.html#method_offsetExists", "name": "Windwalker\\Data\\Data::offsetExists", "doc": "&quot;Is a property exists or not.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\Data", "fromLink": "Windwalker/Data/Data.html", "link": "Windwalker/Data/Data.html#method_offsetGet", "name": "Windwalker\\Data\\Data::offsetGet", "doc": "&quot;Get a property.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\Data", "fromLink": "Windwalker/Data/Data.html", "link": "Windwalker/Data/Data.html#method_offsetSet", "name": "Windwalker\\Data\\Data::offsetSet", "doc": "&quot;Set a value to property.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\Data", "fromLink": "Windwalker/Data/Data.html", "link": "Windwalker/Data/Data.html#method_offsetUnset", "name": "Windwalker\\Data\\Data::offsetUnset", "doc": "&quot;Unset a property.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\Data", "fromLink": "Windwalker/Data/Data.html", "link": "Windwalker/Data/Data.html#method_count", "name": "Windwalker\\Data\\Data::count", "doc": "&quot;Count this object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\Data", "fromLink": "Windwalker/Data/Data.html", "link": "Windwalker/Data/Data.html#method_isNull", "name": "Windwalker\\Data\\Data::isNull", "doc": "&quot;Is this object empty?&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\Data", "fromLink": "Windwalker/Data/Data.html", "link": "Windwalker/Data/Data.html#method_notNull", "name": "Windwalker\\Data\\Data::notNull", "doc": "&quot;Is this object has properties?&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\Data", "fromLink": "Windwalker/Data/Data.html", "link": "Windwalker/Data/Data.html#method_dump", "name": "Windwalker\\Data\\Data::dump", "doc": "&quot;Dump all data as array&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\Data", "fromLink": "Windwalker/Data/Data.html", "link": "Windwalker/Data/Data.html#method_map", "name": "Windwalker\\Data\\Data::map", "doc": "&quot;Mapping all elements.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\Data", "fromLink": "Windwalker/Data/Data.html", "link": "Windwalker/Data/Data.html#method_walk", "name": "Windwalker\\Data\\Data::walk", "doc": "&quot;Apply a user supplied function to every member of this object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\Data", "fromLink": "Windwalker/Data/Data.html", "link": "Windwalker/Data/Data.html#method___clone", "name": "Windwalker\\Data\\Data::__clone", "doc": "&quot;Clone this object.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Data", "fromLink": "Windwalker/Data.html", "link": "Windwalker/Data/DataInterface.html", "name": "Windwalker\\Data\\DataInterface", "doc": "&quot;The Data Interface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Data\\DataInterface", "fromLink": "Windwalker/Data/DataInterface.html", "link": "Windwalker/Data/DataInterface.html#method_bind", "name": "Windwalker\\Data\\DataInterface::bind", "doc": "&quot;Bind the data into this object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataInterface", "fromLink": "Windwalker/Data/DataInterface.html", "link": "Windwalker/Data/DataInterface.html#method_isNull", "name": "Windwalker\\Data\\DataInterface::isNull", "doc": "&quot;Is this object empty?&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataInterface", "fromLink": "Windwalker/Data/DataInterface.html", "link": "Windwalker/Data/DataInterface.html#method_notNull", "name": "Windwalker\\Data\\DataInterface::notNull", "doc": "&quot;Is this object has properties?&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataInterface", "fromLink": "Windwalker/Data/DataInterface.html", "link": "Windwalker/Data/DataInterface.html#method_dump", "name": "Windwalker\\Data\\DataInterface::dump", "doc": "&quot;Dump all data as array&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataInterface", "fromLink": "Windwalker/Data/DataInterface.html", "link": "Windwalker/Data/DataInterface.html#method___get", "name": "Windwalker\\Data\\DataInterface::__get", "doc": "&quot;__get&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Data", "fromLink": "Windwalker/Data.html", "link": "Windwalker/Data/DataSet.html", "name": "Windwalker\\Data\\DataSet", "doc": "&quot;The Data set to store multiple data.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method___construct", "name": "Windwalker\\Data\\DataSet::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method_bind", "name": "Windwalker\\Data\\DataSet::bind", "doc": "&quot;Bind data array into self.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method___get", "name": "Windwalker\\Data\\DataSet::__get", "doc": "&quot;The magic get method is used to get a list of properties from the objects in the data set.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method___isset", "name": "Windwalker\\Data\\DataSet::__isset", "doc": "&quot;The magic isset method is used to check the state of an object property using the iterator.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method___set", "name": "Windwalker\\Data\\DataSet::__set", "doc": "&quot;The magic set method is used to set an object property using the iterator.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method___unset", "name": "Windwalker\\Data\\DataSet::__unset", "doc": "&quot;The magic unset method is used to unset an object property using the iterator.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method_offsetExists", "name": "Windwalker\\Data\\DataSet::offsetExists", "doc": "&quot;Property is exist or not.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method_offsetGet", "name": "Windwalker\\Data\\DataSet::offsetGet", "doc": "&quot;Get a value of property.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method_clear", "name": "Windwalker\\Data\\DataSet::clear", "doc": "&quot;Clears the objects in the data set.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method_offsetSet", "name": "Windwalker\\Data\\DataSet::offsetSet", "doc": "&quot;Set value to property&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method_offsetUnset", "name": "Windwalker\\Data\\DataSet::offsetUnset", "doc": "&quot;Unset a property.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method_getIterator", "name": "Windwalker\\Data\\DataSet::getIterator", "doc": "&quot;Get the data store for iterate.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method_serialize", "name": "Windwalker\\Data\\DataSet::serialize", "doc": "&quot;Serialize data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method_unserialize", "name": "Windwalker\\Data\\DataSet::unserialize", "doc": "&quot;Unserialize the data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method_count", "name": "Windwalker\\Data\\DataSet::count", "doc": "&quot;Count data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method_jsonSerialize", "name": "Windwalker\\Data\\DataSet::jsonSerialize", "doc": "&quot;Serialize to json format.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method_isNull", "name": "Windwalker\\Data\\DataSet::isNull", "doc": "&quot;Is this data set empty?&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method_notNull", "name": "Windwalker\\Data\\DataSet::notNull", "doc": "&quot;Is this data set has properties?&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method_dump", "name": "Windwalker\\Data\\DataSet::dump", "doc": "&quot;Dump all data as array.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method_allToArray", "name": "Windwalker\\Data\\DataSet::allToArray", "doc": "&quot;allToArray&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method_map", "name": "Windwalker\\Data\\DataSet::map", "doc": "&quot;Mapping all elements.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method_walk", "name": "Windwalker\\Data\\DataSet::walk", "doc": "&quot;Apply a user supplied function to every member of this object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method_ksort", "name": "Windwalker\\Data\\DataSet::ksort", "doc": "&quot;Sort Dataset by key.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method_krsort", "name": "Windwalker\\Data\\DataSet::krsort", "doc": "&quot;Sort DataSet by key in reverse order&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method_sort", "name": "Windwalker\\Data\\DataSet::sort", "doc": "&quot;Sort data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method_rsort", "name": "Windwalker\\Data\\DataSet::rsort", "doc": "&quot;Sort Data in reverse order.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method_uksort", "name": "Windwalker\\Data\\DataSet::uksort", "doc": "&quot;Sort DataSet by keys using a user-defined comparison function&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method_shuffle", "name": "Windwalker\\Data\\DataSet::shuffle", "doc": "&quot;Shuffle this DataSet to random orders.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method_first", "name": "Windwalker\\Data\\DataSet::first", "doc": "&quot;Get first element.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method_last", "name": "Windwalker\\Data\\DataSet::last", "doc": "&quot;Get last element.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method_push", "name": "Windwalker\\Data\\DataSet::push", "doc": "&quot;Push element to last.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method_pop", "name": "Windwalker\\Data\\DataSet::pop", "doc": "&quot;Pop the last element.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method_shift", "name": "Windwalker\\Data\\DataSet::shift", "doc": "&quot;Shift the first element.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method_unshift", "name": "Windwalker\\Data\\DataSet::unshift", "doc": "&quot;Unshift the first element.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method___clone", "name": "Windwalker\\Data\\DataSet::__clone", "doc": "&quot;Clone this class.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSet", "fromLink": "Windwalker/Data/DataSet.html", "link": "Windwalker/Data/DataSet.html#method_getKeys", "name": "Windwalker\\Data\\DataSet::getKeys", "doc": "&quot;Return all the keys of this DataSet.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Data", "fromLink": "Windwalker/Data.html", "link": "Windwalker/Data/DataSetInterface.html", "name": "Windwalker\\Data\\DataSetInterface", "doc": "&quot;The DataSet Interface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Data\\DataSetInterface", "fromLink": "Windwalker/Data/DataSetInterface.html", "link": "Windwalker/Data/DataSetInterface.html#method_bind", "name": "Windwalker\\Data\\DataSetInterface::bind", "doc": "&quot;Bind an array contains multiple data into this object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSetInterface", "fromLink": "Windwalker/Data/DataSetInterface.html", "link": "Windwalker/Data/DataSetInterface.html#method_isNull", "name": "Windwalker\\Data\\DataSetInterface::isNull", "doc": "&quot;Is this data set empty?&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSetInterface", "fromLink": "Windwalker/Data/DataSetInterface.html", "link": "Windwalker/Data/DataSetInterface.html#method_notNull", "name": "Windwalker\\Data\\DataSetInterface::notNull", "doc": "&quot;Is this data set has properties?&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Data\\DataSetInterface", "fromLink": "Windwalker/Data/DataSetInterface.html", "link": "Windwalker/Data/DataSetInterface.html#method_dump", "name": "Windwalker\\Data\\DataSetInterface::dump", "doc": "&quot;Dump all data as array.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Command", "fromLink": "Windwalker/Database/Command.html", "link": "Windwalker/Database/Command/AbstractDatabase.html", "name": "Windwalker\\Database\\Command\\AbstractDatabase", "doc": "&quot;Class DatabaseDatabase&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractDatabase", "fromLink": "Windwalker/Database/Command/AbstractDatabase.html", "link": "Windwalker/Database/Command/AbstractDatabase.html#method___construct", "name": "Windwalker\\Database\\Command\\AbstractDatabase::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractDatabase", "fromLink": "Windwalker/Database/Command/AbstractDatabase.html", "link": "Windwalker/Database/Command/AbstractDatabase.html#method_select", "name": "Windwalker\\Database\\Command\\AbstractDatabase::select", "doc": "&quot;select&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractDatabase", "fromLink": "Windwalker/Database/Command/AbstractDatabase.html", "link": "Windwalker/Database/Command/AbstractDatabase.html#method_create", "name": "Windwalker\\Database\\Command\\AbstractDatabase::create", "doc": "&quot;createDatabase&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractDatabase", "fromLink": "Windwalker/Database/Command/AbstractDatabase.html", "link": "Windwalker/Database/Command/AbstractDatabase.html#method_drop", "name": "Windwalker\\Database\\Command\\AbstractDatabase::drop", "doc": "&quot;dropDatabase&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractDatabase", "fromLink": "Windwalker/Database/Command/AbstractDatabase.html", "link": "Windwalker/Database/Command/AbstractDatabase.html#method_exists", "name": "Windwalker\\Database\\Command\\AbstractDatabase::exists", "doc": "&quot;exists&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractDatabase", "fromLink": "Windwalker/Database/Command/AbstractDatabase.html", "link": "Windwalker/Database/Command/AbstractDatabase.html#method_rename", "name": "Windwalker\\Database\\Command\\AbstractDatabase::rename", "doc": "&quot;renameDatabase&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractDatabase", "fromLink": "Windwalker/Database/Command/AbstractDatabase.html", "link": "Windwalker/Database/Command/AbstractDatabase.html#method_getTable", "name": "Windwalker\\Database\\Command\\AbstractDatabase::getTable", "doc": "&quot;getTable&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractDatabase", "fromLink": "Windwalker/Database/Command/AbstractDatabase.html", "link": "Windwalker/Database/Command/AbstractDatabase.html#method_getTables", "name": "Windwalker\\Database\\Command\\AbstractDatabase::getTables", "doc": "&quot;Method to get an array of all tables in the database.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractDatabase", "fromLink": "Windwalker/Database/Command/AbstractDatabase.html", "link": "Windwalker/Database/Command/AbstractDatabase.html#method_getTableDetails", "name": "Windwalker\\Database\\Command\\AbstractDatabase::getTableDetails", "doc": "&quot;getTableDetails&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractDatabase", "fromLink": "Windwalker/Database/Command/AbstractDatabase.html", "link": "Windwalker/Database/Command/AbstractDatabase.html#method_getTableDetail", "name": "Windwalker\\Database\\Command\\AbstractDatabase::getTableDetail", "doc": "&quot;getTableDetail&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractDatabase", "fromLink": "Windwalker/Database/Command/AbstractDatabase.html", "link": "Windwalker/Database/Command/AbstractDatabase.html#method_tableExists", "name": "Windwalker\\Database\\Command\\AbstractDatabase::tableExists", "doc": "&quot;tableExists&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractDatabase", "fromLink": "Windwalker/Database/Command/AbstractDatabase.html", "link": "Windwalker/Database/Command/AbstractDatabase.html#method_getName", "name": "Windwalker\\Database\\Command\\AbstractDatabase::getName", "doc": "&quot;Method to get property Table&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractDatabase", "fromLink": "Windwalker/Database/Command/AbstractDatabase.html", "link": "Windwalker/Database/Command/AbstractDatabase.html#method_setName", "name": "Windwalker\\Database\\Command\\AbstractDatabase::setName", "doc": "&quot;Method to set property table&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractDatabase", "fromLink": "Windwalker/Database/Command/AbstractDatabase.html", "link": "Windwalker/Database/Command/AbstractDatabase.html#method_getDriver", "name": "Windwalker\\Database\\Command\\AbstractDatabase::getDriver", "doc": "&quot;Method to get property Db&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractDatabase", "fromLink": "Windwalker/Database/Command/AbstractDatabase.html", "link": "Windwalker/Database/Command/AbstractDatabase.html#method_setDriver", "name": "Windwalker\\Database\\Command\\AbstractDatabase::setDriver", "doc": "&quot;Method to set property db&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractDatabase", "fromLink": "Windwalker/Database/Command/AbstractDatabase.html", "link": "Windwalker/Database/Command/AbstractDatabase.html#method_reset", "name": "Windwalker\\Database\\Command\\AbstractDatabase::reset", "doc": "&quot;resetCache&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Command", "fromLink": "Windwalker/Database/Command.html", "link": "Windwalker/Database/Command/AbstractReader.html", "name": "Windwalker\\Database\\Command\\AbstractReader", "doc": "&quot;Class DatabaseReader&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractReader", "fromLink": "Windwalker/Database/Command/AbstractReader.html", "link": "Windwalker/Database/Command/AbstractReader.html#method___construct", "name": "Windwalker\\Database\\Command\\AbstractReader::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractReader", "fromLink": "Windwalker/Database/Command/AbstractReader.html", "link": "Windwalker/Database/Command/AbstractReader.html#method_setQuery", "name": "Windwalker\\Database\\Command\\AbstractReader::setQuery", "doc": "&quot;setQuery&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractReader", "fromLink": "Windwalker/Database/Command/AbstractReader.html", "link": "Windwalker/Database/Command/AbstractReader.html#method_execute", "name": "Windwalker\\Database\\Command\\AbstractReader::execute", "doc": "&quot;execute&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractReader", "fromLink": "Windwalker/Database/Command/AbstractReader.html", "link": "Windwalker/Database/Command/AbstractReader.html#method_getIterator", "name": "Windwalker\\Database\\Command\\AbstractReader::getIterator", "doc": "&quot;getIterator&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractReader", "fromLink": "Windwalker/Database/Command/AbstractReader.html", "link": "Windwalker/Database/Command/AbstractReader.html#method_loadResult", "name": "Windwalker\\Database\\Command\\AbstractReader::loadResult", "doc": "&quot;Method to get the first field of the first row of the result set from the database query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractReader", "fromLink": "Windwalker/Database/Command/AbstractReader.html", "link": "Windwalker/Database/Command/AbstractReader.html#method_loadColumn", "name": "Windwalker\\Database\\Command\\AbstractReader::loadColumn", "doc": "&quot;Method to get an array of values from the &lt;var&gt;$offset&lt;\/var&gt; field in each row of the result set from\nthe database query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractReader", "fromLink": "Windwalker/Database/Command/AbstractReader.html", "link": "Windwalker/Database/Command/AbstractReader.html#method_loadArray", "name": "Windwalker\\Database\\Command\\AbstractReader::loadArray", "doc": "&quot;Method to get the first row of the result set from the database query as an array.  Columns are indexed\nnumerically so the first column in the result set would be accessible via &lt;var&gt;$row[0]&lt;\/var&gt;, etc.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractReader", "fromLink": "Windwalker/Database/Command/AbstractReader.html", "link": "Windwalker/Database/Command/AbstractReader.html#method_loadArrayList", "name": "Windwalker\\Database\\Command\\AbstractReader::loadArrayList", "doc": "&quot;Method to get an array of the result set rows from the database query where each row is an array.  The array\nof objects can optionally be keyed by a field offset, but defaults to a sequential numeric array.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractReader", "fromLink": "Windwalker/Database/Command/AbstractReader.html", "link": "Windwalker/Database/Command/AbstractReader.html#method_loadAssoc", "name": "Windwalker\\Database\\Command\\AbstractReader::loadAssoc", "doc": "&quot;Method to get the first row of the result set from the database query as an associative array\nof [&#039;field&#039; =&gt; &#039;value&#039;].&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractReader", "fromLink": "Windwalker/Database/Command/AbstractReader.html", "link": "Windwalker/Database/Command/AbstractReader.html#method_loadAssocList", "name": "Windwalker\\Database\\Command\\AbstractReader::loadAssocList", "doc": "&quot;Method to get an array of the result set rows from the database query where each row is an associative array\nof [&#039;field&lt;em&gt;name&#039; =&gt; &#039;row&lt;\/em&gt;value&#039;].  The array of rows can optionally be keyed by a field name, but defaults to\na sequential numeric array.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractReader", "fromLink": "Windwalker/Database/Command/AbstractReader.html", "link": "Windwalker/Database/Command/AbstractReader.html#method_loadObject", "name": "Windwalker\\Database\\Command\\AbstractReader::loadObject", "doc": "&quot;Method to get the first row of the result set from the database query as an object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractReader", "fromLink": "Windwalker/Database/Command/AbstractReader.html", "link": "Windwalker/Database/Command/AbstractReader.html#method_loadObjectList", "name": "Windwalker\\Database\\Command\\AbstractReader::loadObjectList", "doc": "&quot;Method to get an array of the result set rows from the database query where each row is an object.  The array\nof objects can optionally be keyed by a field name, but defaults to a sequential numeric array.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractReader", "fromLink": "Windwalker/Database/Command/AbstractReader.html", "link": "Windwalker/Database/Command/AbstractReader.html#method_count", "name": "Windwalker\\Database\\Command\\AbstractReader::count", "doc": "&quot;count&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractReader", "fromLink": "Windwalker/Database/Command/AbstractReader.html", "link": "Windwalker/Database/Command/AbstractReader.html#method_fetchArray", "name": "Windwalker\\Database\\Command\\AbstractReader::fetchArray", "doc": "&quot;Method to fetch a row from the result set cursor as an array.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractReader", "fromLink": "Windwalker/Database/Command/AbstractReader.html", "link": "Windwalker/Database/Command/AbstractReader.html#method_fetchAssoc", "name": "Windwalker\\Database\\Command\\AbstractReader::fetchAssoc", "doc": "&quot;Method to fetch a row from the result set cursor as an associative array.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractReader", "fromLink": "Windwalker/Database/Command/AbstractReader.html", "link": "Windwalker/Database/Command/AbstractReader.html#method_fetchObject", "name": "Windwalker\\Database\\Command\\AbstractReader::fetchObject", "doc": "&quot;Method to fetch a row from the result set cursor as an object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractReader", "fromLink": "Windwalker/Database/Command/AbstractReader.html", "link": "Windwalker/Database/Command/AbstractReader.html#method_countAffected", "name": "Windwalker\\Database\\Command\\AbstractReader::countAffected", "doc": "&quot;Get the number of affected rows for the previous executed SQL statement.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractReader", "fromLink": "Windwalker/Database/Command/AbstractReader.html", "link": "Windwalker/Database/Command/AbstractReader.html#method_insertId", "name": "Windwalker\\Database\\Command\\AbstractReader::insertId", "doc": "&quot;Method to get the auto-incremented value from the last INSERT statement.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractReader", "fromLink": "Windwalker/Database/Command/AbstractReader.html", "link": "Windwalker/Database/Command/AbstractReader.html#method_freeResult", "name": "Windwalker\\Database\\Command\\AbstractReader::freeResult", "doc": "&quot;freeResult&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractReader", "fromLink": "Windwalker/Database/Command/AbstractReader.html", "link": "Windwalker/Database/Command/AbstractReader.html#method_getDriver", "name": "Windwalker\\Database\\Command\\AbstractReader::getDriver", "doc": "&quot;Method to get property Db&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractReader", "fromLink": "Windwalker/Database/Command/AbstractReader.html", "link": "Windwalker/Database/Command/AbstractReader.html#method_setDriver", "name": "Windwalker\\Database\\Command\\AbstractReader::setDriver", "doc": "&quot;Method to set property db&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractReader", "fromLink": "Windwalker/Database/Command/AbstractReader.html", "link": "Windwalker/Database/Command/AbstractReader.html#method_getCursor", "name": "Windwalker\\Database\\Command\\AbstractReader::getCursor", "doc": "&quot;Method to get property Cursor&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractReader", "fromLink": "Windwalker/Database/Command/AbstractReader.html", "link": "Windwalker/Database/Command/AbstractReader.html#method_setCursor", "name": "Windwalker\\Database\\Command\\AbstractReader::setCursor", "doc": "&quot;Method to set property cursor&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Command", "fromLink": "Windwalker/Database/Command.html", "link": "Windwalker/Database/Command/AbstractTable.html", "name": "Windwalker\\Database\\Command\\AbstractTable", "doc": "&quot;Class DatabaseTable&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTable", "fromLink": "Windwalker/Database/Command/AbstractTable.html", "link": "Windwalker/Database/Command/AbstractTable.html#method___construct", "name": "Windwalker\\Database\\Command\\AbstractTable::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTable", "fromLink": "Windwalker/Database/Command/AbstractTable.html", "link": "Windwalker/Database/Command/AbstractTable.html#method_create", "name": "Windwalker\\Database\\Command\\AbstractTable::create", "doc": "&quot;create&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTable", "fromLink": "Windwalker/Database/Command/AbstractTable.html", "link": "Windwalker/Database/Command/AbstractTable.html#method_update", "name": "Windwalker\\Database\\Command\\AbstractTable::update", "doc": "&quot;update&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTable", "fromLink": "Windwalker/Database/Command/AbstractTable.html", "link": "Windwalker/Database/Command/AbstractTable.html#method_save", "name": "Windwalker\\Database\\Command\\AbstractTable::save", "doc": "&quot;save&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTable", "fromLink": "Windwalker/Database/Command/AbstractTable.html", "link": "Windwalker/Database/Command/AbstractTable.html#method_drop", "name": "Windwalker\\Database\\Command\\AbstractTable::drop", "doc": "&quot;drop&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTable", "fromLink": "Windwalker/Database/Command/AbstractTable.html", "link": "Windwalker/Database/Command/AbstractTable.html#method_exists", "name": "Windwalker\\Database\\Command\\AbstractTable::exists", "doc": "&quot;exists&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTable", "fromLink": "Windwalker/Database/Command/AbstractTable.html", "link": "Windwalker/Database/Command/AbstractTable.html#method_rename", "name": "Windwalker\\Database\\Command\\AbstractTable::rename", "doc": "&quot;rename&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTable", "fromLink": "Windwalker/Database/Command/AbstractTable.html", "link": "Windwalker/Database/Command/AbstractTable.html#method_lock", "name": "Windwalker\\Database\\Command\\AbstractTable::lock", "doc": "&quot;Locks a table in the database.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTable", "fromLink": "Windwalker/Database/Command/AbstractTable.html", "link": "Windwalker/Database/Command/AbstractTable.html#method_unlock", "name": "Windwalker\\Database\\Command\\AbstractTable::unlock", "doc": "&quot;unlock&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTable", "fromLink": "Windwalker/Database/Command/AbstractTable.html", "link": "Windwalker/Database/Command/AbstractTable.html#method_truncate", "name": "Windwalker\\Database\\Command\\AbstractTable::truncate", "doc": "&quot;Method to truncate a table.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTable", "fromLink": "Windwalker/Database/Command/AbstractTable.html", "link": "Windwalker/Database/Command/AbstractTable.html#method_getDetail", "name": "Windwalker\\Database\\Command\\AbstractTable::getDetail", "doc": "&quot;getDetail&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTable", "fromLink": "Windwalker/Database/Command/AbstractTable.html", "link": "Windwalker/Database/Command/AbstractTable.html#method_getColumns", "name": "Windwalker\\Database\\Command\\AbstractTable::getColumns", "doc": "&quot;Get table columns.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTable", "fromLink": "Windwalker/Database/Command/AbstractTable.html", "link": "Windwalker/Database/Command/AbstractTable.html#method_getColumnDetails", "name": "Windwalker\\Database\\Command\\AbstractTable::getColumnDetails", "doc": "&quot;getColumnDetails&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTable", "fromLink": "Windwalker/Database/Command/AbstractTable.html", "link": "Windwalker/Database/Command/AbstractTable.html#method_getColumnDetail", "name": "Windwalker\\Database\\Command\\AbstractTable::getColumnDetail", "doc": "&quot;getColumnDetail&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTable", "fromLink": "Windwalker/Database/Command/AbstractTable.html", "link": "Windwalker/Database/Command/AbstractTable.html#method_hasColumn", "name": "Windwalker\\Database\\Command\\AbstractTable::hasColumn", "doc": "&quot;hasColumn&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTable", "fromLink": "Windwalker/Database/Command/AbstractTable.html", "link": "Windwalker/Database/Command/AbstractTable.html#method_addColumn", "name": "Windwalker\\Database\\Command\\AbstractTable::addColumn", "doc": "&quot;addColumn&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTable", "fromLink": "Windwalker/Database/Command/AbstractTable.html", "link": "Windwalker/Database/Command/AbstractTable.html#method_dropColumn", "name": "Windwalker\\Database\\Command\\AbstractTable::dropColumn", "doc": "&quot;dropColumn&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTable", "fromLink": "Windwalker/Database/Command/AbstractTable.html", "link": "Windwalker/Database/Command/AbstractTable.html#method_modifyColumn", "name": "Windwalker\\Database\\Command\\AbstractTable::modifyColumn", "doc": "&quot;modifyColumn&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTable", "fromLink": "Windwalker/Database/Command/AbstractTable.html", "link": "Windwalker/Database/Command/AbstractTable.html#method_changeColumn", "name": "Windwalker\\Database\\Command\\AbstractTable::changeColumn", "doc": "&quot;changeColumn&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTable", "fromLink": "Windwalker/Database/Command/AbstractTable.html", "link": "Windwalker/Database/Command/AbstractTable.html#method_addIndex", "name": "Windwalker\\Database\\Command\\AbstractTable::addIndex", "doc": "&quot;addIndex&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTable", "fromLink": "Windwalker/Database/Command/AbstractTable.html", "link": "Windwalker/Database/Command/AbstractTable.html#method_dropIndex", "name": "Windwalker\\Database\\Command\\AbstractTable::dropIndex", "doc": "&quot;dropIndex&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTable", "fromLink": "Windwalker/Database/Command/AbstractTable.html", "link": "Windwalker/Database/Command/AbstractTable.html#method_getIndexes", "name": "Windwalker\\Database\\Command\\AbstractTable::getIndexes", "doc": "&quot;getIndexes&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTable", "fromLink": "Windwalker/Database/Command/AbstractTable.html", "link": "Windwalker/Database/Command/AbstractTable.html#method_hasIndex", "name": "Windwalker\\Database\\Command\\AbstractTable::hasIndex", "doc": "&quot;hasIndex&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTable", "fromLink": "Windwalker/Database/Command/AbstractTable.html", "link": "Windwalker/Database/Command/AbstractTable.html#method_getName", "name": "Windwalker\\Database\\Command\\AbstractTable::getName", "doc": "&quot;Method to get property Table&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTable", "fromLink": "Windwalker/Database/Command/AbstractTable.html", "link": "Windwalker/Database/Command/AbstractTable.html#method_setName", "name": "Windwalker\\Database\\Command\\AbstractTable::setName", "doc": "&quot;Method to set property table&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTable", "fromLink": "Windwalker/Database/Command/AbstractTable.html", "link": "Windwalker/Database/Command/AbstractTable.html#method_getDriver", "name": "Windwalker\\Database\\Command\\AbstractTable::getDriver", "doc": "&quot;Method to get property Db&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTable", "fromLink": "Windwalker/Database/Command/AbstractTable.html", "link": "Windwalker/Database/Command/AbstractTable.html#method_setDriver", "name": "Windwalker\\Database\\Command\\AbstractTable::setDriver", "doc": "&quot;Method to set property db&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTable", "fromLink": "Windwalker/Database/Command/AbstractTable.html", "link": "Windwalker/Database/Command/AbstractTable.html#method_getSchema", "name": "Windwalker\\Database\\Command\\AbstractTable::getSchema", "doc": "&quot;getSchema&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTable", "fromLink": "Windwalker/Database/Command/AbstractTable.html", "link": "Windwalker/Database/Command/AbstractTable.html#method_getDatabase", "name": "Windwalker\\Database\\Command\\AbstractTable::getDatabase", "doc": "&quot;Method to get property Database&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTable", "fromLink": "Windwalker/Database/Command/AbstractTable.html", "link": "Windwalker/Database/Command/AbstractTable.html#method_setDatabase", "name": "Windwalker\\Database\\Command\\AbstractTable::setDatabase", "doc": "&quot;Method to set property database&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTable", "fromLink": "Windwalker/Database/Command/AbstractTable.html", "link": "Windwalker/Database/Command/AbstractTable.html#method_getDataType", "name": "Windwalker\\Database\\Command\\AbstractTable::getDataType", "doc": "&quot;getTypeMapper&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTable", "fromLink": "Windwalker/Database/Command/AbstractTable.html", "link": "Windwalker/Database/Command/AbstractTable.html#method_reset", "name": "Windwalker\\Database\\Command\\AbstractTable::reset", "doc": "&quot;reset&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Command", "fromLink": "Windwalker/Database/Command.html", "link": "Windwalker/Database/Command/AbstractTransaction.html", "name": "Windwalker\\Database\\Command\\AbstractTransaction", "doc": "&quot;Class DatabaseTransaction&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTransaction", "fromLink": "Windwalker/Database/Command/AbstractTransaction.html", "link": "Windwalker/Database/Command/AbstractTransaction.html#method___construct", "name": "Windwalker\\Database\\Command\\AbstractTransaction::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTransaction", "fromLink": "Windwalker/Database/Command/AbstractTransaction.html", "link": "Windwalker/Database/Command/AbstractTransaction.html#method_start", "name": "Windwalker\\Database\\Command\\AbstractTransaction::start", "doc": "&quot;start&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTransaction", "fromLink": "Windwalker/Database/Command/AbstractTransaction.html", "link": "Windwalker/Database/Command/AbstractTransaction.html#method_commit", "name": "Windwalker\\Database\\Command\\AbstractTransaction::commit", "doc": "&quot;commit&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTransaction", "fromLink": "Windwalker/Database/Command/AbstractTransaction.html", "link": "Windwalker/Database/Command/AbstractTransaction.html#method_rollback", "name": "Windwalker\\Database\\Command\\AbstractTransaction::rollback", "doc": "&quot;rollback&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTransaction", "fromLink": "Windwalker/Database/Command/AbstractTransaction.html", "link": "Windwalker/Database/Command/AbstractTransaction.html#method_getNested", "name": "Windwalker\\Database\\Command\\AbstractTransaction::getNested", "doc": "&quot;getNested&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTransaction", "fromLink": "Windwalker/Database/Command/AbstractTransaction.html", "link": "Windwalker/Database/Command/AbstractTransaction.html#method_setNested", "name": "Windwalker\\Database\\Command\\AbstractTransaction::setNested", "doc": "&quot;setNested&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTransaction", "fromLink": "Windwalker/Database/Command/AbstractTransaction.html", "link": "Windwalker/Database/Command/AbstractTransaction.html#method_getDriver", "name": "Windwalker\\Database\\Command\\AbstractTransaction::getDriver", "doc": "&quot;Method to get property Db&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractTransaction", "fromLink": "Windwalker/Database/Command/AbstractTransaction.html", "link": "Windwalker/Database/Command/AbstractTransaction.html#method_setDriver", "name": "Windwalker\\Database\\Command\\AbstractTransaction::setDriver", "doc": "&quot;Method to set property db&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Command", "fromLink": "Windwalker/Database/Command.html", "link": "Windwalker/Database/Command/AbstractWriter.html", "name": "Windwalker\\Database\\Command\\AbstractWriter", "doc": "&quot;Class DatabaseWriter&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractWriter", "fromLink": "Windwalker/Database/Command/AbstractWriter.html", "link": "Windwalker/Database/Command/AbstractWriter.html#method___construct", "name": "Windwalker\\Database\\Command\\AbstractWriter::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractWriter", "fromLink": "Windwalker/Database/Command/AbstractWriter.html", "link": "Windwalker/Database/Command/AbstractWriter.html#method_insertOne", "name": "Windwalker\\Database\\Command\\AbstractWriter::insertOne", "doc": "&quot;Inserts a row into a table based on an object&#039;s properties.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractWriter", "fromLink": "Windwalker/Database/Command/AbstractWriter.html", "link": "Windwalker/Database/Command/AbstractWriter.html#method_updateOne", "name": "Windwalker\\Database\\Command\\AbstractWriter::updateOne", "doc": "&quot;Updates a row in a table based on an object&#039;s properties.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractWriter", "fromLink": "Windwalker/Database/Command/AbstractWriter.html", "link": "Windwalker/Database/Command/AbstractWriter.html#method_saveOne", "name": "Windwalker\\Database\\Command\\AbstractWriter::saveOne", "doc": "&quot;save&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractWriter", "fromLink": "Windwalker/Database/Command/AbstractWriter.html", "link": "Windwalker/Database/Command/AbstractWriter.html#method_insertMultiple", "name": "Windwalker\\Database\\Command\\AbstractWriter::insertMultiple", "doc": "&quot;insertMultiple&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractWriter", "fromLink": "Windwalker/Database/Command/AbstractWriter.html", "link": "Windwalker/Database/Command/AbstractWriter.html#method_updateMultiple", "name": "Windwalker\\Database\\Command\\AbstractWriter::updateMultiple", "doc": "&quot;updateMultiple&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractWriter", "fromLink": "Windwalker/Database/Command/AbstractWriter.html", "link": "Windwalker/Database/Command/AbstractWriter.html#method_saveMultiple", "name": "Windwalker\\Database\\Command\\AbstractWriter::saveMultiple", "doc": "&quot;saveMultiple&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractWriter", "fromLink": "Windwalker/Database/Command/AbstractWriter.html", "link": "Windwalker/Database/Command/AbstractWriter.html#method_updateBatch", "name": "Windwalker\\Database\\Command\\AbstractWriter::updateBatch", "doc": "&quot;Batch update some data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractWriter", "fromLink": "Windwalker/Database/Command/AbstractWriter.html", "link": "Windwalker/Database/Command/AbstractWriter.html#method_delete", "name": "Windwalker\\Database\\Command\\AbstractWriter::delete", "doc": "&quot;delete&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractWriter", "fromLink": "Windwalker/Database/Command/AbstractWriter.html", "link": "Windwalker/Database/Command/AbstractWriter.html#method_countAffected", "name": "Windwalker\\Database\\Command\\AbstractWriter::countAffected", "doc": "&quot;Get the number of affected rows for the previous executed SQL statement.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractWriter", "fromLink": "Windwalker/Database/Command/AbstractWriter.html", "link": "Windwalker/Database/Command/AbstractWriter.html#method_insertId", "name": "Windwalker\\Database\\Command\\AbstractWriter::insertId", "doc": "&quot;Method to get the auto-incremented value from the last INSERT statement.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractWriter", "fromLink": "Windwalker/Database/Command/AbstractWriter.html", "link": "Windwalker/Database/Command/AbstractWriter.html#method_execute", "name": "Windwalker\\Database\\Command\\AbstractWriter::execute", "doc": "&quot;execute&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractWriter", "fromLink": "Windwalker/Database/Command/AbstractWriter.html", "link": "Windwalker/Database/Command/AbstractWriter.html#method_getDriver", "name": "Windwalker\\Database\\Command\\AbstractWriter::getDriver", "doc": "&quot;Method to get property Db&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractWriter", "fromLink": "Windwalker/Database/Command/AbstractWriter.html", "link": "Windwalker/Database/Command/AbstractWriter.html#method_setDriver", "name": "Windwalker\\Database\\Command\\AbstractWriter::setDriver", "doc": "&quot;Method to set property db&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractWriter", "fromLink": "Windwalker/Database/Command/AbstractWriter.html", "link": "Windwalker/Database/Command/AbstractWriter.html#method_getCursor", "name": "Windwalker\\Database\\Command\\AbstractWriter::getCursor", "doc": "&quot;Method to get property Cursor&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Command\\AbstractWriter", "fromLink": "Windwalker/Database/Command/AbstractWriter.html", "link": "Windwalker/Database/Command/AbstractWriter.html#method_setCursor", "name": "Windwalker\\Database\\Command\\AbstractWriter::setCursor", "doc": "&quot;Method to set property cursor&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database", "fromLink": "Windwalker/Database.html", "link": "Windwalker/Database/DatabaseFactory.html", "name": "Windwalker\\Database\\DatabaseFactory", "doc": "&quot;Class DatabaseFactory&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\DatabaseFactory", "fromLink": "Windwalker/Database/DatabaseFactory.html", "link": "Windwalker/Database/DatabaseFactory.html#method_getDbo", "name": "Windwalker\\Database\\DatabaseFactory::getDbo", "doc": "&quot;getDbo&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\DatabaseFactory", "fromLink": "Windwalker/Database/DatabaseFactory.html", "link": "Windwalker/Database/DatabaseFactory.html#method_setDbo", "name": "Windwalker\\Database\\DatabaseFactory::setDbo", "doc": "&quot;setDbo&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\DatabaseFactory", "fromLink": "Windwalker/Database/DatabaseFactory.html", "link": "Windwalker/Database/DatabaseFactory.html#method_setDefaultDbo", "name": "Windwalker\\Database\\DatabaseFactory::setDefaultDbo", "doc": "&quot;setDb&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\DatabaseFactory", "fromLink": "Windwalker/Database/DatabaseFactory.html", "link": "Windwalker/Database/DatabaseFactory.html#method_createDbo", "name": "Windwalker\\Database\\DatabaseFactory::createDbo", "doc": "&quot;createDbo&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database", "fromLink": "Windwalker/Database.html", "link": "Windwalker/Database/DatabaseHelper.html", "name": "Windwalker\\Database\\DatabaseHelper", "doc": "&quot;The DatabaseHelper class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\DatabaseHelper", "fromLink": "Windwalker/Database/DatabaseHelper.html", "link": "Windwalker/Database/DatabaseHelper.html#method_batchQuery", "name": "Windwalker\\Database\\DatabaseHelper::batchQuery", "doc": "&quot;batchQuery&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Driver", "fromLink": "Windwalker/Database/Driver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "doc": "&quot;Class DatabaseDriver&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method___construct", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_getConnection", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::getConnection", "doc": "&quot;getConnection&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_setConnection", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::setConnection", "doc": "&quot;setConnection&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_execute", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::execute", "doc": "&quot;Execute the SQL statement.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_connect", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::connect", "doc": "&quot;connect&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_disconnect", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::disconnect", "doc": "&quot;Disconnects the database.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_select", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::select", "doc": "&quot;Select a database for use.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_getVersion", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::getVersion", "doc": "&quot;Get the version of the database connector&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_freeResult", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::freeResult", "doc": "&quot;Method to free up the memory used for the result set.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_listDatabases", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::listDatabases", "doc": "&quot;getDatabaseList&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_getCursor", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::getCursor", "doc": "&quot;getCursor&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_getQuery", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::getQuery", "doc": "&quot;Get the current query object or a new Query object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_getTable", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::getTable", "doc": "&quot;getTable&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_getDatabase", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::getDatabase", "doc": "&quot;getTable&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_getReader", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::getReader", "doc": "&quot;getReader&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_getWriter", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::getWriter", "doc": "&quot;getWriter&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_getTransaction", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::getTransaction", "doc": "&quot;getWriter&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_getIterator", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::getIterator", "doc": "&quot;getIterator&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_getCurrentDatabase", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::getCurrentDatabase", "doc": "&quot;Gets the name of the database used by this conneciton.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_getPrefix", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::getPrefix", "doc": "&quot;Get the common table prefix for the database driver.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_replacePrefix", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::replacePrefix", "doc": "&quot;This function replaces a string identifier &lt;var&gt;$prefix&lt;\/var&gt; with the string held is the\n&lt;var&gt;tablePrefix&lt;\/var&gt; class variable.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_splitSql", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::splitSql", "doc": "&quot;Splits a string of multiple queries into an array of individual queries.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_setDebug", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::setDebug", "doc": "&quot;Sets the database debugging state for the driver.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_setQuery", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::setQuery", "doc": "&quot;Sets the SQL statement string for later execution.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_loadAll", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::loadAll", "doc": "&quot;loadAll&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_loadOne", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::loadOne", "doc": "&quot;loadOne&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_loadResult", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::loadResult", "doc": "&quot;loadResult&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_loadColumn", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::loadColumn", "doc": "&quot;loadColumn&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_quoteName", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::quoteName", "doc": "&quot;quoteName&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_qn", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::qn", "doc": "&quot;qn&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_quote", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::quote", "doc": "&quot;quote&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_q", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::q", "doc": "&quot;q&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_escape", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::escape", "doc": "&quot;escape&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_e", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::e", "doc": "&quot;e&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_getName", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::getName", "doc": "&quot;Method to get property Name&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_getOptions", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::getOptions", "doc": "&quot;Method to get property Options&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_setOptions", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::setOptions", "doc": "&quot;Method to set property options&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_setDatabaseName", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::setDatabaseName", "doc": "&quot;Method to set property database&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_addMiddleware", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::addMiddleware", "doc": "&quot;addMiddleware&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_getMiddlewares", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::getMiddlewares", "doc": "&quot;Method to get property Middlewares&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_resetMiddlewares", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::resetMiddlewares", "doc": "&quot;Method to set property middlewares&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver", "fromLink": "Windwalker/Database/Driver/AbstractDatabaseDriver.html", "link": "Windwalker/Database/Driver/AbstractDatabaseDriver.html#method_getLastQuery", "name": "Windwalker\\Database\\Driver\\AbstractDatabaseDriver::getLastQuery", "doc": "&quot;Method to get property LastQuery&quot;"},
            
            {"type": "Trait", "fromName": "Windwalker\\Database\\Driver", "fromLink": "Windwalker/Database/Driver.html", "link": "Windwalker/Database/Driver/DatabaseAwareTrait.html", "name": "Windwalker\\Database\\Driver\\DatabaseAwareTrait", "doc": "&quot;DatabseAwareTrait&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\DatabaseAwareTrait", "fromLink": "Windwalker/Database/Driver/DatabaseAwareTrait.html", "link": "Windwalker/Database/Driver/DatabaseAwareTrait.html#method___construct", "name": "Windwalker\\Database\\Driver\\DatabaseAwareTrait::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\DatabaseAwareTrait", "fromLink": "Windwalker/Database/Driver/DatabaseAwareTrait.html", "link": "Windwalker/Database/Driver/DatabaseAwareTrait.html#method_getDb", "name": "Windwalker\\Database\\Driver\\DatabaseAwareTrait::getDb", "doc": "&quot;getDb&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\DatabaseAwareTrait", "fromLink": "Windwalker/Database/Driver/DatabaseAwareTrait.html", "link": "Windwalker/Database/Driver/DatabaseAwareTrait.html#method_setDb", "name": "Windwalker\\Database\\Driver\\DatabaseAwareTrait::setDb", "doc": "&quot;setDb&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Driver", "fromLink": "Windwalker/Database/Driver.html", "link": "Windwalker/Database/Driver/DatabaseDriverInterface.html", "name": "Windwalker\\Database\\Driver\\DatabaseDriverInterface", "doc": "&quot;The DatabaseDriverInterface class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\DatabaseDriverInterface", "fromLink": "Windwalker/Database/Driver/DatabaseDriverInterface.html", "link": "Windwalker/Database/Driver/DatabaseDriverInterface.html#method_isSupported", "name": "Windwalker\\Database\\Driver\\DatabaseDriverInterface::isSupported", "doc": "&quot;Is this driver supported.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Driver\\Mysql", "fromLink": "Windwalker/Database/Driver/Mysql.html", "link": "Windwalker/Database/Driver/Mysql/MysqlDatabase.html", "name": "Windwalker\\Database\\Driver\\Mysql\\MysqlDatabase", "doc": "&quot;Class MysqlDatabase&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Mysql\\MysqlDatabase", "fromLink": "Windwalker/Database/Driver/Mysql/MysqlDatabase.html", "link": "Windwalker/Database/Driver/Mysql/MysqlDatabase.html#method_select", "name": "Windwalker\\Database\\Driver\\Mysql\\MysqlDatabase::select", "doc": "&quot;select&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Mysql\\MysqlDatabase", "fromLink": "Windwalker/Database/Driver/Mysql/MysqlDatabase.html", "link": "Windwalker/Database/Driver/Mysql/MysqlDatabase.html#method_create", "name": "Windwalker\\Database\\Driver\\Mysql\\MysqlDatabase::create", "doc": "&quot;createDatabase&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Mysql\\MysqlDatabase", "fromLink": "Windwalker/Database/Driver/Mysql/MysqlDatabase.html", "link": "Windwalker/Database/Driver/Mysql/MysqlDatabase.html#method_drop", "name": "Windwalker\\Database\\Driver\\Mysql\\MysqlDatabase::drop", "doc": "&quot;dropDatabase&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Mysql\\MysqlDatabase", "fromLink": "Windwalker/Database/Driver/Mysql/MysqlDatabase.html", "link": "Windwalker/Database/Driver/Mysql/MysqlDatabase.html#method_rename", "name": "Windwalker\\Database\\Driver\\Mysql\\MysqlDatabase::rename", "doc": "&quot;renameDatabase&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Driver\\Mysql", "fromLink": "Windwalker/Database/Driver/Mysql.html", "link": "Windwalker/Database/Driver/Mysql/MysqlDriver.html", "name": "Windwalker\\Database\\Driver\\Mysql\\MysqlDriver", "doc": "&quot;Class MysqlDriver&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Mysql\\MysqlDriver", "fromLink": "Windwalker/Database/Driver/Mysql/MysqlDriver.html", "link": "Windwalker/Database/Driver/Mysql/MysqlDriver.html#method_isSupported", "name": "Windwalker\\Database\\Driver\\Mysql\\MysqlDriver::isSupported", "doc": "&quot;Is this driver supported.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Mysql\\MysqlDriver", "fromLink": "Windwalker/Database/Driver/Mysql/MysqlDriver.html", "link": "Windwalker/Database/Driver/Mysql/MysqlDriver.html#method___construct", "name": "Windwalker\\Database\\Driver\\Mysql\\MysqlDriver::__construct", "doc": "&quot;Constructor.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Driver\\Mysql", "fromLink": "Windwalker/Database/Driver/Mysql.html", "link": "Windwalker/Database/Driver/Mysql/MysqlReader.html", "name": "Windwalker\\Database\\Driver\\Mysql\\MysqlReader", "doc": "&quot;Class MysqlReader&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Database\\Driver\\Mysql", "fromLink": "Windwalker/Database/Driver/Mysql.html", "link": "Windwalker/Database/Driver/Mysql/MysqlTable.html", "name": "Windwalker\\Database\\Driver\\Mysql\\MysqlTable", "doc": "&quot;Class MysqlTable&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Mysql\\MysqlTable", "fromLink": "Windwalker/Database/Driver/Mysql/MysqlTable.html", "link": "Windwalker/Database/Driver/Mysql/MysqlTable.html#method_create", "name": "Windwalker\\Database\\Driver\\Mysql\\MysqlTable::create", "doc": "&quot;create&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Mysql\\MysqlTable", "fromLink": "Windwalker/Database/Driver/Mysql/MysqlTable.html", "link": "Windwalker/Database/Driver/Mysql/MysqlTable.html#method_addColumn", "name": "Windwalker\\Database\\Driver\\Mysql\\MysqlTable::addColumn", "doc": "&quot;addColumn&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Mysql\\MysqlTable", "fromLink": "Windwalker/Database/Driver/Mysql/MysqlTable.html", "link": "Windwalker/Database/Driver/Mysql/MysqlTable.html#method_modifyColumn", "name": "Windwalker\\Database\\Driver\\Mysql\\MysqlTable::modifyColumn", "doc": "&quot;modifyColumn&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Mysql\\MysqlTable", "fromLink": "Windwalker/Database/Driver/Mysql/MysqlTable.html", "link": "Windwalker/Database/Driver/Mysql/MysqlTable.html#method_changeColumn", "name": "Windwalker\\Database\\Driver\\Mysql\\MysqlTable::changeColumn", "doc": "&quot;changeColumn&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Mysql\\MysqlTable", "fromLink": "Windwalker/Database/Driver/Mysql/MysqlTable.html", "link": "Windwalker/Database/Driver/Mysql/MysqlTable.html#method_addIndex", "name": "Windwalker\\Database\\Driver\\Mysql\\MysqlTable::addIndex", "doc": "&quot;addIndex&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Mysql\\MysqlTable", "fromLink": "Windwalker/Database/Driver/Mysql/MysqlTable.html", "link": "Windwalker/Database/Driver/Mysql/MysqlTable.html#method_dropIndex", "name": "Windwalker\\Database\\Driver\\Mysql\\MysqlTable::dropIndex", "doc": "&quot;dropIndex&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Mysql\\MysqlTable", "fromLink": "Windwalker/Database/Driver/Mysql/MysqlTable.html", "link": "Windwalker/Database/Driver/Mysql/MysqlTable.html#method_rename", "name": "Windwalker\\Database\\Driver\\Mysql\\MysqlTable::rename", "doc": "&quot;rename&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Mysql\\MysqlTable", "fromLink": "Windwalker/Database/Driver/Mysql/MysqlTable.html", "link": "Windwalker/Database/Driver/Mysql/MysqlTable.html#method_getColumnDetails", "name": "Windwalker\\Database\\Driver\\Mysql\\MysqlTable::getColumnDetails", "doc": "&quot;getColumnDetails&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Mysql\\MysqlTable", "fromLink": "Windwalker/Database/Driver/Mysql/MysqlTable.html", "link": "Windwalker/Database/Driver/Mysql/MysqlTable.html#method_getIndexes", "name": "Windwalker\\Database\\Driver\\Mysql\\MysqlTable::getIndexes", "doc": "&quot;getIndexes&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Driver\\Mysql", "fromLink": "Windwalker/Database/Driver/Mysql.html", "link": "Windwalker/Database/Driver/Mysql/MysqlTransaction.html", "name": "Windwalker\\Database\\Driver\\Mysql\\MysqlTransaction", "doc": "&quot;Class MysqlTransaction&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Mysql\\MysqlTransaction", "fromLink": "Windwalker/Database/Driver/Mysql/MysqlTransaction.html", "link": "Windwalker/Database/Driver/Mysql/MysqlTransaction.html#method_start", "name": "Windwalker\\Database\\Driver\\Mysql\\MysqlTransaction::start", "doc": "&quot;start&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Mysql\\MysqlTransaction", "fromLink": "Windwalker/Database/Driver/Mysql/MysqlTransaction.html", "link": "Windwalker/Database/Driver/Mysql/MysqlTransaction.html#method_commit", "name": "Windwalker\\Database\\Driver\\Mysql\\MysqlTransaction::commit", "doc": "&quot;commit&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Mysql\\MysqlTransaction", "fromLink": "Windwalker/Database/Driver/Mysql/MysqlTransaction.html", "link": "Windwalker/Database/Driver/Mysql/MysqlTransaction.html#method_rollback", "name": "Windwalker\\Database\\Driver\\Mysql\\MysqlTransaction::rollback", "doc": "&quot;rollback&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Driver\\Mysql", "fromLink": "Windwalker/Database/Driver/Mysql.html", "link": "Windwalker/Database/Driver/Mysql/MysqlType.html", "name": "Windwalker\\Database\\Driver\\Mysql\\MysqlType", "doc": "&quot;The MysqlType class.&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Database\\Driver\\Mysql", "fromLink": "Windwalker/Database/Driver/Mysql.html", "link": "Windwalker/Database/Driver/Mysql/MysqlWriter.html", "name": "Windwalker\\Database\\Driver\\Mysql\\MysqlWriter", "doc": "&quot;Class MysqlWriter&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Database\\Driver\\Pdo", "fromLink": "Windwalker/Database/Driver/Pdo.html", "link": "Windwalker/Database/Driver/Pdo/PdoDriver.html", "name": "Windwalker\\Database\\Driver\\Pdo\\PdoDriver", "doc": "&quot;Class PdoDriver&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Pdo\\PdoDriver", "fromLink": "Windwalker/Database/Driver/Pdo/PdoDriver.html", "link": "Windwalker/Database/Driver/Pdo/PdoDriver.html#method_isSupported", "name": "Windwalker\\Database\\Driver\\Pdo\\PdoDriver::isSupported", "doc": "&quot;Is this driver supported.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Pdo\\PdoDriver", "fromLink": "Windwalker/Database/Driver/Pdo/PdoDriver.html", "link": "Windwalker/Database/Driver/Pdo/PdoDriver.html#method___construct", "name": "Windwalker\\Database\\Driver\\Pdo\\PdoDriver::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Pdo\\PdoDriver", "fromLink": "Windwalker/Database/Driver/Pdo/PdoDriver.html", "link": "Windwalker/Database/Driver/Pdo/PdoDriver.html#method_connect", "name": "Windwalker\\Database\\Driver\\Pdo\\PdoDriver::connect", "doc": "&quot;connect&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Pdo\\PdoDriver", "fromLink": "Windwalker/Database/Driver/Pdo/PdoDriver.html", "link": "Windwalker/Database/Driver/Pdo/PdoDriver.html#method_disconnect", "name": "Windwalker\\Database\\Driver\\Pdo\\PdoDriver::disconnect", "doc": "&quot;Disconnects the database.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Pdo\\PdoDriver", "fromLink": "Windwalker/Database/Driver/Pdo/PdoDriver.html", "link": "Windwalker/Database/Driver/Pdo/PdoDriver.html#method_getOption", "name": "Windwalker\\Database\\Driver\\Pdo\\PdoDriver::getOption", "doc": "&quot;Retrieve a PDO database connection attribute\nhttp:\/\/www.php.net\/manual\/en\/pdo.getattribute.php&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Pdo\\PdoDriver", "fromLink": "Windwalker/Database/Driver/Pdo/PdoDriver.html", "link": "Windwalker/Database/Driver/Pdo/PdoDriver.html#method_setOption", "name": "Windwalker\\Database\\Driver\\Pdo\\PdoDriver::setOption", "doc": "&quot;Sets an attribute on the PDO database handle.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Pdo\\PdoDriver", "fromLink": "Windwalker/Database/Driver/Pdo/PdoDriver.html", "link": "Windwalker/Database/Driver/Pdo/PdoDriver.html#method_getVersion", "name": "Windwalker\\Database\\Driver\\Pdo\\PdoDriver::getVersion", "doc": "&quot;Get the version of the database connector&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Pdo\\PdoDriver", "fromLink": "Windwalker/Database/Driver/Pdo/PdoDriver.html", "link": "Windwalker/Database/Driver/Pdo/PdoDriver.html#method_select", "name": "Windwalker\\Database\\Driver\\Pdo\\PdoDriver::select", "doc": "&quot;Select a database for use.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Pdo\\PdoDriver", "fromLink": "Windwalker/Database/Driver/Pdo/PdoDriver.html", "link": "Windwalker/Database/Driver/Pdo/PdoDriver.html#method_setQuery", "name": "Windwalker\\Database\\Driver\\Pdo\\PdoDriver::setQuery", "doc": "&quot;Sets the SQL statement string for later execution.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Pdo\\PdoDriver", "fromLink": "Windwalker/Database/Driver/Pdo/PdoDriver.html", "link": "Windwalker/Database/Driver/Pdo/PdoDriver.html#method_doExecute", "name": "Windwalker\\Database\\Driver\\Pdo\\PdoDriver::doExecute", "doc": "&quot;Execute the SQL statement.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Pdo\\PdoDriver", "fromLink": "Windwalker/Database/Driver/Pdo/PdoDriver.html", "link": "Windwalker/Database/Driver/Pdo/PdoDriver.html#method_freeResult", "name": "Windwalker\\Database\\Driver\\Pdo\\PdoDriver::freeResult", "doc": "&quot;Method to free up the memory used for the result set.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Pdo\\PdoDriver", "fromLink": "Windwalker/Database/Driver/Pdo/PdoDriver.html", "link": "Windwalker/Database/Driver/Pdo/PdoDriver.html#method_getQuery", "name": "Windwalker\\Database\\Driver\\Pdo\\PdoDriver::getQuery", "doc": "&quot;Get the current query object or a new Query object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Pdo\\PdoDriver", "fromLink": "Windwalker/Database/Driver/Pdo/PdoDriver.html", "link": "Windwalker/Database/Driver/Pdo/PdoDriver.html#method_listDatabases", "name": "Windwalker\\Database\\Driver\\Pdo\\PdoDriver::listDatabases", "doc": "&quot;getDatabaseList&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Driver\\Pdo", "fromLink": "Windwalker/Database/Driver/Pdo.html", "link": "Windwalker/Database/Driver/Pdo/PdoHelper.html", "name": "Windwalker\\Database\\Driver\\Pdo\\PdoHelper", "doc": "&quot;Class PdoHelper&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Pdo\\PdoHelper", "fromLink": "Windwalker/Database/Driver/Pdo/PdoHelper.html", "link": "Windwalker/Database/Driver/Pdo/PdoHelper.html#method_extractDsn", "name": "Windwalker\\Database\\Driver\\Pdo\\PdoHelper::extractDsn", "doc": "&quot;extractDsn&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Pdo\\PdoHelper", "fromLink": "Windwalker/Database/Driver/Pdo/PdoHelper.html", "link": "Windwalker/Database/Driver/Pdo/PdoHelper.html#method_getDsn", "name": "Windwalker\\Database\\Driver\\Pdo\\PdoHelper::getDsn", "doc": "&quot;getDsn&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Driver\\Pdo", "fromLink": "Windwalker/Database/Driver/Pdo.html", "link": "Windwalker/Database/Driver/Pdo/PdoIterator.html", "name": "Windwalker\\Database\\Driver\\Pdo\\PdoIterator", "doc": "&quot;The PdoIterator class.&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Database\\Driver\\Pdo", "fromLink": "Windwalker/Database/Driver/Pdo.html", "link": "Windwalker/Database/Driver/Pdo/PdoReader.html", "name": "Windwalker\\Database\\Driver\\Pdo\\PdoReader", "doc": "&quot;Class PdoReader&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Pdo\\PdoReader", "fromLink": "Windwalker/Database/Driver/Pdo/PdoReader.html", "link": "Windwalker/Database/Driver/Pdo/PdoReader.html#method_fetchArray", "name": "Windwalker\\Database\\Driver\\Pdo\\PdoReader::fetchArray", "doc": "&quot;Method to fetch a row from the result set cursor as an array.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Pdo\\PdoReader", "fromLink": "Windwalker/Database/Driver/Pdo/PdoReader.html", "link": "Windwalker/Database/Driver/Pdo/PdoReader.html#method_fetchAssoc", "name": "Windwalker\\Database\\Driver\\Pdo\\PdoReader::fetchAssoc", "doc": "&quot;Method to fetch a row from the result set cursor as an associative array.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Pdo\\PdoReader", "fromLink": "Windwalker/Database/Driver/Pdo/PdoReader.html", "link": "Windwalker/Database/Driver/Pdo/PdoReader.html#method_fetchObject", "name": "Windwalker\\Database\\Driver\\Pdo\\PdoReader::fetchObject", "doc": "&quot;Method to fetch a row from the result set cursor as an object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Pdo\\PdoReader", "fromLink": "Windwalker/Database/Driver/Pdo/PdoReader.html", "link": "Windwalker/Database/Driver/Pdo/PdoReader.html#method_fetch", "name": "Windwalker\\Database\\Driver\\Pdo\\PdoReader::fetch", "doc": "&quot;fetch&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Pdo\\PdoReader", "fromLink": "Windwalker/Database/Driver/Pdo/PdoReader.html", "link": "Windwalker/Database/Driver/Pdo/PdoReader.html#method_fetchAll", "name": "Windwalker\\Database\\Driver\\Pdo\\PdoReader::fetchAll", "doc": "&quot;fetchAll&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Pdo\\PdoReader", "fromLink": "Windwalker/Database/Driver/Pdo/PdoReader.html", "link": "Windwalker/Database/Driver/Pdo/PdoReader.html#method_count", "name": "Windwalker\\Database\\Driver\\Pdo\\PdoReader::count", "doc": "&quot;count&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Pdo\\PdoReader", "fromLink": "Windwalker/Database/Driver/Pdo/PdoReader.html", "link": "Windwalker/Database/Driver/Pdo/PdoReader.html#method_countAffected", "name": "Windwalker\\Database\\Driver\\Pdo\\PdoReader::countAffected", "doc": "&quot;Get the number of affected rows for the previous executed SQL statement.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Pdo\\PdoReader", "fromLink": "Windwalker/Database/Driver/Pdo/PdoReader.html", "link": "Windwalker/Database/Driver/Pdo/PdoReader.html#method_insertId", "name": "Windwalker\\Database\\Driver\\Pdo\\PdoReader::insertId", "doc": "&quot;Method to get the auto-incremented value from the last INSERT statement.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Pdo\\PdoReader", "fromLink": "Windwalker/Database/Driver/Pdo/PdoReader.html", "link": "Windwalker/Database/Driver/Pdo/PdoReader.html#method_getCursor", "name": "Windwalker\\Database\\Driver\\Pdo\\PdoReader::getCursor", "doc": "&quot;Method to get property Cursor&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Driver\\Pdo", "fromLink": "Windwalker/Database/Driver/Pdo.html", "link": "Windwalker/Database/Driver/Pdo/PdoTransaction.html", "name": "Windwalker\\Database\\Driver\\Pdo\\PdoTransaction", "doc": "&quot;Class PdoTransaction&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Pdo\\PdoTransaction", "fromLink": "Windwalker/Database/Driver/Pdo/PdoTransaction.html", "link": "Windwalker/Database/Driver/Pdo/PdoTransaction.html#method_start", "name": "Windwalker\\Database\\Driver\\Pdo\\PdoTransaction::start", "doc": "&quot;start&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Pdo\\PdoTransaction", "fromLink": "Windwalker/Database/Driver/Pdo/PdoTransaction.html", "link": "Windwalker/Database/Driver/Pdo/PdoTransaction.html#method_commit", "name": "Windwalker\\Database\\Driver\\Pdo\\PdoTransaction::commit", "doc": "&quot;commit&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Pdo\\PdoTransaction", "fromLink": "Windwalker/Database/Driver/Pdo/PdoTransaction.html", "link": "Windwalker/Database/Driver/Pdo/PdoTransaction.html#method_rollback", "name": "Windwalker\\Database\\Driver\\Pdo\\PdoTransaction::rollback", "doc": "&quot;rollback&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Driver\\Pdo", "fromLink": "Windwalker/Database/Driver/Pdo.html", "link": "Windwalker/Database/Driver/Pdo/PdoWriter.html", "name": "Windwalker\\Database\\Driver\\Pdo\\PdoWriter", "doc": "&quot;Class PdoWriter&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Database\\Driver\\Postgresql", "fromLink": "Windwalker/Database/Driver/Postgresql.html", "link": "Windwalker/Database/Driver/Postgresql/PostgresqlDatabase.html", "name": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlDatabase", "doc": "&quot;Class PostgresqlDatabase&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlDatabase", "fromLink": "Windwalker/Database/Driver/Postgresql/PostgresqlDatabase.html", "link": "Windwalker/Database/Driver/Postgresql/PostgresqlDatabase.html#method_select", "name": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlDatabase::select", "doc": "&quot;select&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlDatabase", "fromLink": "Windwalker/Database/Driver/Postgresql/PostgresqlDatabase.html", "link": "Windwalker/Database/Driver/Postgresql/PostgresqlDatabase.html#method_create", "name": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlDatabase::create", "doc": "&quot;createDatabase&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlDatabase", "fromLink": "Windwalker/Database/Driver/Postgresql/PostgresqlDatabase.html", "link": "Windwalker/Database/Driver/Postgresql/PostgresqlDatabase.html#method_drop", "name": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlDatabase::drop", "doc": "&quot;dropDatabase&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlDatabase", "fromLink": "Windwalker/Database/Driver/Postgresql/PostgresqlDatabase.html", "link": "Windwalker/Database/Driver/Postgresql/PostgresqlDatabase.html#method_rename", "name": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlDatabase::rename", "doc": "&quot;renameDatabase&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Driver\\Postgresql", "fromLink": "Windwalker/Database/Driver/Postgresql.html", "link": "Windwalker/Database/Driver/Postgresql/PostgresqlDriver.html", "name": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlDriver", "doc": "&quot;The PostgresqlDriver class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlDriver", "fromLink": "Windwalker/Database/Driver/Postgresql/PostgresqlDriver.html", "link": "Windwalker/Database/Driver/Postgresql/PostgresqlDriver.html#method_isSupported", "name": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlDriver::isSupported", "doc": "&quot;Is this driver supported.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlDriver", "fromLink": "Windwalker/Database/Driver/Postgresql/PostgresqlDriver.html", "link": "Windwalker/Database/Driver/Postgresql/PostgresqlDriver.html#method___construct", "name": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlDriver::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlDriver", "fromLink": "Windwalker/Database/Driver/Postgresql/PostgresqlDriver.html", "link": "Windwalker/Database/Driver/Postgresql/PostgresqlDriver.html#method_replacePrefix", "name": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlDriver::replacePrefix", "doc": "&quot;This function replaces a string identifier &lt;var&gt;$prefix&lt;\/var&gt; with the string held is the\n&lt;var&gt;tablePrefix&lt;\/var&gt; class variable.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Driver\\Postgresql", "fromLink": "Windwalker/Database/Driver/Postgresql.html", "link": "Windwalker/Database/Driver/Postgresql/PostgresqlReader.html", "name": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlReader", "doc": "&quot;Class PostgresqlReader&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlReader", "fromLink": "Windwalker/Database/Driver/Postgresql/PostgresqlReader.html", "link": "Windwalker/Database/Driver/Postgresql/PostgresqlReader.html#method_insertId", "name": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlReader::insertId", "doc": "&quot;Method to get the auto-incremented value from the last INSERT statement.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Driver\\Postgresql", "fromLink": "Windwalker/Database/Driver/Postgresql.html", "link": "Windwalker/Database/Driver/Postgresql/PostgresqlTable.html", "name": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlTable", "doc": "&quot;Class PostgresqlTable&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlTable", "fromLink": "Windwalker/Database/Driver/Postgresql/PostgresqlTable.html", "link": "Windwalker/Database/Driver/Postgresql/PostgresqlTable.html#method_create", "name": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlTable::create", "doc": "&quot;create&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlTable", "fromLink": "Windwalker/Database/Driver/Postgresql/PostgresqlTable.html", "link": "Windwalker/Database/Driver/Postgresql/PostgresqlTable.html#method_addColumn", "name": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlTable::addColumn", "doc": "&quot;addColumn&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlTable", "fromLink": "Windwalker/Database/Driver/Postgresql/PostgresqlTable.html", "link": "Windwalker/Database/Driver/Postgresql/PostgresqlTable.html#method_modifyColumn", "name": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlTable::modifyColumn", "doc": "&quot;modifyColumn&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlTable", "fromLink": "Windwalker/Database/Driver/Postgresql/PostgresqlTable.html", "link": "Windwalker/Database/Driver/Postgresql/PostgresqlTable.html#method_changeColumn", "name": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlTable::changeColumn", "doc": "&quot;changeColumn&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlTable", "fromLink": "Windwalker/Database/Driver/Postgresql/PostgresqlTable.html", "link": "Windwalker/Database/Driver/Postgresql/PostgresqlTable.html#method_addIndex", "name": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlTable::addIndex", "doc": "&quot;addIndex&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlTable", "fromLink": "Windwalker/Database/Driver/Postgresql/PostgresqlTable.html", "link": "Windwalker/Database/Driver/Postgresql/PostgresqlTable.html#method_dropIndex", "name": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlTable::dropIndex", "doc": "&quot;dropIndex&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlTable", "fromLink": "Windwalker/Database/Driver/Postgresql/PostgresqlTable.html", "link": "Windwalker/Database/Driver/Postgresql/PostgresqlTable.html#method_rename", "name": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlTable::rename", "doc": "&quot;rename&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlTable", "fromLink": "Windwalker/Database/Driver/Postgresql/PostgresqlTable.html", "link": "Windwalker/Database/Driver/Postgresql/PostgresqlTable.html#method_getColumnDetails", "name": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlTable::getColumnDetails", "doc": "&quot;getColumnDetails&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlTable", "fromLink": "Windwalker/Database/Driver/Postgresql/PostgresqlTable.html", "link": "Windwalker/Database/Driver/Postgresql/PostgresqlTable.html#method_getIndexes", "name": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlTable::getIndexes", "doc": "&quot;getIndexes&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlTable", "fromLink": "Windwalker/Database/Driver/Postgresql/PostgresqlTable.html", "link": "Windwalker/Database/Driver/Postgresql/PostgresqlTable.html#method_getTableSequences", "name": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlTable::getTableSequences", "doc": "&quot;Get the details list of sequences for a table.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Driver\\Postgresql", "fromLink": "Windwalker/Database/Driver/Postgresql.html", "link": "Windwalker/Database/Driver/Postgresql/PostgresqlTransaction.html", "name": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlTransaction", "doc": "&quot;Class PostgresqlTransaction&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlTransaction", "fromLink": "Windwalker/Database/Driver/Postgresql/PostgresqlTransaction.html", "link": "Windwalker/Database/Driver/Postgresql/PostgresqlTransaction.html#method_start", "name": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlTransaction::start", "doc": "&quot;start&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlTransaction", "fromLink": "Windwalker/Database/Driver/Postgresql/PostgresqlTransaction.html", "link": "Windwalker/Database/Driver/Postgresql/PostgresqlTransaction.html#method_commit", "name": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlTransaction::commit", "doc": "&quot;commit&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlTransaction", "fromLink": "Windwalker/Database/Driver/Postgresql/PostgresqlTransaction.html", "link": "Windwalker/Database/Driver/Postgresql/PostgresqlTransaction.html#method_rollback", "name": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlTransaction::rollback", "doc": "&quot;rollback&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Driver\\Postgresql", "fromLink": "Windwalker/Database/Driver/Postgresql.html", "link": "Windwalker/Database/Driver/Postgresql/PostgresqlType.html", "name": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlType", "doc": "&quot;The PostgresqlType class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlType", "fromLink": "Windwalker/Database/Driver/Postgresql/PostgresqlType.html", "link": "Windwalker/Database/Driver/Postgresql/PostgresqlType.html#method_noLength", "name": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlType::noLength", "doc": "&quot;noLength&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Driver\\Postgresql", "fromLink": "Windwalker/Database/Driver/Postgresql.html", "link": "Windwalker/Database/Driver/Postgresql/PostgresqlWriter.html", "name": "Windwalker\\Database\\Driver\\Postgresql\\PostgresqlWriter", "doc": "&quot;Class PostgresqlWriter&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Database\\Iterator", "fromLink": "Windwalker/Database/Iterator.html", "link": "Windwalker/Database/Iterator/DataIterator.html", "name": "Windwalker\\Database\\Iterator\\DataIterator", "doc": "&quot;Class DataIterator&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Iterator\\DataIterator", "fromLink": "Windwalker/Database/Iterator/DataIterator.html", "link": "Windwalker/Database/Iterator/DataIterator.html#method___construct", "name": "Windwalker\\Database\\Iterator\\DataIterator::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Iterator\\DataIterator", "fromLink": "Windwalker/Database/Iterator/DataIterator.html", "link": "Windwalker/Database/Iterator/DataIterator.html#method___destruct", "name": "Windwalker\\Database\\Iterator\\DataIterator::__destruct", "doc": "&quot;Database iterator destructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Iterator\\DataIterator", "fromLink": "Windwalker/Database/Iterator/DataIterator.html", "link": "Windwalker/Database/Iterator/DataIterator.html#method_current", "name": "Windwalker\\Database\\Iterator\\DataIterator::current", "doc": "&quot;Return the current element&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Iterator\\DataIterator", "fromLink": "Windwalker/Database/Iterator/DataIterator.html", "link": "Windwalker/Database/Iterator/DataIterator.html#method_next", "name": "Windwalker\\Database\\Iterator\\DataIterator::next", "doc": "&quot;Move forward to next element&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Iterator\\DataIterator", "fromLink": "Windwalker/Database/Iterator/DataIterator.html", "link": "Windwalker/Database/Iterator/DataIterator.html#method_key", "name": "Windwalker\\Database\\Iterator\\DataIterator::key", "doc": "&quot;Return the key of the current element&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Iterator\\DataIterator", "fromLink": "Windwalker/Database/Iterator/DataIterator.html", "link": "Windwalker/Database/Iterator/DataIterator.html#method_valid", "name": "Windwalker\\Database\\Iterator\\DataIterator::valid", "doc": "&quot;Checks if current position is valid&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Iterator\\DataIterator", "fromLink": "Windwalker/Database/Iterator/DataIterator.html", "link": "Windwalker/Database/Iterator/DataIterator.html#method_rewind", "name": "Windwalker\\Database\\Iterator\\DataIterator::rewind", "doc": "&quot;Rewind the Iterator to the first element&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Iterator\\DataIterator", "fromLink": "Windwalker/Database/Iterator/DataIterator.html", "link": "Windwalker/Database/Iterator/DataIterator.html#method_count", "name": "Windwalker\\Database\\Iterator\\DataIterator::count", "doc": "&quot;Count elements of an object&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Middleware", "fromLink": "Windwalker/Database/Middleware.html", "link": "Windwalker/Database/Middleware/DbLoggingMiddleware.html", "name": "Windwalker\\Database\\Middleware\\DbLoggingMiddleware", "doc": "&quot;The DbLoggingMiddleware class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Middleware\\DbLoggingMiddleware", "fromLink": "Windwalker/Database/Middleware/DbLoggingMiddleware.html", "link": "Windwalker/Database/Middleware/DbLoggingMiddleware.html#method___construct", "name": "Windwalker\\Database\\Middleware\\DbLoggingMiddleware::__construct", "doc": "&quot;DbLoggingMiddleware constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Middleware\\DbLoggingMiddleware", "fromLink": "Windwalker/Database/Middleware/DbLoggingMiddleware.html", "link": "Windwalker/Database/Middleware/DbLoggingMiddleware.html#method_execute", "name": "Windwalker\\Database\\Middleware\\DbLoggingMiddleware::execute", "doc": "&quot;Call next middleware.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Middleware\\DbLoggingMiddleware", "fromLink": "Windwalker/Database/Middleware/DbLoggingMiddleware.html", "link": "Windwalker/Database/Middleware/DbLoggingMiddleware.html#method_setLogger", "name": "Windwalker\\Database\\Middleware\\DbLoggingMiddleware::setLogger", "doc": "&quot;Sets a logger instance on the object&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Middleware", "fromLink": "Windwalker/Database/Middleware.html", "link": "Windwalker/Database/Middleware/DbProfilerMiddleware.html", "name": "Windwalker\\Database\\Middleware\\DbProfilerMiddleware", "doc": "&quot;The ProfilerMiddleware class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Middleware\\DbProfilerMiddleware", "fromLink": "Windwalker/Database/Middleware/DbProfilerMiddleware.html", "link": "Windwalker/Database/Middleware/DbProfilerMiddleware.html#method___construct", "name": "Windwalker\\Database\\Middleware\\DbProfilerMiddleware::__construct", "doc": "&quot;ProfilerMiddleware constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Middleware\\DbProfilerMiddleware", "fromLink": "Windwalker/Database/Middleware/DbProfilerMiddleware.html", "link": "Windwalker/Database/Middleware/DbProfilerMiddleware.html#method_execute", "name": "Windwalker\\Database\\Middleware\\DbProfilerMiddleware::execute", "doc": "&quot;Call next middleware.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Middleware\\DbProfilerMiddleware", "fromLink": "Windwalker/Database/Middleware/DbProfilerMiddleware.html", "link": "Windwalker/Database/Middleware/DbProfilerMiddleware.html#method_getBefore", "name": "Windwalker\\Database\\Middleware\\DbProfilerMiddleware::getBefore", "doc": "&quot;Method to get property Before&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Middleware\\DbProfilerMiddleware", "fromLink": "Windwalker/Database/Middleware/DbProfilerMiddleware.html", "link": "Windwalker/Database/Middleware/DbProfilerMiddleware.html#method_setBefore", "name": "Windwalker\\Database\\Middleware\\DbProfilerMiddleware::setBefore", "doc": "&quot;Method to set property before&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Middleware\\DbProfilerMiddleware", "fromLink": "Windwalker/Database/Middleware/DbProfilerMiddleware.html", "link": "Windwalker/Database/Middleware/DbProfilerMiddleware.html#method_getAfter", "name": "Windwalker\\Database\\Middleware\\DbProfilerMiddleware::getAfter", "doc": "&quot;Method to get property After&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Middleware\\DbProfilerMiddleware", "fromLink": "Windwalker/Database/Middleware/DbProfilerMiddleware.html", "link": "Windwalker/Database/Middleware/DbProfilerMiddleware.html#method_setAfter", "name": "Windwalker\\Database\\Middleware\\DbProfilerMiddleware::setAfter", "doc": "&quot;Method to set property after&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Query", "fromLink": "Windwalker/Database/Query.html", "link": "Windwalker/Database/Query/QueryHelper.html", "name": "Windwalker\\Database\\Query\\QueryHelper", "doc": "&quot;Class QueryHelper&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Query\\QueryHelper", "fromLink": "Windwalker/Database/Query/QueryHelper.html", "link": "Windwalker/Database/Query/QueryHelper.html#method___construct", "name": "Windwalker\\Database\\Query\\QueryHelper::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Query\\QueryHelper", "fromLink": "Windwalker/Database/Query/QueryHelper.html", "link": "Windwalker/Database/Query/QueryHelper.html#method_addTable", "name": "Windwalker\\Database\\Query\\QueryHelper::addTable", "doc": "&quot;addTable&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Query\\QueryHelper", "fromLink": "Windwalker/Database/Query/QueryHelper.html", "link": "Windwalker/Database/Query/QueryHelper.html#method_removeTable", "name": "Windwalker\\Database\\Query\\QueryHelper::removeTable", "doc": "&quot;removeTable&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Query\\QueryHelper", "fromLink": "Windwalker/Database/Query/QueryHelper.html", "link": "Windwalker/Database/Query/QueryHelper.html#method_getSelectFields", "name": "Windwalker\\Database\\Query\\QueryHelper::getSelectFields", "doc": "&quot;getFilterFields&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Query\\QueryHelper", "fromLink": "Windwalker/Database/Query/QueryHelper.html", "link": "Windwalker/Database/Query/QueryHelper.html#method_registerQueryTables", "name": "Windwalker\\Database\\Query\\QueryHelper::registerQueryTables", "doc": "&quot;registerQueryTables&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Query\\QueryHelper", "fromLink": "Windwalker/Database/Query/QueryHelper.html", "link": "Windwalker/Database/Query/QueryHelper.html#method_buildWheres", "name": "Windwalker\\Database\\Query\\QueryHelper::buildWheres", "doc": "&quot;buildConditions&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Query\\QueryHelper", "fromLink": "Windwalker/Database/Query/QueryHelper.html", "link": "Windwalker/Database/Query/QueryHelper.html#method_buildCompare", "name": "Windwalker\\Database\\Query\\QueryHelper::buildCompare", "doc": "&quot;buildCompare&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Query\\QueryHelper", "fromLink": "Windwalker/Database/Query/QueryHelper.html", "link": "Windwalker/Database/Query/QueryHelper.html#method_getDb", "name": "Windwalker\\Database\\Query\\QueryHelper::getDb", "doc": "&quot;getDb&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Query\\QueryHelper", "fromLink": "Windwalker/Database/Query/QueryHelper.html", "link": "Windwalker/Database/Query/QueryHelper.html#method_setDb", "name": "Windwalker\\Database\\Query\\QueryHelper::setDb", "doc": "&quot;setDb&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Query\\QueryHelper", "fromLink": "Windwalker/Database/Query/QueryHelper.html", "link": "Windwalker/Database/Query/QueryHelper.html#method_getTables", "name": "Windwalker\\Database\\Query\\QueryHelper::getTables", "doc": "&quot;Method to get property Tables&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Query\\QueryHelper", "fromLink": "Windwalker/Database/Query/QueryHelper.html", "link": "Windwalker/Database/Query/QueryHelper.html#method_setTables", "name": "Windwalker\\Database\\Query\\QueryHelper::setTables", "doc": "&quot;Method to set property tables&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Schema", "fromLink": "Windwalker/Database/Schema.html", "link": "Windwalker/Database/Schema/Column.html", "name": "Windwalker\\Database\\Schema\\Column", "doc": "&quot;The Column class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column.html#method___construct", "name": "Windwalker\\Database\\Schema\\Column::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column.html#method_getName", "name": "Windwalker\\Database\\Schema\\Column::getName", "doc": "&quot;Method to get property Name&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column.html#method_name", "name": "Windwalker\\Database\\Schema\\Column::name", "doc": "&quot;Method to set property name&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column.html#method_getType", "name": "Windwalker\\Database\\Schema\\Column::getType", "doc": "&quot;Method to get property Type&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column.html#method_type", "name": "Windwalker\\Database\\Schema\\Column::type", "doc": "&quot;Method to set property type&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column.html#method_getPosition", "name": "Windwalker\\Database\\Schema\\Column::getPosition", "doc": "&quot;Method to get property Position&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column.html#method_position", "name": "Windwalker\\Database\\Schema\\Column::position", "doc": "&quot;Method to set property position&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column.html#method_getComment", "name": "Windwalker\\Database\\Schema\\Column::getComment", "doc": "&quot;Method to get property Comment&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column.html#method_comment", "name": "Windwalker\\Database\\Schema\\Column::comment", "doc": "&quot;Method to set property comment&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column.html#method_getSigned", "name": "Windwalker\\Database\\Schema\\Column::getSigned", "doc": "&quot;Method to get property Signed&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column.html#method_signed", "name": "Windwalker\\Database\\Schema\\Column::signed", "doc": "&quot;Method to set property signed&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column.html#method_getAllowNull", "name": "Windwalker\\Database\\Schema\\Column::getAllowNull", "doc": "&quot;Method to get property AllowNull&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column.html#method_allowNull", "name": "Windwalker\\Database\\Schema\\Column::allowNull", "doc": "&quot;Method to set property allowNull&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column.html#method_getDefault", "name": "Windwalker\\Database\\Schema\\Column::getDefault", "doc": "&quot;Method to get property Default&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column.html#method_defaultValue", "name": "Windwalker\\Database\\Schema\\Column::defaultValue", "doc": "&quot;Method to set property default&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column.html#method_getAutoIncrement", "name": "Windwalker\\Database\\Schema\\Column::getAutoIncrement", "doc": "&quot;Method to get property AutoIncrement&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column.html#method_autoIncrement", "name": "Windwalker\\Database\\Schema\\Column::autoIncrement", "doc": "&quot;Method to set property autoIncrement&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column.html#method_getLength", "name": "Windwalker\\Database\\Schema\\Column::getLength", "doc": "&quot;Method to get property Length&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column.html#method_length", "name": "Windwalker\\Database\\Schema\\Column::length", "doc": "&quot;Method to set property length&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column.html#method_setOptions", "name": "Windwalker\\Database\\Schema\\Column::setOptions", "doc": "&quot;setOptions&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column.html#method_isPrimary", "name": "Windwalker\\Database\\Schema\\Column::isPrimary", "doc": "&quot;Method to get property Primary&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column.html#method_primary", "name": "Windwalker\\Database\\Schema\\Column::primary", "doc": "&quot;Method to set property primary&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column/Bit.html", "name": "Windwalker\\Database\\Schema\\Column\\Bit", "doc": "&quot;The Bit class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column\\Bit", "fromLink": "Windwalker/Database/Schema/Column/Bit.html", "link": "Windwalker/Database/Schema/Column/Bit.html#method___construct", "name": "Windwalker\\Database\\Schema\\Column\\Bit::__construct", "doc": "&quot;Class init.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column/Char.html", "name": "Windwalker\\Database\\Schema\\Column\\Char", "doc": "&quot;The Varchar class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column\\Char", "fromLink": "Windwalker/Database/Schema/Column/Char.html", "link": "Windwalker/Database/Schema/Column/Char.html#method___construct", "name": "Windwalker\\Database\\Schema\\Column\\Char::__construct", "doc": "&quot;Class init.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column/Datetime.html", "name": "Windwalker\\Database\\Schema\\Column\\Datetime", "doc": "&quot;The DATETIME class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column\\Datetime", "fromLink": "Windwalker/Database/Schema/Column/Datetime.html", "link": "Windwalker/Database/Schema/Column/Datetime.html#method___construct", "name": "Windwalker\\Database\\Schema\\Column\\Datetime::__construct", "doc": "&quot;Class init.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column/Decimal.html", "name": "Windwalker\\Database\\Schema\\Column\\Decimal", "doc": "&quot;The Decimal class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column\\Decimal", "fromLink": "Windwalker/Database/Schema/Column/Decimal.html", "link": "Windwalker/Database/Schema/Column/Decimal.html#method___construct", "name": "Windwalker\\Database\\Schema\\Column\\Decimal::__construct", "doc": "&quot;Class init.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column/Double.html", "name": "Windwalker\\Database\\Schema\\Column\\Double", "doc": "&quot;The Varchar class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column\\Double", "fromLink": "Windwalker/Database/Schema/Column/Double.html", "link": "Windwalker/Database/Schema/Column/Double.html#method___construct", "name": "Windwalker\\Database\\Schema\\Column\\Double::__construct", "doc": "&quot;Class init.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column/FloatType.html", "name": "Windwalker\\Database\\Schema\\Column\\FloatType", "doc": "&quot;The Float class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column\\FloatType", "fromLink": "Windwalker/Database/Schema/Column/FloatType.html", "link": "Windwalker/Database/Schema/Column/FloatType.html#method___construct", "name": "Windwalker\\Database\\Schema\\Column\\FloatType::__construct", "doc": "&quot;Class init.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column/Integer.html", "name": "Windwalker\\Database\\Schema\\Column\\Integer", "doc": "&quot;The Varchar class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column\\Integer", "fromLink": "Windwalker/Database/Schema/Column/Integer.html", "link": "Windwalker/Database/Schema/Column/Integer.html#method___construct", "name": "Windwalker\\Database\\Schema\\Column\\Integer::__construct", "doc": "&quot;Class init.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column/Longtext.html", "name": "Windwalker\\Database\\Schema\\Column\\Longtext", "doc": "&quot;The Varchar class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column\\Longtext", "fromLink": "Windwalker/Database/Schema/Column/Longtext.html", "link": "Windwalker/Database/Schema/Column/Longtext.html#method___construct", "name": "Windwalker\\Database\\Schema\\Column\\Longtext::__construct", "doc": "&quot;Class init.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column/Primary.html", "name": "Windwalker\\Database\\Schema\\Column\\Primary", "doc": "&quot;The Primary class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column\\Primary", "fromLink": "Windwalker/Database/Schema/Column/Primary.html", "link": "Windwalker/Database/Schema/Column/Primary.html#method___construct", "name": "Windwalker\\Database\\Schema\\Column\\Primary::__construct", "doc": "&quot;Class init.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column/Text.html", "name": "Windwalker\\Database\\Schema\\Column\\Text", "doc": "&quot;The Varchar class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column\\Text", "fromLink": "Windwalker/Database/Schema/Column/Text.html", "link": "Windwalker/Database/Schema/Column/Text.html#method___construct", "name": "Windwalker\\Database\\Schema\\Column\\Text::__construct", "doc": "&quot;Class init.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column/Timestamp.html", "name": "Windwalker\\Database\\Schema\\Column\\Timestamp", "doc": "&quot;The TIMESTAMP class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column\\Timestamp", "fromLink": "Windwalker/Database/Schema/Column/Timestamp.html", "link": "Windwalker/Database/Schema/Column/Timestamp.html#method___construct", "name": "Windwalker\\Database\\Schema\\Column\\Timestamp::__construct", "doc": "&quot;Class init.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column/Tinyint.html", "name": "Windwalker\\Database\\Schema\\Column\\Tinyint", "doc": "&quot;The Varchar class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column\\Tinyint", "fromLink": "Windwalker/Database/Schema/Column/Tinyint.html", "link": "Windwalker/Database/Schema/Column/Tinyint.html#method___construct", "name": "Windwalker\\Database\\Schema\\Column\\Tinyint::__construct", "doc": "&quot;Class init.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Schema\\Column", "fromLink": "Windwalker/Database/Schema/Column.html", "link": "Windwalker/Database/Schema/Column/Varchar.html", "name": "Windwalker\\Database\\Schema\\Column\\Varchar", "doc": "&quot;The Varchar class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Column\\Varchar", "fromLink": "Windwalker/Database/Schema/Column/Varchar.html", "link": "Windwalker/Database/Schema/Column/Varchar.html#method___construct", "name": "Windwalker\\Database\\Schema\\Column\\Varchar::__construct", "doc": "&quot;Class init.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Schema", "fromLink": "Windwalker/Database/Schema.html", "link": "Windwalker/Database/Schema/DataType.html", "name": "Windwalker\\Database\\Schema\\DataType", "doc": "&quot;The ColumnType class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\DataType", "fromLink": "Windwalker/Database/Schema/DataType.html", "link": "Windwalker/Database/Schema/DataType.html#method_getInstance", "name": "Windwalker\\Database\\Schema\\DataType::getInstance", "doc": "&quot;getInstance&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\DataType", "fromLink": "Windwalker/Database/Schema/DataType.html", "link": "Windwalker/Database/Schema/DataType.html#method_getLength", "name": "Windwalker\\Database\\Schema\\DataType::getLength", "doc": "&quot;getLength&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\DataType", "fromLink": "Windwalker/Database/Schema/DataType.html", "link": "Windwalker/Database/Schema/DataType.html#method_getDefaultValue", "name": "Windwalker\\Database\\Schema\\DataType::getDefaultValue", "doc": "&quot;getDefaultValue&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\DataType", "fromLink": "Windwalker/Database/Schema/DataType.html", "link": "Windwalker/Database/Schema/DataType.html#method_getPhpType", "name": "Windwalker\\Database\\Schema\\DataType::getPhpType", "doc": "&quot;getPhpType&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\DataType", "fromLink": "Windwalker/Database/Schema/DataType.html", "link": "Windwalker/Database/Schema/DataType.html#method_getType", "name": "Windwalker\\Database\\Schema\\DataType::getType", "doc": "&quot;getType&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Schema", "fromLink": "Windwalker/Database/Schema.html", "link": "Windwalker/Database/Schema/Key.html", "name": "Windwalker\\Database\\Schema\\Key", "doc": "&quot;The Key class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Key", "fromLink": "Windwalker/Database/Schema/Key.html", "link": "Windwalker/Database/Schema/Key.html#method___construct", "name": "Windwalker\\Database\\Schema\\Key::__construct", "doc": "&quot;Key constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Key", "fromLink": "Windwalker/Database/Schema/Key.html", "link": "Windwalker/Database/Schema/Key.html#method_getName", "name": "Windwalker\\Database\\Schema\\Key::getName", "doc": "&quot;Method to get property Name&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Key", "fromLink": "Windwalker/Database/Schema/Key.html", "link": "Windwalker/Database/Schema/Key.html#method_name", "name": "Windwalker\\Database\\Schema\\Key::name", "doc": "&quot;Method to set property name&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Key", "fromLink": "Windwalker/Database/Schema/Key.html", "link": "Windwalker/Database/Schema/Key.html#method_getType", "name": "Windwalker\\Database\\Schema\\Key::getType", "doc": "&quot;Method to get property Type&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Key", "fromLink": "Windwalker/Database/Schema/Key.html", "link": "Windwalker/Database/Schema/Key.html#method_type", "name": "Windwalker\\Database\\Schema\\Key::type", "doc": "&quot;Method to set property type&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Key", "fromLink": "Windwalker/Database/Schema/Key.html", "link": "Windwalker/Database/Schema/Key.html#method_getColumns", "name": "Windwalker\\Database\\Schema\\Key::getColumns", "doc": "&quot;Method to get property Columns&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Key", "fromLink": "Windwalker/Database/Schema/Key.html", "link": "Windwalker/Database/Schema/Key.html#method_columns", "name": "Windwalker\\Database\\Schema\\Key::columns", "doc": "&quot;Method to set property columns&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Key", "fromLink": "Windwalker/Database/Schema/Key.html", "link": "Windwalker/Database/Schema/Key.html#method_getComment", "name": "Windwalker\\Database\\Schema\\Key::getComment", "doc": "&quot;Method to get property Comment&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Key", "fromLink": "Windwalker/Database/Schema/Key.html", "link": "Windwalker/Database/Schema/Key.html#method_comment", "name": "Windwalker\\Database\\Schema\\Key::comment", "doc": "&quot;Method to set property comment&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Database\\Schema", "fromLink": "Windwalker/Database/Schema.html", "link": "Windwalker/Database/Schema/Schema.html", "name": "Windwalker\\Database\\Schema\\Schema", "doc": "&quot;The Schema class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Schema", "fromLink": "Windwalker/Database/Schema/Schema.html", "link": "Windwalker/Database/Schema/Schema.html#method___construct", "name": "Windwalker\\Database\\Schema\\Schema::__construct", "doc": "&quot;Schema constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Schema", "fromLink": "Windwalker/Database/Schema/Schema.html", "link": "Windwalker/Database/Schema/Schema.html#method_add", "name": "Windwalker\\Database\\Schema\\Schema::add", "doc": "&quot;addColumn&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Schema", "fromLink": "Windwalker/Database/Schema/Schema.html", "link": "Windwalker/Database/Schema/Schema.html#method_addColumn", "name": "Windwalker\\Database\\Schema\\Schema::addColumn", "doc": "&quot;addColumn&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Schema", "fromLink": "Windwalker/Database/Schema/Schema.html", "link": "Windwalker/Database/Schema/Schema.html#method_addKey", "name": "Windwalker\\Database\\Schema\\Schema::addKey", "doc": "&quot;addKey&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Schema", "fromLink": "Windwalker/Database/Schema/Schema.html", "link": "Windwalker/Database/Schema/Schema.html#method_addIndex", "name": "Windwalker\\Database\\Schema\\Schema::addIndex", "doc": "&quot;addIndex&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Schema", "fromLink": "Windwalker/Database/Schema/Schema.html", "link": "Windwalker/Database/Schema/Schema.html#method_addUniqueKey", "name": "Windwalker\\Database\\Schema\\Schema::addUniqueKey", "doc": "&quot;addUniqueKey&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Schema", "fromLink": "Windwalker/Database/Schema/Schema.html", "link": "Windwalker/Database/Schema/Schema.html#method_addPrimaryKey", "name": "Windwalker\\Database\\Schema\\Schema::addPrimaryKey", "doc": "&quot;addPrimaryKey&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Schema", "fromLink": "Windwalker/Database/Schema/Schema.html", "link": "Windwalker/Database/Schema/Schema.html#method___call", "name": "Windwalker\\Database\\Schema\\Schema::__call", "doc": "&quot;is triggered when invoking inaccessible methods in an object context.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Schema", "fromLink": "Windwalker/Database/Schema/Schema.html", "link": "Windwalker/Database/Schema/Schema.html#method_getTable", "name": "Windwalker\\Database\\Schema\\Schema::getTable", "doc": "&quot;Method to get property Table&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Schema", "fromLink": "Windwalker/Database/Schema/Schema.html", "link": "Windwalker/Database/Schema/Schema.html#method_setTable", "name": "Windwalker\\Database\\Schema\\Schema::setTable", "doc": "&quot;Method to set property table&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Schema", "fromLink": "Windwalker/Database/Schema/Schema.html", "link": "Windwalker/Database/Schema/Schema.html#method_getColumns", "name": "Windwalker\\Database\\Schema\\Schema::getColumns", "doc": "&quot;Method to get property Columns&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Schema", "fromLink": "Windwalker/Database/Schema/Schema.html", "link": "Windwalker/Database/Schema/Schema.html#method_setColumns", "name": "Windwalker\\Database\\Schema\\Schema::setColumns", "doc": "&quot;Method to set property columns&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Schema", "fromLink": "Windwalker/Database/Schema/Schema.html", "link": "Windwalker/Database/Schema/Schema.html#method_getIndexes", "name": "Windwalker\\Database\\Schema\\Schema::getIndexes", "doc": "&quot;Method to get property Indexes&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Schema", "fromLink": "Windwalker/Database/Schema/Schema.html", "link": "Windwalker/Database/Schema/Schema.html#method_setIndexes", "name": "Windwalker\\Database\\Schema\\Schema::setIndexes", "doc": "&quot;Method to set property indexes&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Schema", "fromLink": "Windwalker/Database/Schema/Schema.html", "link": "Windwalker/Database/Schema/Schema.html#method_getDateFormat", "name": "Windwalker\\Database\\Schema\\Schema::getDateFormat", "doc": "&quot;getDateFormat&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Schema", "fromLink": "Windwalker/Database/Schema/Schema.html", "link": "Windwalker/Database/Schema/Schema.html#method_getNullDate", "name": "Windwalker\\Database\\Schema\\Schema::getNullDate", "doc": "&quot;getNullDate&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Schema", "fromLink": "Windwalker/Database/Schema/Schema.html", "link": "Windwalker/Database/Schema/Schema.html#method_bit", "name": "Windwalker\\Database\\Schema\\Schema::bit", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Schema", "fromLink": "Windwalker/Database/Schema/Schema.html", "link": "Windwalker/Database/Schema/Schema.html#method_char", "name": "Windwalker\\Database\\Schema\\Schema::char", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Schema", "fromLink": "Windwalker/Database/Schema/Schema.html", "link": "Windwalker/Database/Schema/Schema.html#method_datetime", "name": "Windwalker\\Database\\Schema\\Schema::datetime", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Schema", "fromLink": "Windwalker/Database/Schema/Schema.html", "link": "Windwalker/Database/Schema/Schema.html#method_decimal", "name": "Windwalker\\Database\\Schema\\Schema::decimal", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Schema", "fromLink": "Windwalker/Database/Schema/Schema.html", "link": "Windwalker/Database/Schema/Schema.html#method_double", "name": "Windwalker\\Database\\Schema\\Schema::double", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Schema", "fromLink": "Windwalker/Database/Schema/Schema.html", "link": "Windwalker/Database/Schema/Schema.html#method_float", "name": "Windwalker\\Database\\Schema\\Schema::float", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Schema", "fromLink": "Windwalker/Database/Schema/Schema.html", "link": "Windwalker/Database/Schema/Schema.html#method_integer", "name": "Windwalker\\Database\\Schema\\Schema::integer", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Schema", "fromLink": "Windwalker/Database/Schema/Schema.html", "link": "Windwalker/Database/Schema/Schema.html#method_longtext", "name": "Windwalker\\Database\\Schema\\Schema::longtext", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Schema", "fromLink": "Windwalker/Database/Schema/Schema.html", "link": "Windwalker/Database/Schema/Schema.html#method_primary", "name": "Windwalker\\Database\\Schema\\Schema::primary", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Schema", "fromLink": "Windwalker/Database/Schema/Schema.html", "link": "Windwalker/Database/Schema/Schema.html#method_text", "name": "Windwalker\\Database\\Schema\\Schema::text", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Schema", "fromLink": "Windwalker/Database/Schema/Schema.html", "link": "Windwalker/Database/Schema/Schema.html#method_timestamp", "name": "Windwalker\\Database\\Schema\\Schema::timestamp", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Schema", "fromLink": "Windwalker/Database/Schema/Schema.html", "link": "Windwalker/Database/Schema/Schema.html#method_tinyint", "name": "Windwalker\\Database\\Schema\\Schema::tinyint", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Database\\Schema\\Schema", "fromLink": "Windwalker/Database/Schema/Schema.html", "link": "Windwalker/Database/Schema/Schema.html#method_varchar", "name": "Windwalker\\Database\\Schema\\Schema::varchar", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Dom\\Builder", "fromLink": "Windwalker/Dom/Builder.html", "link": "Windwalker/Dom/Builder/DomBuilder.html", "name": "Windwalker\\Dom\\Builder\\DomBuilder", "doc": "&quot;Class XmlBuilder&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Dom\\Builder\\DomBuilder", "fromLink": "Windwalker/Dom/Builder/DomBuilder.html", "link": "Windwalker/Dom/Builder/DomBuilder.html#method_create", "name": "Windwalker\\Dom\\Builder\\DomBuilder::create", "doc": "&quot;Create a html element.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\Builder\\DomBuilder", "fromLink": "Windwalker/Dom/Builder/DomBuilder.html", "link": "Windwalker/Dom/Builder/DomBuilder.html#method_buildAttributes", "name": "Windwalker\\Dom\\Builder\\DomBuilder::buildAttributes", "doc": "&quot;buildAttributes&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\Builder\\DomBuilder", "fromLink": "Windwalker/Dom/Builder/DomBuilder.html", "link": "Windwalker/Dom/Builder/DomBuilder.html#method_quote", "name": "Windwalker\\Dom\\Builder\\DomBuilder::quote", "doc": "&quot;quote&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Dom\\Builder", "fromLink": "Windwalker/Dom/Builder.html", "link": "Windwalker/Dom/Builder/HtmlBuilder.html", "name": "Windwalker\\Dom\\Builder\\HtmlBuilder", "doc": "&quot;HTML Builder helper.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Dom\\Builder\\HtmlBuilder", "fromLink": "Windwalker/Dom/Builder/HtmlBuilder.html", "link": "Windwalker/Dom/Builder/HtmlBuilder.html#method_create", "name": "Windwalker\\Dom\\Builder\\HtmlBuilder::create", "doc": "&quot;Create a html element.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\Builder\\HtmlBuilder", "fromLink": "Windwalker/Dom/Builder/HtmlBuilder.html", "link": "Windwalker/Dom/Builder/HtmlBuilder.html#method_buildAttributes", "name": "Windwalker\\Dom\\Builder\\HtmlBuilder::buildAttributes", "doc": "&quot;buildAttributes&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Dom", "fromLink": "Windwalker/Dom.html", "link": "Windwalker/Dom/DomElement.html", "name": "Windwalker\\Dom\\DomElement", "doc": "&quot;Class XmlElement&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Dom\\DomElement", "fromLink": "Windwalker/Dom/DomElement.html", "link": "Windwalker/Dom/DomElement.html#method___construct", "name": "Windwalker\\Dom\\DomElement::__construct", "doc": "&quot;Constructor&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\DomElement", "fromLink": "Windwalker/Dom/DomElement.html", "link": "Windwalker/Dom/DomElement.html#method_toString", "name": "Windwalker\\Dom\\DomElement::toString", "doc": "&quot;toString&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\DomElement", "fromLink": "Windwalker/Dom/DomElement.html", "link": "Windwalker/Dom/DomElement.html#method_render", "name": "Windwalker\\Dom\\DomElement::render", "doc": "&quot;Alias of toString()&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\DomElement", "fromLink": "Windwalker/Dom/DomElement.html", "link": "Windwalker/Dom/DomElement.html#method___toString", "name": "Windwalker\\Dom\\DomElement::__toString", "doc": "&quot;Convert this object to string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\DomElement", "fromLink": "Windwalker/Dom/DomElement.html", "link": "Windwalker/Dom/DomElement.html#method_getContent", "name": "Windwalker\\Dom\\DomElement::getContent", "doc": "&quot;Get content.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\DomElement", "fromLink": "Windwalker/Dom/DomElement.html", "link": "Windwalker/Dom/DomElement.html#method_setContent", "name": "Windwalker\\Dom\\DomElement::setContent", "doc": "&quot;Set content.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\DomElement", "fromLink": "Windwalker/Dom/DomElement.html", "link": "Windwalker/Dom/DomElement.html#method_getAttribute", "name": "Windwalker\\Dom\\DomElement::getAttribute", "doc": "&quot;Get attributes.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\DomElement", "fromLink": "Windwalker/Dom/DomElement.html", "link": "Windwalker/Dom/DomElement.html#method_setAttribute", "name": "Windwalker\\Dom\\DomElement::setAttribute", "doc": "&quot;Set attribute value.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\DomElement", "fromLink": "Windwalker/Dom/DomElement.html", "link": "Windwalker/Dom/DomElement.html#method_getAttributes", "name": "Windwalker\\Dom\\DomElement::getAttributes", "doc": "&quot;Get all attributes.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\DomElement", "fromLink": "Windwalker/Dom/DomElement.html", "link": "Windwalker/Dom/DomElement.html#method_setAttributes", "name": "Windwalker\\Dom\\DomElement::setAttributes", "doc": "&quot;Set all attributes.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\DomElement", "fromLink": "Windwalker/Dom/DomElement.html", "link": "Windwalker/Dom/DomElement.html#method_getName", "name": "Windwalker\\Dom\\DomElement::getName", "doc": "&quot;Get element tag name.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\DomElement", "fromLink": "Windwalker/Dom/DomElement.html", "link": "Windwalker/Dom/DomElement.html#method_setName", "name": "Windwalker\\Dom\\DomElement::setName", "doc": "&quot;Set element tag name.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\DomElement", "fromLink": "Windwalker/Dom/DomElement.html", "link": "Windwalker/Dom/DomElement.html#method_offsetExists", "name": "Windwalker\\Dom\\DomElement::offsetExists", "doc": "&quot;Whether a offset exists&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\DomElement", "fromLink": "Windwalker/Dom/DomElement.html", "link": "Windwalker/Dom/DomElement.html#method_offsetGet", "name": "Windwalker\\Dom\\DomElement::offsetGet", "doc": "&quot;Offset to retrieve&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\DomElement", "fromLink": "Windwalker/Dom/DomElement.html", "link": "Windwalker/Dom/DomElement.html#method_offsetSet", "name": "Windwalker\\Dom\\DomElement::offsetSet", "doc": "&quot;Offset to set&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\DomElement", "fromLink": "Windwalker/Dom/DomElement.html", "link": "Windwalker/Dom/DomElement.html#method_offsetUnset", "name": "Windwalker\\Dom\\DomElement::offsetUnset", "doc": "&quot;Offset to unset&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Dom", "fromLink": "Windwalker/Dom.html", "link": "Windwalker/Dom/DomElements.html", "name": "Windwalker\\Dom\\DomElements", "doc": "&quot;Html Elements collection.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Dom\\DomElements", "fromLink": "Windwalker/Dom/DomElements.html", "link": "Windwalker/Dom/DomElements.html#method___construct", "name": "Windwalker\\Dom\\DomElements::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\DomElements", "fromLink": "Windwalker/Dom/DomElements.html", "link": "Windwalker/Dom/DomElements.html#method___toString", "name": "Windwalker\\Dom\\DomElements::__toString", "doc": "&quot;Convert all elements to string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\DomElements", "fromLink": "Windwalker/Dom/DomElements.html", "link": "Windwalker/Dom/DomElements.html#method_getIterator", "name": "Windwalker\\Dom\\DomElements::getIterator", "doc": "&quot;Retrieve an external iterator&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\DomElements", "fromLink": "Windwalker/Dom/DomElements.html", "link": "Windwalker/Dom/DomElements.html#method_offsetExists", "name": "Windwalker\\Dom\\DomElements::offsetExists", "doc": "&quot;Whether a offset exists&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\DomElements", "fromLink": "Windwalker/Dom/DomElements.html", "link": "Windwalker/Dom/DomElements.html#method_offsetGet", "name": "Windwalker\\Dom\\DomElements::offsetGet", "doc": "&quot;Offset to retrieve&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\DomElements", "fromLink": "Windwalker/Dom/DomElements.html", "link": "Windwalker/Dom/DomElements.html#method_offsetSet", "name": "Windwalker\\Dom\\DomElements::offsetSet", "doc": "&quot;Offset to set&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\DomElements", "fromLink": "Windwalker/Dom/DomElements.html", "link": "Windwalker/Dom/DomElements.html#method_offsetUnset", "name": "Windwalker\\Dom\\DomElements::offsetUnset", "doc": "&quot;Offset to unset&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\DomElements", "fromLink": "Windwalker/Dom/DomElements.html", "link": "Windwalker/Dom/DomElements.html#method_count", "name": "Windwalker\\Dom\\DomElements::count", "doc": "&quot;Count elements of an object&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\DomElements", "fromLink": "Windwalker/Dom/DomElements.html", "link": "Windwalker/Dom/DomElements.html#method_getStrict", "name": "Windwalker\\Dom\\DomElements::getStrict", "doc": "&quot;Method to get property Strict&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\DomElements", "fromLink": "Windwalker/Dom/DomElements.html", "link": "Windwalker/Dom/DomElements.html#method_setStrict", "name": "Windwalker\\Dom\\DomElements::setStrict", "doc": "&quot;Method to set property strict&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\DomElements", "fromLink": "Windwalker/Dom/DomElements.html", "link": "Windwalker/Dom/DomElements.html#method_getElements", "name": "Windwalker\\Dom\\DomElements::getElements", "doc": "&quot;Method to get property Elements&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\DomElements", "fromLink": "Windwalker/Dom/DomElements.html", "link": "Windwalker/Dom/DomElements.html#method_setElements", "name": "Windwalker\\Dom\\DomElements::setElements", "doc": "&quot;Method to set property elements&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Dom\\Format", "fromLink": "Windwalker/Dom/Format.html", "link": "Windwalker/Dom/Format/DomFormatter.html", "name": "Windwalker\\Dom\\Format\\DomFormatter", "doc": "&quot;The AbstractFormatter class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Dom\\Format\\DomFormatter", "fromLink": "Windwalker/Dom/Format/DomFormatter.html", "link": "Windwalker/Dom/Format/DomFormatter.html#method_getInstance", "name": "Windwalker\\Dom\\Format\\DomFormatter::getInstance", "doc": "&quot;getInstance&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\Format\\DomFormatter", "fromLink": "Windwalker/Dom/Format/DomFormatter.html", "link": "Windwalker/Dom/Format/DomFormatter.html#method_setInstance", "name": "Windwalker\\Dom\\Format\\DomFormatter::setInstance", "doc": "&quot;Method to set property instance&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\Format\\DomFormatter", "fromLink": "Windwalker/Dom/Format/DomFormatter.html", "link": "Windwalker/Dom/Format/DomFormatter.html#method_format", "name": "Windwalker\\Dom\\Format\\DomFormatter::format", "doc": "&quot;format&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\Format\\DomFormatter", "fromLink": "Windwalker/Dom/Format/DomFormatter.html", "link": "Windwalker/Dom/Format/DomFormatter.html#method___construct", "name": "Windwalker\\Dom\\Format\\DomFormatter::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\Format\\DomFormatter", "fromLink": "Windwalker/Dom/Format/DomFormatter.html", "link": "Windwalker/Dom/Format/DomFormatter.html#method_indent", "name": "Windwalker\\Dom\\Format\\DomFormatter::indent", "doc": "&quot;indent&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\Format\\DomFormatter", "fromLink": "Windwalker/Dom/Format/DomFormatter.html", "link": "Windwalker/Dom/Format/DomFormatter.html#method_doIndent", "name": "Windwalker\\Dom\\Format\\DomFormatter::doIndent", "doc": "&quot;Format Dom.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\Format\\DomFormatter", "fromLink": "Windwalker/Dom/Format/DomFormatter.html", "link": "Windwalker/Dom/Format/DomFormatter.html#method_getLog", "name": "Windwalker\\Dom\\Format\\DomFormatter::getLog", "doc": "&quot;Debugging utility. Get log for the last indent operation.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Dom\\Format", "fromLink": "Windwalker/Dom/Format.html", "link": "Windwalker/Dom/Format/HtmlFormatter.html", "name": "Windwalker\\Dom\\Format\\HtmlFormatter", "doc": "&quot;The HtmlFormatter class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Dom\\Format\\HtmlFormatter", "fromLink": "Windwalker/Dom/Format/HtmlFormatter.html", "link": "Windwalker/Dom/Format/HtmlFormatter.html#method_indent", "name": "Windwalker\\Dom\\Format\\HtmlFormatter::indent", "doc": "&quot;indent&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\Format\\HtmlFormatter", "fromLink": "Windwalker/Dom/Format/HtmlFormatter.html", "link": "Windwalker/Dom/Format/HtmlFormatter.html#method_setInlineElements", "name": "Windwalker\\Dom\\Format\\HtmlFormatter::setInlineElements", "doc": "&quot;Method to set property inlineElements&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\Format\\HtmlFormatter", "fromLink": "Windwalker/Dom/Format/HtmlFormatter.html", "link": "Windwalker/Dom/Format/HtmlFormatter.html#method_setElementType", "name": "Windwalker\\Dom\\Format\\HtmlFormatter::setElementType", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\Format\\HtmlFormatter", "fromLink": "Windwalker/Dom/Format/HtmlFormatter.html", "link": "Windwalker/Dom/Format/HtmlFormatter.html#method_addInlineElement", "name": "Windwalker\\Dom\\Format\\HtmlFormatter::addInlineElement", "doc": "&quot;addInlineElement&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\Format\\HtmlFormatter", "fromLink": "Windwalker/Dom/Format/HtmlFormatter.html", "link": "Windwalker/Dom/Format/HtmlFormatter.html#method_addUnpairedElement", "name": "Windwalker\\Dom\\Format\\HtmlFormatter::addUnpairedElement", "doc": "&quot;addUnpairedElement&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\Format\\HtmlFormatter", "fromLink": "Windwalker/Dom/Format/HtmlFormatter.html", "link": "Windwalker/Dom/Format/HtmlFormatter.html#method_setUnpairedElements", "name": "Windwalker\\Dom\\Format\\HtmlFormatter::setUnpairedElements", "doc": "&quot;Method to set property unpairedElements&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\Format\\HtmlFormatter", "fromLink": "Windwalker/Dom/Format/HtmlFormatter.html", "link": "Windwalker/Dom/Format/HtmlFormatter.html#method_getUnpairedElements", "name": "Windwalker\\Dom\\Format\\HtmlFormatter::getUnpairedElements", "doc": "&quot;Method to get property UnpairedElements&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Dom\\Helper", "fromLink": "Windwalker/Dom/Helper.html", "link": "Windwalker/Dom/Helper/DomHelper.html", "name": "Windwalker\\Dom\\Helper\\DomHelper", "doc": "&quot;The DomHelper class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Dom\\Helper\\DomHelper", "fromLink": "Windwalker/Dom/Helper/DomHelper.html", "link": "Windwalker/Dom/Helper/DomHelper.html#method_minify", "name": "Windwalker\\Dom\\Helper\\DomHelper::minify", "doc": "&quot;A simple method to minify Dom and Html.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Dom", "fromLink": "Windwalker/Dom.html", "link": "Windwalker/Dom/HtmlElement.html", "name": "Windwalker\\Dom\\HtmlElement", "doc": "&quot;The Html element object.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Dom\\HtmlElement", "fromLink": "Windwalker/Dom/HtmlElement.html", "link": "Windwalker/Dom/HtmlElement.html#method_toString", "name": "Windwalker\\Dom\\HtmlElement::toString", "doc": "&quot;toString&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Dom", "fromLink": "Windwalker/Dom.html", "link": "Windwalker/Dom/HtmlElements.html", "name": "Windwalker\\Dom\\HtmlElements", "doc": "&quot;Html Elements collection.&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Dom\\SimpleXml", "fromLink": "Windwalker/Dom/SimpleXml.html", "link": "Windwalker/Dom/SimpleXml/XmlHelper.html", "name": "Windwalker\\Dom\\SimpleXml\\XmlHelper", "doc": "&quot;Simple Xml Helper to get attributes from \\SimpleXMLElement&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Dom\\SimpleXml\\XmlHelper", "fromLink": "Windwalker/Dom/SimpleXml/XmlHelper.html", "link": "Windwalker/Dom/SimpleXml/XmlHelper.html#method_getAttribute", "name": "Windwalker\\Dom\\SimpleXml\\XmlHelper::getAttribute", "doc": "&quot;Get attribute from SimpleXMLElement.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\SimpleXml\\XmlHelper", "fromLink": "Windwalker/Dom/SimpleXml/XmlHelper.html", "link": "Windwalker/Dom/SimpleXml/XmlHelper.html#method_get", "name": "Windwalker\\Dom\\SimpleXml\\XmlHelper::get", "doc": "&quot;Get attribute from SimpleXMLElement. Alias of &lt;code&gt;getAttribute()&lt;\/code&gt;.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\SimpleXml\\XmlHelper", "fromLink": "Windwalker/Dom/SimpleXml/XmlHelper.html", "link": "Windwalker/Dom/SimpleXml/XmlHelper.html#method_getBool", "name": "Windwalker\\Dom\\SimpleXml\\XmlHelper::getBool", "doc": "&quot;Method to convert some string like &lt;code&gt;true&lt;\/code&gt;, &lt;code&gt;1&lt;\/code&gt;, &lt;code&gt;yes&lt;\/code&gt; to boolean TRUE,\nand &lt;code&gt;no&lt;\/code&gt;, &lt;code&gt;false&lt;\/code&gt;, &lt;code&gt;disabled&lt;\/code&gt;, &lt;code&gt;null&lt;\/code&gt;, &lt;code&gt;none&lt;\/code&gt;, &lt;code&gt;0&lt;\/code&gt; string to boolean FALSE.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\SimpleXml\\XmlHelper", "fromLink": "Windwalker/Dom/SimpleXml/XmlHelper.html", "link": "Windwalker/Dom/SimpleXml/XmlHelper.html#method_getFalse", "name": "Windwalker\\Dom\\SimpleXml\\XmlHelper::getFalse", "doc": "&quot;Just an alias of &lt;code&gt;getBool()&lt;\/code&gt; but FALSE will return TRUE.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\SimpleXml\\XmlHelper", "fromLink": "Windwalker/Dom/SimpleXml/XmlHelper.html", "link": "Windwalker/Dom/SimpleXml/XmlHelper.html#method_getAttributes", "name": "Windwalker\\Dom\\SimpleXml\\XmlHelper::getAttributes", "doc": "&quot;Get all attributes.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Dom\\SimpleXml\\XmlHelper", "fromLink": "Windwalker/Dom/SimpleXml/XmlHelper.html", "link": "Windwalker/Dom/SimpleXml/XmlHelper.html#method_def", "name": "Windwalker\\Dom\\SimpleXml\\XmlHelper::def", "doc": "&quot;If this attribute not exists, use this value as default, or we use original value from xml.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Edge\\Cache", "fromLink": "Windwalker/Edge/Cache.html", "link": "Windwalker/Edge/Cache/EdgeArrayCache.html", "name": "Windwalker\\Edge\\Cache\\EdgeArrayCache", "doc": "&quot;The EdgeNullCache class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Edge\\Cache\\EdgeArrayCache", "fromLink": "Windwalker/Edge/Cache/EdgeArrayCache.html", "link": "Windwalker/Edge/Cache/EdgeArrayCache.html#method_isExpired", "name": "Windwalker\\Edge\\Cache\\EdgeArrayCache::isExpired", "doc": "&quot;isExpired&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Cache\\EdgeArrayCache", "fromLink": "Windwalker/Edge/Cache/EdgeArrayCache.html", "link": "Windwalker/Edge/Cache/EdgeArrayCache.html#method_getCacheKey", "name": "Windwalker\\Edge\\Cache\\EdgeArrayCache::getCacheKey", "doc": "&quot;getCacheKey&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Cache\\EdgeArrayCache", "fromLink": "Windwalker/Edge/Cache/EdgeArrayCache.html", "link": "Windwalker/Edge/Cache/EdgeArrayCache.html#method_load", "name": "Windwalker\\Edge\\Cache\\EdgeArrayCache::load", "doc": "&quot;get&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Cache\\EdgeArrayCache", "fromLink": "Windwalker/Edge/Cache/EdgeArrayCache.html", "link": "Windwalker/Edge/Cache/EdgeArrayCache.html#method_store", "name": "Windwalker\\Edge\\Cache\\EdgeArrayCache::store", "doc": "&quot;store&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Cache\\EdgeArrayCache", "fromLink": "Windwalker/Edge/Cache/EdgeArrayCache.html", "link": "Windwalker/Edge/Cache/EdgeArrayCache.html#method_remove", "name": "Windwalker\\Edge\\Cache\\EdgeArrayCache::remove", "doc": "&quot;remove&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Cache\\EdgeArrayCache", "fromLink": "Windwalker/Edge/Cache/EdgeArrayCache.html", "link": "Windwalker/Edge/Cache/EdgeArrayCache.html#method_getData", "name": "Windwalker\\Edge\\Cache\\EdgeArrayCache::getData", "doc": "&quot;Method to get property Data&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Cache\\EdgeArrayCache", "fromLink": "Windwalker/Edge/Cache/EdgeArrayCache.html", "link": "Windwalker/Edge/Cache/EdgeArrayCache.html#method_setData", "name": "Windwalker\\Edge\\Cache\\EdgeArrayCache::setData", "doc": "&quot;Method to set property data&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Edge\\Cache", "fromLink": "Windwalker/Edge/Cache.html", "link": "Windwalker/Edge/Cache/EdgeCacheInterface.html", "name": "Windwalker\\Edge\\Cache\\EdgeCacheInterface", "doc": "&quot;Interface EdgeCacheInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Edge\\Cache\\EdgeCacheInterface", "fromLink": "Windwalker/Edge/Cache/EdgeCacheInterface.html", "link": "Windwalker/Edge/Cache/EdgeCacheInterface.html#method_isExpired", "name": "Windwalker\\Edge\\Cache\\EdgeCacheInterface::isExpired", "doc": "&quot;isExpired&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Cache\\EdgeCacheInterface", "fromLink": "Windwalker/Edge/Cache/EdgeCacheInterface.html", "link": "Windwalker/Edge/Cache/EdgeCacheInterface.html#method_getCacheKey", "name": "Windwalker\\Edge\\Cache\\EdgeCacheInterface::getCacheKey", "doc": "&quot;getCacheKey&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Cache\\EdgeCacheInterface", "fromLink": "Windwalker/Edge/Cache/EdgeCacheInterface.html", "link": "Windwalker/Edge/Cache/EdgeCacheInterface.html#method_load", "name": "Windwalker\\Edge\\Cache\\EdgeCacheInterface::load", "doc": "&quot;get&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Cache\\EdgeCacheInterface", "fromLink": "Windwalker/Edge/Cache/EdgeCacheInterface.html", "link": "Windwalker/Edge/Cache/EdgeCacheInterface.html#method_store", "name": "Windwalker\\Edge\\Cache\\EdgeCacheInterface::store", "doc": "&quot;store&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Cache\\EdgeCacheInterface", "fromLink": "Windwalker/Edge/Cache/EdgeCacheInterface.html", "link": "Windwalker/Edge/Cache/EdgeCacheInterface.html#method_remove", "name": "Windwalker\\Edge\\Cache\\EdgeCacheInterface::remove", "doc": "&quot;remove&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Edge\\Cache", "fromLink": "Windwalker/Edge/Cache.html", "link": "Windwalker/Edge/Cache/EdgeFileCache.html", "name": "Windwalker\\Edge\\Cache\\EdgeFileCache", "doc": "&quot;The FileCacheHandler class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Edge\\Cache\\EdgeFileCache", "fromLink": "Windwalker/Edge/Cache/EdgeFileCache.html", "link": "Windwalker/Edge/Cache/EdgeFileCache.html#method___construct", "name": "Windwalker\\Edge\\Cache\\EdgeFileCache::__construct", "doc": "&quot;FileCacheHandler constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Cache\\EdgeFileCache", "fromLink": "Windwalker/Edge/Cache/EdgeFileCache.html", "link": "Windwalker/Edge/Cache/EdgeFileCache.html#method_isExpired", "name": "Windwalker\\Edge\\Cache\\EdgeFileCache::isExpired", "doc": "&quot;isExpired&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Cache\\EdgeFileCache", "fromLink": "Windwalker/Edge/Cache/EdgeFileCache.html", "link": "Windwalker/Edge/Cache/EdgeFileCache.html#method_getCacheKey", "name": "Windwalker\\Edge\\Cache\\EdgeFileCache::getCacheKey", "doc": "&quot;getCacheKey&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Cache\\EdgeFileCache", "fromLink": "Windwalker/Edge/Cache/EdgeFileCache.html", "link": "Windwalker/Edge/Cache/EdgeFileCache.html#method_getCacheFile", "name": "Windwalker\\Edge\\Cache\\EdgeFileCache::getCacheFile", "doc": "&quot;getCacheFile&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Cache\\EdgeFileCache", "fromLink": "Windwalker/Edge/Cache/EdgeFileCache.html", "link": "Windwalker/Edge/Cache/EdgeFileCache.html#method_load", "name": "Windwalker\\Edge\\Cache\\EdgeFileCache::load", "doc": "&quot;load&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Cache\\EdgeFileCache", "fromLink": "Windwalker/Edge/Cache/EdgeFileCache.html", "link": "Windwalker/Edge/Cache/EdgeFileCache.html#method_store", "name": "Windwalker\\Edge\\Cache\\EdgeFileCache::store", "doc": "&quot;store&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Cache\\EdgeFileCache", "fromLink": "Windwalker/Edge/Cache/EdgeFileCache.html", "link": "Windwalker/Edge/Cache/EdgeFileCache.html#method_remove", "name": "Windwalker\\Edge\\Cache\\EdgeFileCache::remove", "doc": "&quot;Remove an item from the cache by its unique key&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Edge\\Compiler", "fromLink": "Windwalker/Edge/Compiler.html", "link": "Windwalker/Edge/Compiler/EdgeCompiler.html", "name": "Windwalker\\Edge\\Compiler\\EdgeCompiler", "doc": "&quot;The EdgeCompiler class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Edge\\Compiler\\EdgeCompiler", "fromLink": "Windwalker/Edge/Compiler/EdgeCompiler.html", "link": "Windwalker/Edge/Compiler/EdgeCompiler.html#method_compile", "name": "Windwalker\\Edge\\Compiler\\EdgeCompiler::compile", "doc": "&quot;compile&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Compiler\\EdgeCompiler", "fromLink": "Windwalker/Edge/Compiler/EdgeCompiler.html", "link": "Windwalker/Edge/Compiler/EdgeCompiler.html#method_compileEchoDefaults", "name": "Windwalker\\Edge\\Compiler\\EdgeCompiler::compileEchoDefaults", "doc": "&quot;Compile the default values for the echo statement.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Compiler\\EdgeCompiler", "fromLink": "Windwalker/Edge/Compiler/EdgeCompiler.html", "link": "Windwalker/Edge/Compiler/EdgeCompiler.html#method_directive", "name": "Windwalker\\Edge\\Compiler\\EdgeCompiler::directive", "doc": "&quot;Register a handler for custom directives.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Compiler\\EdgeCompiler", "fromLink": "Windwalker/Edge/Compiler/EdgeCompiler.html", "link": "Windwalker/Edge/Compiler/EdgeCompiler.html#method_getDirectives", "name": "Windwalker\\Edge\\Compiler\\EdgeCompiler::getDirectives", "doc": "&quot;Get the list of custom directives.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Compiler\\EdgeCompiler", "fromLink": "Windwalker/Edge/Compiler/EdgeCompiler.html", "link": "Windwalker/Edge/Compiler/EdgeCompiler.html#method_setDirectives", "name": "Windwalker\\Edge\\Compiler\\EdgeCompiler::setDirectives", "doc": "&quot;Method to set property directives&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Compiler\\EdgeCompiler", "fromLink": "Windwalker/Edge/Compiler/EdgeCompiler.html", "link": "Windwalker/Edge/Compiler/EdgeCompiler.html#method_parser", "name": "Windwalker\\Edge\\Compiler\\EdgeCompiler::parser", "doc": "&quot;parser&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Compiler\\EdgeCompiler", "fromLink": "Windwalker/Edge/Compiler/EdgeCompiler.html", "link": "Windwalker/Edge/Compiler/EdgeCompiler.html#method_setParsers", "name": "Windwalker\\Edge\\Compiler\\EdgeCompiler::setParsers", "doc": "&quot;Method to set property parsers&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Compiler\\EdgeCompiler", "fromLink": "Windwalker/Edge/Compiler/EdgeCompiler.html", "link": "Windwalker/Edge/Compiler/EdgeCompiler.html#method_getParsers", "name": "Windwalker\\Edge\\Compiler\\EdgeCompiler::getParsers", "doc": "&quot;getParsers&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Compiler\\EdgeCompiler", "fromLink": "Windwalker/Edge/Compiler/EdgeCompiler.html", "link": "Windwalker/Edge/Compiler/EdgeCompiler.html#method_getRawTags", "name": "Windwalker\\Edge\\Compiler\\EdgeCompiler::getRawTags", "doc": "&quot;Gets the raw tags used by the compiler.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Compiler\\EdgeCompiler", "fromLink": "Windwalker/Edge/Compiler/EdgeCompiler.html", "link": "Windwalker/Edge/Compiler/EdgeCompiler.html#method_setRawTags", "name": "Windwalker\\Edge\\Compiler\\EdgeCompiler::setRawTags", "doc": "&quot;Sets the raw tags used for the compiler.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Compiler\\EdgeCompiler", "fromLink": "Windwalker/Edge/Compiler/EdgeCompiler.html", "link": "Windwalker/Edge/Compiler/EdgeCompiler.html#method_setContentTags", "name": "Windwalker\\Edge\\Compiler\\EdgeCompiler::setContentTags", "doc": "&quot;Sets the content tags used for the compiler.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Compiler\\EdgeCompiler", "fromLink": "Windwalker/Edge/Compiler/EdgeCompiler.html", "link": "Windwalker/Edge/Compiler/EdgeCompiler.html#method_setEscapedContentTags", "name": "Windwalker\\Edge\\Compiler\\EdgeCompiler::setEscapedContentTags", "doc": "&quot;Sets the escaped content tags used for the compiler.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Compiler\\EdgeCompiler", "fromLink": "Windwalker/Edge/Compiler/EdgeCompiler.html", "link": "Windwalker/Edge/Compiler/EdgeCompiler.html#method_getContentTags", "name": "Windwalker\\Edge\\Compiler\\EdgeCompiler::getContentTags", "doc": "&quot;Gets the content tags used for the compiler.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Compiler\\EdgeCompiler", "fromLink": "Windwalker/Edge/Compiler/EdgeCompiler.html", "link": "Windwalker/Edge/Compiler/EdgeCompiler.html#method_getEscapedContentTags", "name": "Windwalker\\Edge\\Compiler\\EdgeCompiler::getEscapedContentTags", "doc": "&quot;Gets the escaped content tags used for the compiler.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Compiler\\EdgeCompiler", "fromLink": "Windwalker/Edge/Compiler/EdgeCompiler.html", "link": "Windwalker/Edge/Compiler/EdgeCompiler.html#method_setEchoFormat", "name": "Windwalker\\Edge\\Compiler\\EdgeCompiler::setEchoFormat", "doc": "&quot;Set the echo format to be used by the compiler.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Edge\\Compiler", "fromLink": "Windwalker/Edge/Compiler.html", "link": "Windwalker/Edge/Compiler/EdgeCompilerInterface.html", "name": "Windwalker\\Edge\\Compiler\\EdgeCompilerInterface", "doc": "&quot;The CompilerInterface class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Edge\\Compiler\\EdgeCompilerInterface", "fromLink": "Windwalker/Edge/Compiler/EdgeCompilerInterface.html", "link": "Windwalker/Edge/Compiler/EdgeCompilerInterface.html#method_compile", "name": "Windwalker\\Edge\\Compiler\\EdgeCompilerInterface::compile", "doc": "&quot;compile&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Compiler\\EdgeCompilerInterface", "fromLink": "Windwalker/Edge/Compiler/EdgeCompilerInterface.html", "link": "Windwalker/Edge/Compiler/EdgeCompilerInterface.html#method_directive", "name": "Windwalker\\Edge\\Compiler\\EdgeCompilerInterface::directive", "doc": "&quot;Register a handler for custom directives.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Compiler\\EdgeCompilerInterface", "fromLink": "Windwalker/Edge/Compiler/EdgeCompilerInterface.html", "link": "Windwalker/Edge/Compiler/EdgeCompilerInterface.html#method_parser", "name": "Windwalker\\Edge\\Compiler\\EdgeCompilerInterface::parser", "doc": "&quot;parser&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Edge", "fromLink": "Windwalker/Edge.html", "link": "Windwalker/Edge/Edge.html", "name": "Windwalker\\Edge\\Edge", "doc": "&quot;The Edge template engine.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method___construct", "name": "Windwalker\\Edge\\Edge::__construct", "doc": "&quot;EdgeEnvironment constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_render", "name": "Windwalker\\Edge\\Edge::render", "doc": "&quot;render&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_escape", "name": "Windwalker\\Edge\\Edge::escape", "doc": "&quot;escape&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_startSection", "name": "Windwalker\\Edge\\Edge::startSection", "doc": "&quot;Start injecting content into a section.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_inject", "name": "Windwalker\\Edge\\Edge::inject", "doc": "&quot;Inject inline content into a section.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_yieldSection", "name": "Windwalker\\Edge\\Edge::yieldSection", "doc": "&quot;Stop injecting content into a section and return its contents.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_stopSection", "name": "Windwalker\\Edge\\Edge::stopSection", "doc": "&quot;Stop injecting content into a section.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_appendSection", "name": "Windwalker\\Edge\\Edge::appendSection", "doc": "&quot;Stop injecting content into a section and append it.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_yieldContent", "name": "Windwalker\\Edge\\Edge::yieldContent", "doc": "&quot;Get the string contents of a section.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_startPush", "name": "Windwalker\\Edge\\Edge::startPush", "doc": "&quot;Start injecting content into a push section.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_stopPush", "name": "Windwalker\\Edge\\Edge::stopPush", "doc": "&quot;Stop injecting content into a push section.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_yieldPushContent", "name": "Windwalker\\Edge\\Edge::yieldPushContent", "doc": "&quot;Get the string contents of a push section.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_renderEach", "name": "Windwalker\\Edge\\Edge::renderEach", "doc": "&quot;Get the rendered contents of a partial from a loop.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_flushSections", "name": "Windwalker\\Edge\\Edge::flushSections", "doc": "&quot;Flush all of the section contents.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_flushSectionsIfDoneRendering", "name": "Windwalker\\Edge\\Edge::flushSectionsIfDoneRendering", "doc": "&quot;Flush all of the section contents if done rendering.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_incrementRender", "name": "Windwalker\\Edge\\Edge::incrementRender", "doc": "&quot;Increment the rendering counter.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_decrementRender", "name": "Windwalker\\Edge\\Edge::decrementRender", "doc": "&quot;Decrement the rendering counter.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_doneRendering", "name": "Windwalker\\Edge\\Edge::doneRendering", "doc": "&quot;Check if there are no active render operations.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_prepareExtensions", "name": "Windwalker\\Edge\\Edge::prepareExtensions", "doc": "&quot;prepareDirectives&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_arrayExcept", "name": "Windwalker\\Edge\\Edge::arrayExcept", "doc": "&quot;arrayExcept&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_getGlobals", "name": "Windwalker\\Edge\\Edge::getGlobals", "doc": "&quot;Method to get property Globals&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_addGlobal", "name": "Windwalker\\Edge\\Edge::addGlobal", "doc": "&quot;addGlobal&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_removeGlobal", "name": "Windwalker\\Edge\\Edge::removeGlobal", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_getGlobal", "name": "Windwalker\\Edge\\Edge::getGlobal", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_setGlobals", "name": "Windwalker\\Edge\\Edge::setGlobals", "doc": "&quot;Method to set property globals&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_getCompiler", "name": "Windwalker\\Edge\\Edge::getCompiler", "doc": "&quot;Method to get property Compiler&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_setCompiler", "name": "Windwalker\\Edge\\Edge::setCompiler", "doc": "&quot;Method to set property compiler&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_getLoader", "name": "Windwalker\\Edge\\Edge::getLoader", "doc": "&quot;Method to get property Loader&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_setLoader", "name": "Windwalker\\Edge\\Edge::setLoader", "doc": "&quot;Method to set property loader&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_addExtension", "name": "Windwalker\\Edge\\Edge::addExtension", "doc": "&quot;addExtension&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_removeExtension", "name": "Windwalker\\Edge\\Edge::removeExtension", "doc": "&quot;removeExtension&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_hasExtension", "name": "Windwalker\\Edge\\Edge::hasExtension", "doc": "&quot;hasExtension&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_getExtension", "name": "Windwalker\\Edge\\Edge::getExtension", "doc": "&quot;getExtension&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_getExtensions", "name": "Windwalker\\Edge\\Edge::getExtensions", "doc": "&quot;Method to get property Extensions&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_setExtensions", "name": "Windwalker\\Edge\\Edge::setExtensions", "doc": "&quot;Method to set property extensions&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_getCache", "name": "Windwalker\\Edge\\Edge::getCache", "doc": "&quot;Method to get property Cache&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Edge", "fromLink": "Windwalker/Edge/Edge.html", "link": "Windwalker/Edge/Edge.html#method_setCache", "name": "Windwalker\\Edge\\Edge::setCache", "doc": "&quot;Method to set property cache&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Edge\\Extension", "fromLink": "Windwalker/Edge/Extension.html", "link": "Windwalker/Edge/Extension/EdgeExtensionInterface.html", "name": "Windwalker\\Edge\\Extension\\EdgeExtensionInterface", "doc": "&quot;The EdgeExtensionInterface class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Edge\\Extension\\EdgeExtensionInterface", "fromLink": "Windwalker/Edge/Extension/EdgeExtensionInterface.html", "link": "Windwalker/Edge/Extension/EdgeExtensionInterface.html#method_getName", "name": "Windwalker\\Edge\\Extension\\EdgeExtensionInterface::getName", "doc": "&quot;getName&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Extension\\EdgeExtensionInterface", "fromLink": "Windwalker/Edge/Extension/EdgeExtensionInterface.html", "link": "Windwalker/Edge/Extension/EdgeExtensionInterface.html#method_getDirectives", "name": "Windwalker\\Edge\\Extension\\EdgeExtensionInterface::getDirectives", "doc": "&quot;getDirectives&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Extension\\EdgeExtensionInterface", "fromLink": "Windwalker/Edge/Extension/EdgeExtensionInterface.html", "link": "Windwalker/Edge/Extension/EdgeExtensionInterface.html#method_getGlobals", "name": "Windwalker\\Edge\\Extension\\EdgeExtensionInterface::getGlobals", "doc": "&quot;getGlobals&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Extension\\EdgeExtensionInterface", "fromLink": "Windwalker/Edge/Extension/EdgeExtensionInterface.html", "link": "Windwalker/Edge/Extension/EdgeExtensionInterface.html#method_getParsers", "name": "Windwalker\\Edge\\Extension\\EdgeExtensionInterface::getParsers", "doc": "&quot;getParsers&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Edge\\Loader", "fromLink": "Windwalker/Edge/Loader.html", "link": "Windwalker/Edge/Loader/EdgeFileLoader.html", "name": "Windwalker\\Edge\\Loader\\EdgeFileLoader", "doc": "&quot;The EdgeFileLoader class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Edge\\Loader\\EdgeFileLoader", "fromLink": "Windwalker/Edge/Loader/EdgeFileLoader.html", "link": "Windwalker/Edge/Loader/EdgeFileLoader.html#method___construct", "name": "Windwalker\\Edge\\Loader\\EdgeFileLoader::__construct", "doc": "&quot;EdgeFileLoader constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Loader\\EdgeFileLoader", "fromLink": "Windwalker/Edge/Loader/EdgeFileLoader.html", "link": "Windwalker/Edge/Loader/EdgeFileLoader.html#method_find", "name": "Windwalker\\Edge\\Loader\\EdgeFileLoader::find", "doc": "&quot;find&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Loader\\EdgeFileLoader", "fromLink": "Windwalker/Edge/Loader/EdgeFileLoader.html", "link": "Windwalker/Edge/Loader/EdgeFileLoader.html#method_load", "name": "Windwalker\\Edge\\Loader\\EdgeFileLoader::load", "doc": "&quot;loadFile&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Loader\\EdgeFileLoader", "fromLink": "Windwalker/Edge/Loader/EdgeFileLoader.html", "link": "Windwalker/Edge/Loader/EdgeFileLoader.html#method_addPath", "name": "Windwalker\\Edge\\Loader\\EdgeFileLoader::addPath", "doc": "&quot;addPath&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Loader\\EdgeFileLoader", "fromLink": "Windwalker/Edge/Loader/EdgeFileLoader.html", "link": "Windwalker/Edge/Loader/EdgeFileLoader.html#method_prependPath", "name": "Windwalker\\Edge\\Loader\\EdgeFileLoader::prependPath", "doc": "&quot;prependPath&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Loader\\EdgeFileLoader", "fromLink": "Windwalker/Edge/Loader/EdgeFileLoader.html", "link": "Windwalker/Edge/Loader/EdgeFileLoader.html#method_getPaths", "name": "Windwalker\\Edge\\Loader\\EdgeFileLoader::getPaths", "doc": "&quot;Method to get property Paths&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Loader\\EdgeFileLoader", "fromLink": "Windwalker/Edge/Loader/EdgeFileLoader.html", "link": "Windwalker/Edge/Loader/EdgeFileLoader.html#method_setPaths", "name": "Windwalker\\Edge\\Loader\\EdgeFileLoader::setPaths", "doc": "&quot;Method to set property paths&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Loader\\EdgeFileLoader", "fromLink": "Windwalker/Edge/Loader/EdgeFileLoader.html", "link": "Windwalker/Edge/Loader/EdgeFileLoader.html#method_addFileExtension", "name": "Windwalker\\Edge\\Loader\\EdgeFileLoader::addFileExtension", "doc": "&quot;addExtension&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Loader\\EdgeFileLoader", "fromLink": "Windwalker/Edge/Loader/EdgeFileLoader.html", "link": "Windwalker/Edge/Loader/EdgeFileLoader.html#method_getExtensions", "name": "Windwalker\\Edge\\Loader\\EdgeFileLoader::getExtensions", "doc": "&quot;Method to get property Extensions&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Loader\\EdgeFileLoader", "fromLink": "Windwalker/Edge/Loader/EdgeFileLoader.html", "link": "Windwalker/Edge/Loader/EdgeFileLoader.html#method_setExtensions", "name": "Windwalker\\Edge\\Loader\\EdgeFileLoader::setExtensions", "doc": "&quot;Method to set property extensions&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Edge\\Loader", "fromLink": "Windwalker/Edge/Loader.html", "link": "Windwalker/Edge/Loader/EdgeLoaderInterface.html", "name": "Windwalker\\Edge\\Loader\\EdgeLoaderInterface", "doc": "&quot;Interface EdgeLoaderInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Edge\\Loader\\EdgeLoaderInterface", "fromLink": "Windwalker/Edge/Loader/EdgeLoaderInterface.html", "link": "Windwalker/Edge/Loader/EdgeLoaderInterface.html#method_find", "name": "Windwalker\\Edge\\Loader\\EdgeLoaderInterface::find", "doc": "&quot;load&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Edge\\Loader", "fromLink": "Windwalker/Edge/Loader.html", "link": "Windwalker/Edge/Loader/EdgeStringLoader.html", "name": "Windwalker\\Edge\\Loader\\EdgeStringLoader", "doc": "&quot;The EdgeFileLoader class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Edge\\Loader\\EdgeStringLoader", "fromLink": "Windwalker/Edge/Loader/EdgeStringLoader.html", "link": "Windwalker/Edge/Loader/EdgeStringLoader.html#method___construct", "name": "Windwalker\\Edge\\Loader\\EdgeStringLoader::__construct", "doc": "&quot;EdgeTextLoader constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Loader\\EdgeStringLoader", "fromLink": "Windwalker/Edge/Loader/EdgeStringLoader.html", "link": "Windwalker/Edge/Loader/EdgeStringLoader.html#method_find", "name": "Windwalker\\Edge\\Loader\\EdgeStringLoader::find", "doc": "&quot;load&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Loader\\EdgeStringLoader", "fromLink": "Windwalker/Edge/Loader/EdgeStringLoader.html", "link": "Windwalker/Edge/Loader/EdgeStringLoader.html#method_load", "name": "Windwalker\\Edge\\Loader\\EdgeStringLoader::load", "doc": "&quot;loadFile&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Loader\\EdgeStringLoader", "fromLink": "Windwalker/Edge/Loader/EdgeStringLoader.html", "link": "Windwalker/Edge/Loader/EdgeStringLoader.html#method_getContent", "name": "Windwalker\\Edge\\Loader\\EdgeStringLoader::getContent", "doc": "&quot;Method to get property Content&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Edge\\Loader\\EdgeStringLoader", "fromLink": "Windwalker/Edge/Loader/EdgeStringLoader.html", "link": "Windwalker/Edge/Loader/EdgeStringLoader.html#method_setContent", "name": "Windwalker\\Edge\\Loader\\EdgeStringLoader::setContent", "doc": "&quot;Method to set property content&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Environment\\Browser", "fromLink": "Windwalker/Environment/Browser.html", "link": "Windwalker/Environment/Browser/Browser.html", "name": "Windwalker\\Environment\\Browser\\Browser", "doc": "&quot;Class to model a Web Client.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Environment\\Browser\\Browser", "fromLink": "Windwalker/Environment/Browser/Browser.html", "link": "Windwalker/Environment/Browser/Browser.html#method___construct", "name": "Windwalker\\Environment\\Browser\\Browser::__construct", "doc": "&quot;Class constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\Browser\\Browser", "fromLink": "Windwalker/Environment/Browser/Browser.html", "link": "Windwalker/Environment/Browser/Browser.html#method_getDevice", "name": "Windwalker\\Environment\\Browser\\Browser::getDevice", "doc": "&quot;getPlatform&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\Browser\\Browser", "fromLink": "Windwalker/Environment/Browser/Browser.html", "link": "Windwalker/Environment/Browser/Browser.html#method_isMobile", "name": "Windwalker\\Environment\\Browser\\Browser::isMobile", "doc": "&quot;getMobile&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\Browser\\Browser", "fromLink": "Windwalker/Environment/Browser/Browser.html", "link": "Windwalker/Environment/Browser/Browser.html#method_getEngine", "name": "Windwalker\\Environment\\Browser\\Browser::getEngine", "doc": "&quot;getEngine&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\Browser\\Browser", "fromLink": "Windwalker/Environment/Browser/Browser.html", "link": "Windwalker/Environment/Browser/Browser.html#method_getBrowser", "name": "Windwalker\\Environment\\Browser\\Browser::getBrowser", "doc": "&quot;getBrowser&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\Browser\\Browser", "fromLink": "Windwalker/Environment/Browser/Browser.html", "link": "Windwalker/Environment/Browser/Browser.html#method_getBrowserVersion", "name": "Windwalker\\Environment\\Browser\\Browser::getBrowserVersion", "doc": "&quot;getBrowserVersion&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\Browser\\Browser", "fromLink": "Windwalker/Environment/Browser/Browser.html", "link": "Windwalker/Environment/Browser/Browser.html#method_getLanguages", "name": "Windwalker\\Environment\\Browser\\Browser::getLanguages", "doc": "&quot;getLanguages&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\Browser\\Browser", "fromLink": "Windwalker/Environment/Browser/Browser.html", "link": "Windwalker/Environment/Browser/Browser.html#method_getEncodings", "name": "Windwalker\\Environment\\Browser\\Browser::getEncodings", "doc": "&quot;getEncodings&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\Browser\\Browser", "fromLink": "Windwalker/Environment/Browser/Browser.html", "link": "Windwalker/Environment/Browser/Browser.html#method_getUserAgent", "name": "Windwalker\\Environment\\Browser\\Browser::getUserAgent", "doc": "&quot;getUserAgent&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\Browser\\Browser", "fromLink": "Windwalker/Environment/Browser/Browser.html", "link": "Windwalker/Environment/Browser/Browser.html#method_setUserAgent", "name": "Windwalker\\Environment\\Browser\\Browser::setUserAgent", "doc": "&quot;setUserAgent&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\Browser\\Browser", "fromLink": "Windwalker/Environment/Browser/Browser.html", "link": "Windwalker/Environment/Browser/Browser.html#method_isRobot", "name": "Windwalker\\Environment\\Browser\\Browser::isRobot", "doc": "&quot;getRobot&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\Browser\\Browser", "fromLink": "Windwalker/Environment/Browser/Browser.html", "link": "Windwalker/Environment/Browser/Browser.html#method_isSSLConnection", "name": "Windwalker\\Environment\\Browser\\Browser::isSSLConnection", "doc": "&quot;Determine if we are using a secure (SSL) connection.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Environment", "fromLink": "Windwalker/Environment.html", "link": "Windwalker/Environment/Environment.html", "name": "Windwalker\\Environment\\Environment", "doc": "&quot;The Environment class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Environment\\Environment", "fromLink": "Windwalker/Environment/Environment.html", "link": "Windwalker/Environment/Environment.html#method___construct", "name": "Windwalker\\Environment\\Environment::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\Environment", "fromLink": "Windwalker/Environment/Environment.html", "link": "Windwalker/Environment/Environment.html#method_getPlatform", "name": "Windwalker\\Environment\\Environment::getPlatform", "doc": "&quot;Method to get property Server&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\Environment", "fromLink": "Windwalker/Environment/Environment.html", "link": "Windwalker/Environment/Environment.html#method_setPlatform", "name": "Windwalker\\Environment\\Environment::setPlatform", "doc": "&quot;Method to set property server&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Environment", "fromLink": "Windwalker/Environment.html", "link": "Windwalker/Environment/PhpHelper.html", "name": "Windwalker\\Environment\\PhpHelper", "doc": "&quot;The PhpEnvironment class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Environment\\PhpHelper", "fromLink": "Windwalker/Environment/PhpHelper.html", "link": "Windwalker/Environment/PhpHelper.html#method_isWeb", "name": "Windwalker\\Environment\\PhpHelper::isWeb", "doc": "&quot;isWeb&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\PhpHelper", "fromLink": "Windwalker/Environment/PhpHelper.html", "link": "Windwalker/Environment/PhpHelper.html#method_isCli", "name": "Windwalker\\Environment\\PhpHelper::isCli", "doc": "&quot;isCli&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\PhpHelper", "fromLink": "Windwalker/Environment/PhpHelper.html", "link": "Windwalker/Environment/PhpHelper.html#method_isHHVM", "name": "Windwalker\\Environment\\PhpHelper::isHHVM", "doc": "&quot;isHHVM&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\PhpHelper", "fromLink": "Windwalker/Environment/PhpHelper.html", "link": "Windwalker/Environment/PhpHelper.html#method_isPHP", "name": "Windwalker\\Environment\\PhpHelper::isPHP", "doc": "&quot;isPHP&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\PhpHelper", "fromLink": "Windwalker/Environment/PhpHelper.html", "link": "Windwalker/Environment/PhpHelper.html#method_isEmbed", "name": "Windwalker\\Environment\\PhpHelper::isEmbed", "doc": "&quot;isEmbed&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\PhpHelper", "fromLink": "Windwalker/Environment/PhpHelper.html", "link": "Windwalker/Environment/PhpHelper.html#method_getVersion", "name": "Windwalker\\Environment\\PhpHelper::getVersion", "doc": "&quot;Get PHP version&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\PhpHelper", "fromLink": "Windwalker/Environment/PhpHelper.html", "link": "Windwalker/Environment/PhpHelper.html#method_setStrict", "name": "Windwalker\\Environment\\PhpHelper::setStrict", "doc": "&quot;setStrict&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\PhpHelper", "fromLink": "Windwalker/Environment/PhpHelper.html", "link": "Windwalker/Environment/PhpHelper.html#method_setMuted", "name": "Windwalker\\Environment\\PhpHelper::setMuted", "doc": "&quot;setMuted&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\PhpHelper", "fromLink": "Windwalker/Environment/PhpHelper.html", "link": "Windwalker/Environment/PhpHelper.html#method_hasXdebug", "name": "Windwalker\\Environment\\PhpHelper::hasXdebug", "doc": "&quot;Returns true when the runtime used is PHP and Xdebug is loaded.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\PhpHelper", "fromLink": "Windwalker/Environment/PhpHelper.html", "link": "Windwalker/Environment/PhpHelper.html#method_hasPcntl", "name": "Windwalker\\Environment\\PhpHelper::hasPcntl", "doc": "&quot;supportPcntl&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\PhpHelper", "fromLink": "Windwalker/Environment/PhpHelper.html", "link": "Windwalker/Environment/PhpHelper.html#method_hasCurl", "name": "Windwalker\\Environment\\PhpHelper::hasCurl", "doc": "&quot;supportCurl&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\PhpHelper", "fromLink": "Windwalker/Environment/PhpHelper.html", "link": "Windwalker/Environment/PhpHelper.html#method_hasMcrypt", "name": "Windwalker\\Environment\\PhpHelper::hasMcrypt", "doc": "&quot;supportMcrypt&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Environment", "fromLink": "Windwalker/Environment.html", "link": "Windwalker/Environment/Platform.html", "name": "Windwalker\\Environment\\Platform", "doc": "&quot;The Platform class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Environment\\Platform", "fromLink": "Windwalker/Environment/Platform.html", "link": "Windwalker/Environment/Platform.html#method___construct", "name": "Windwalker\\Environment\\Platform::__construct", "doc": "&quot;Platform constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\Platform", "fromLink": "Windwalker/Environment/Platform.html", "link": "Windwalker/Environment/Platform.html#method_isWeb", "name": "Windwalker\\Environment\\Platform::isWeb", "doc": "&quot;isWeb&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\Platform", "fromLink": "Windwalker/Environment/Platform.html", "link": "Windwalker/Environment/Platform.html#method_isCli", "name": "Windwalker\\Environment\\Platform::isCli", "doc": "&quot;isCli&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\Platform", "fromLink": "Windwalker/Environment/Platform.html", "link": "Windwalker/Environment/Platform.html#method_getOS", "name": "Windwalker\\Environment\\Platform::getOS", "doc": "&quot;getOS&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\Platform", "fromLink": "Windwalker/Environment/Platform.html", "link": "Windwalker/Environment/Platform.html#method_isWin", "name": "Windwalker\\Environment\\Platform::isWin", "doc": "&quot;isWin&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\Platform", "fromLink": "Windwalker/Environment/Platform.html", "link": "Windwalker/Environment/Platform.html#method_isUnix", "name": "Windwalker\\Environment\\Platform::isUnix", "doc": "&quot;isUnix&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\Platform", "fromLink": "Windwalker/Environment/Platform.html", "link": "Windwalker/Environment/Platform.html#method_isLinux", "name": "Windwalker\\Environment\\Platform::isLinux", "doc": "&quot;isLinux&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\Platform", "fromLink": "Windwalker/Environment/Platform.html", "link": "Windwalker/Environment/Platform.html#method_setOS", "name": "Windwalker\\Environment\\Platform::setOS", "doc": "&quot;Method to set property os&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\Platform", "fromLink": "Windwalker/Environment/Platform.html", "link": "Windwalker/Environment/Platform.html#method_getUname", "name": "Windwalker\\Environment\\Platform::getUname", "doc": "&quot;Method to get property Uname&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\Platform", "fromLink": "Windwalker/Environment/Platform.html", "link": "Windwalker/Environment/Platform.html#method_setUname", "name": "Windwalker\\Environment\\Platform::setUname", "doc": "&quot;Method to set property uname&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\Platform", "fromLink": "Windwalker/Environment/Platform.html", "link": "Windwalker/Environment/Platform.html#method_getWorkingDirectory", "name": "Windwalker\\Environment\\Platform::getWorkingDirectory", "doc": "&quot;getWorkingDirectory&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\Platform", "fromLink": "Windwalker/Environment/Platform.html", "link": "Windwalker/Environment/Platform.html#method_getRoot", "name": "Windwalker\\Environment\\Platform::getRoot", "doc": "&quot;getRoot&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\Platform", "fromLink": "Windwalker/Environment/Platform.html", "link": "Windwalker/Environment/Platform.html#method_getServerPublicRoot", "name": "Windwalker\\Environment\\Platform::getServerPublicRoot", "doc": "&quot;getDocumentRoot&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\Platform", "fromLink": "Windwalker/Environment/Platform.html", "link": "Windwalker/Environment/Platform.html#method_getEntry", "name": "Windwalker\\Environment\\Platform::getEntry", "doc": "&quot;getEntry&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\Platform", "fromLink": "Windwalker/Environment/Platform.html", "link": "Windwalker/Environment/Platform.html#method_getRequestUri", "name": "Windwalker\\Environment\\Platform::getRequestUri", "doc": "&quot;getRequestUri&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\Platform", "fromLink": "Windwalker/Environment/Platform.html", "link": "Windwalker/Environment/Platform.html#method_getHost", "name": "Windwalker\\Environment\\Platform::getHost", "doc": "&quot;getHost&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\Platform", "fromLink": "Windwalker/Environment/Platform.html", "link": "Windwalker/Environment/Platform.html#method_getPort", "name": "Windwalker\\Environment\\Platform::getPort", "doc": "&quot;getPort&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\Platform", "fromLink": "Windwalker/Environment/Platform.html", "link": "Windwalker/Environment/Platform.html#method_getScheme", "name": "Windwalker\\Environment\\Platform::getScheme", "doc": "&quot;getScheme&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Environment", "fromLink": "Windwalker/Environment.html", "link": "Windwalker/Environment/PlatformHelper.html", "name": "Windwalker\\Environment\\PlatformHelper", "doc": "&quot;The ServerHelper class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Environment\\PlatformHelper", "fromLink": "Windwalker/Environment/PlatformHelper.html", "link": "Windwalker/Environment/PlatformHelper.html#method_isWindows", "name": "Windwalker\\Environment\\PlatformHelper::isWindows", "doc": "&quot;isWindows&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\PlatformHelper", "fromLink": "Windwalker/Environment/PlatformHelper.html", "link": "Windwalker/Environment/PlatformHelper.html#method_isLinux", "name": "Windwalker\\Environment\\PlatformHelper::isLinux", "doc": "&quot;isLinux&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\PlatformHelper", "fromLink": "Windwalker/Environment/PlatformHelper.html", "link": "Windwalker/Environment/PlatformHelper.html#method_isUnix", "name": "Windwalker\\Environment\\PlatformHelper::isUnix", "doc": "&quot;isUnix&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\PlatformHelper", "fromLink": "Windwalker/Environment/PlatformHelper.html", "link": "Windwalker/Environment/PlatformHelper.html#method_getPlatform", "name": "Windwalker\\Environment\\PlatformHelper::getPlatform", "doc": "&quot;getServer&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\PlatformHelper", "fromLink": "Windwalker/Environment/PlatformHelper.html", "link": "Windwalker/Environment/PlatformHelper.html#method_setPlatform", "name": "Windwalker\\Environment\\PlatformHelper::setPlatform", "doc": "&quot;Method to set property server&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Environment", "fromLink": "Windwalker/Environment.html", "link": "Windwalker/Environment/WebEnvironment.html", "name": "Windwalker\\Environment\\WebEnvironment", "doc": "&quot;The WebEnvironment class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Environment\\WebEnvironment", "fromLink": "Windwalker/Environment/WebEnvironment.html", "link": "Windwalker/Environment/WebEnvironment.html#method_create", "name": "Windwalker\\Environment\\WebEnvironment::create", "doc": "&quot;create&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\WebEnvironment", "fromLink": "Windwalker/Environment/WebEnvironment.html", "link": "Windwalker/Environment/WebEnvironment.html#method___construct", "name": "Windwalker\\Environment\\WebEnvironment::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\WebEnvironment", "fromLink": "Windwalker/Environment/WebEnvironment.html", "link": "Windwalker/Environment/WebEnvironment.html#method_getBrowser", "name": "Windwalker\\Environment\\WebEnvironment::getBrowser", "doc": "&quot;Method to get property Browser&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Environment\\WebEnvironment", "fromLink": "Windwalker/Environment/WebEnvironment.html", "link": "Windwalker/Environment/WebEnvironment.html#method_setBrowser", "name": "Windwalker\\Environment\\WebEnvironment::setBrowser", "doc": "&quot;Method to set property Browser&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Event", "fromLink": "Windwalker/Event.html", "link": "Windwalker/Event/Dispatcher.html", "name": "Windwalker\\Event\\Dispatcher", "doc": "&quot;The Dispatcher class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Event\\Dispatcher", "fromLink": "Windwalker/Event/Dispatcher.html", "link": "Windwalker/Event/Dispatcher.html#method_setEvent", "name": "Windwalker\\Event\\Dispatcher::setEvent", "doc": "&quot;Set an event to the dispatcher.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Dispatcher", "fromLink": "Windwalker/Event/Dispatcher.html", "link": "Windwalker/Event/Dispatcher.html#method_addEvent", "name": "Windwalker\\Event\\Dispatcher::addEvent", "doc": "&quot;Add an event to this dispatcher, only if it is not existing.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Dispatcher", "fromLink": "Windwalker/Event/Dispatcher.html", "link": "Windwalker/Event/Dispatcher.html#method_hasEvent", "name": "Windwalker\\Event\\Dispatcher::hasEvent", "doc": "&quot;Tell if the given event has been added to this dispatcher.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Dispatcher", "fromLink": "Windwalker/Event/Dispatcher.html", "link": "Windwalker/Event/Dispatcher.html#method_getEvent", "name": "Windwalker\\Event\\Dispatcher::getEvent", "doc": "&quot;Get the event object identified by the given name.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Dispatcher", "fromLink": "Windwalker/Event/Dispatcher.html", "link": "Windwalker/Event/Dispatcher.html#method_removeEvent", "name": "Windwalker\\Event\\Dispatcher::removeEvent", "doc": "&quot;Remove an event from this dispatcher.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Dispatcher", "fromLink": "Windwalker/Event/Dispatcher.html", "link": "Windwalker/Event/Dispatcher.html#method_getEvents", "name": "Windwalker\\Event\\Dispatcher::getEvents", "doc": "&quot;Get the registered events.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Dispatcher", "fromLink": "Windwalker/Event/Dispatcher.html", "link": "Windwalker/Event/Dispatcher.html#method_clearEvents", "name": "Windwalker\\Event\\Dispatcher::clearEvents", "doc": "&quot;Clear all events.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Dispatcher", "fromLink": "Windwalker/Event/Dispatcher.html", "link": "Windwalker/Event/Dispatcher.html#method_countEvents", "name": "Windwalker\\Event\\Dispatcher::countEvents", "doc": "&quot;Count the number of registered event.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Dispatcher", "fromLink": "Windwalker/Event/Dispatcher.html", "link": "Windwalker/Event/Dispatcher.html#method_addListener", "name": "Windwalker\\Event\\Dispatcher::addListener", "doc": "&quot;Add a listener to this dispatcher, only if not already registered to these events.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Dispatcher", "fromLink": "Windwalker/Event/Dispatcher.html", "link": "Windwalker/Event/Dispatcher.html#method_listen", "name": "Windwalker\\Event\\Dispatcher::listen", "doc": "&quot;on&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Dispatcher", "fromLink": "Windwalker/Event/Dispatcher.html", "link": "Windwalker/Event/Dispatcher.html#method_getListenerPriority", "name": "Windwalker\\Event\\Dispatcher::getListenerPriority", "doc": "&quot;Get the priority of the given listener for the given event.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Dispatcher", "fromLink": "Windwalker/Event/Dispatcher.html", "link": "Windwalker/Event/Dispatcher.html#method_getListeners", "name": "Windwalker\\Event\\Dispatcher::getListeners", "doc": "&quot;Get the listeners registered to the given event.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Dispatcher", "fromLink": "Windwalker/Event/Dispatcher.html", "link": "Windwalker/Event/Dispatcher.html#method_hasListener", "name": "Windwalker\\Event\\Dispatcher::hasListener", "doc": "&quot;Tell if the given listener has been added.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Dispatcher", "fromLink": "Windwalker/Event/Dispatcher.html", "link": "Windwalker/Event/Dispatcher.html#method_removeListener", "name": "Windwalker\\Event\\Dispatcher::removeListener", "doc": "&quot;Remove the given listener from this dispatcher.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Dispatcher", "fromLink": "Windwalker/Event/Dispatcher.html", "link": "Windwalker/Event/Dispatcher.html#method_clearListeners", "name": "Windwalker\\Event\\Dispatcher::clearListeners", "doc": "&quot;Clear the listeners in this dispatcher.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Dispatcher", "fromLink": "Windwalker/Event/Dispatcher.html", "link": "Windwalker/Event/Dispatcher.html#method_countListeners", "name": "Windwalker\\Event\\Dispatcher::countListeners", "doc": "&quot;Count the number of registered listeners for the given event.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Dispatcher", "fromLink": "Windwalker/Event/Dispatcher.html", "link": "Windwalker/Event/Dispatcher.html#method_triggerEvent", "name": "Windwalker\\Event\\Dispatcher::triggerEvent", "doc": "&quot;Trigger an event.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Event", "fromLink": "Windwalker/Event.html", "link": "Windwalker/Event/DispatcherAwareInterface.html", "name": "Windwalker\\Event\\DispatcherAwareInterface", "doc": "&quot;Interface DispatcherAwareInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Event\\DispatcherAwareInterface", "fromLink": "Windwalker/Event/DispatcherAwareInterface.html", "link": "Windwalker/Event/DispatcherAwareInterface.html#method_getDispatcher", "name": "Windwalker\\Event\\DispatcherAwareInterface::getDispatcher", "doc": "&quot;getDispatcher&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\DispatcherAwareInterface", "fromLink": "Windwalker/Event/DispatcherAwareInterface.html", "link": "Windwalker/Event/DispatcherAwareInterface.html#method_setDispatcher", "name": "Windwalker\\Event\\DispatcherAwareInterface::setDispatcher", "doc": "&quot;setDispatcher&quot;"},
            
            {"type": "Trait", "fromName": "Windwalker\\Event", "fromLink": "Windwalker/Event.html", "link": "Windwalker/Event/DispatcherAwareTrait.html", "name": "Windwalker\\Event\\DispatcherAwareTrait", "doc": "&quot;Class DispatcherAwareTrait&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Event\\DispatcherAwareTrait", "fromLink": "Windwalker/Event/DispatcherAwareTrait.html", "link": "Windwalker/Event/DispatcherAwareTrait.html#method_triggerEvent", "name": "Windwalker\\Event\\DispatcherAwareTrait::triggerEvent", "doc": "&quot;Trigger an event.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\DispatcherAwareTrait", "fromLink": "Windwalker/Event/DispatcherAwareTrait.html", "link": "Windwalker/Event/DispatcherAwareTrait.html#method_getDispatcher", "name": "Windwalker\\Event\\DispatcherAwareTrait::getDispatcher", "doc": "&quot;getDispatcher&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\DispatcherAwareTrait", "fromLink": "Windwalker/Event/DispatcherAwareTrait.html", "link": "Windwalker/Event/DispatcherAwareTrait.html#method_setDispatcher", "name": "Windwalker\\Event\\DispatcherAwareTrait::setDispatcher", "doc": "&quot;setDispatcher&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Event", "fromLink": "Windwalker/Event.html", "link": "Windwalker/Event/DispatcherInterface.html", "name": "Windwalker\\Event\\DispatcherInterface", "doc": "&quot;Interface DispatcherInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Event\\DispatcherInterface", "fromLink": "Windwalker/Event/DispatcherInterface.html", "link": "Windwalker/Event/DispatcherInterface.html#method_addListener", "name": "Windwalker\\Event\\DispatcherInterface::addListener", "doc": "&quot;Add a listener to this dispatcher, only if not already registered to these events.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\DispatcherInterface", "fromLink": "Windwalker/Event/DispatcherInterface.html", "link": "Windwalker/Event/DispatcherInterface.html#method_listen", "name": "Windwalker\\Event\\DispatcherInterface::listen", "doc": "&quot;Add single listener.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Event", "fromLink": "Windwalker/Event.html", "link": "Windwalker/Event/Event.html", "name": "Windwalker\\Event\\Event", "doc": "&quot;Class Event&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Event\\Event", "fromLink": "Windwalker/Event/Event.html", "link": "Windwalker/Event/Event.html#method___construct", "name": "Windwalker\\Event\\Event::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Event", "fromLink": "Windwalker/Event/Event.html", "link": "Windwalker/Event/Event.html#method_getName", "name": "Windwalker\\Event\\Event::getName", "doc": "&quot;Get the event name.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Event", "fromLink": "Windwalker/Event/Event.html", "link": "Windwalker/Event/Event.html#method_setName", "name": "Windwalker\\Event\\Event::setName", "doc": "&quot;Method to set property name&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Event", "fromLink": "Windwalker/Event/Event.html", "link": "Windwalker/Event/Event.html#method_getArgument", "name": "Windwalker\\Event\\Event::getArgument", "doc": "&quot;Get an event argument value.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Event", "fromLink": "Windwalker/Event/Event.html", "link": "Windwalker/Event/Event.html#method_hasArgument", "name": "Windwalker\\Event\\Event::hasArgument", "doc": "&quot;Tell if the given event argument exists.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Event", "fromLink": "Windwalker/Event/Event.html", "link": "Windwalker/Event/Event.html#method_getArguments", "name": "Windwalker\\Event\\Event::getArguments", "doc": "&quot;Get all event arguments.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Event", "fromLink": "Windwalker/Event/Event.html", "link": "Windwalker/Event/Event.html#method_setArguments", "name": "Windwalker\\Event\\Event::setArguments", "doc": "&quot;Method to set property arguments&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Event", "fromLink": "Windwalker/Event/Event.html", "link": "Windwalker/Event/Event.html#method_addArgument", "name": "Windwalker\\Event\\Event::addArgument", "doc": "&quot;Add an event argument, only if it is not existing.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Event", "fromLink": "Windwalker/Event/Event.html", "link": "Windwalker/Event/Event.html#method_setArgument", "name": "Windwalker\\Event\\Event::setArgument", "doc": "&quot;Set the value of an event argument.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Event", "fromLink": "Windwalker/Event/Event.html", "link": "Windwalker/Event/Event.html#method_mergeArguments", "name": "Windwalker\\Event\\Event::mergeArguments", "doc": "&quot;mergeArguments&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Event", "fromLink": "Windwalker/Event/Event.html", "link": "Windwalker/Event/Event.html#method_removeArgument", "name": "Windwalker\\Event\\Event::removeArgument", "doc": "&quot;Remove an event argument.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Event", "fromLink": "Windwalker/Event/Event.html", "link": "Windwalker/Event/Event.html#method_clearArguments", "name": "Windwalker\\Event\\Event::clearArguments", "doc": "&quot;Clear all event arguments.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Event", "fromLink": "Windwalker/Event/Event.html", "link": "Windwalker/Event/Event.html#method_stop", "name": "Windwalker\\Event\\Event::stop", "doc": "&quot;Stop the event propagation.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Event", "fromLink": "Windwalker/Event/Event.html", "link": "Windwalker/Event/Event.html#method_isStopped", "name": "Windwalker\\Event\\Event::isStopped", "doc": "&quot;Tell if the event propagation is stopped.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Event", "fromLink": "Windwalker/Event/Event.html", "link": "Windwalker/Event/Event.html#method_count", "name": "Windwalker\\Event\\Event::count", "doc": "&quot;Count the number of arguments.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Event", "fromLink": "Windwalker/Event/Event.html", "link": "Windwalker/Event/Event.html#method_serialize", "name": "Windwalker\\Event\\Event::serialize", "doc": "&quot;Serialize the event.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Event", "fromLink": "Windwalker/Event/Event.html", "link": "Windwalker/Event/Event.html#method_unserialize", "name": "Windwalker\\Event\\Event::unserialize", "doc": "&quot;Unserialize the event.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Event", "fromLink": "Windwalker/Event/Event.html", "link": "Windwalker/Event/Event.html#method_offsetExists", "name": "Windwalker\\Event\\Event::offsetExists", "doc": "&quot;Tell if the given event argument exists.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Event", "fromLink": "Windwalker/Event/Event.html", "link": "Windwalker/Event/Event.html#method_offsetGet", "name": "Windwalker\\Event\\Event::offsetGet", "doc": "&quot;Get an event argument value.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Event", "fromLink": "Windwalker/Event/Event.html", "link": "Windwalker/Event/Event.html#method_offsetSet", "name": "Windwalker\\Event\\Event::offsetSet", "doc": "&quot;Set the value of an event argument.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\Event", "fromLink": "Windwalker/Event/Event.html", "link": "Windwalker/Event/Event.html#method_offsetUnset", "name": "Windwalker\\Event\\Event::offsetUnset", "doc": "&quot;Remove an event argument.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Event", "fromLink": "Windwalker/Event.html", "link": "Windwalker/Event/EventInterface.html", "name": "Windwalker\\Event\\EventInterface", "doc": "&quot;Class EventInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Event\\EventInterface", "fromLink": "Windwalker/Event/EventInterface.html", "link": "Windwalker/Event/EventInterface.html#method_getName", "name": "Windwalker\\Event\\EventInterface::getName", "doc": "&quot;Get the event name.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\EventInterface", "fromLink": "Windwalker/Event/EventInterface.html", "link": "Windwalker/Event/EventInterface.html#method_isStopped", "name": "Windwalker\\Event\\EventInterface::isStopped", "doc": "&quot;Tell if the event propagation is stopped.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Event", "fromLink": "Windwalker/Event.html", "link": "Windwalker/Event/EventTriggerableInterface.html", "name": "Windwalker\\Event\\EventTriggerableInterface", "doc": "&quot;The EventTriggerableInterface interface.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Event\\EventTriggerableInterface", "fromLink": "Windwalker/Event/EventTriggerableInterface.html", "link": "Windwalker/Event/EventTriggerableInterface.html#method_triggerEvent", "name": "Windwalker\\Event\\EventTriggerableInterface::triggerEvent", "doc": "&quot;Trigger an event.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Event", "fromLink": "Windwalker/Event.html", "link": "Windwalker/Event/ListenerMapper.html", "name": "Windwalker\\Event\\ListenerMapper", "doc": "&quot;The DispatcherMapper class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Event\\ListenerMapper", "fromLink": "Windwalker/Event/ListenerMapper.html", "link": "Windwalker/Event/ListenerMapper.html#method_register", "name": "Windwalker\\Event\\ListenerMapper::register", "doc": "&quot;mapListener&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\ListenerMapper", "fromLink": "Windwalker/Event/ListenerMapper.html", "link": "Windwalker/Event/ListenerMapper.html#method_add", "name": "Windwalker\\Event\\ListenerMapper::add", "doc": "&quot;add&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Event", "fromLink": "Windwalker/Event.html", "link": "Windwalker/Event/ListenerPriority.html", "name": "Windwalker\\Event\\ListenerPriority", "doc": "&quot;The ListenerPriority class.&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Event", "fromLink": "Windwalker/Event.html", "link": "Windwalker/Event/ListenersQueue.html", "name": "Windwalker\\Event\\ListenersQueue", "doc": "&quot;Class ListenerPriorityQueue&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Event\\ListenersQueue", "fromLink": "Windwalker/Event/ListenersQueue.html", "link": "Windwalker/Event/ListenersQueue.html#method___construct", "name": "Windwalker\\Event\\ListenersQueue::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\ListenersQueue", "fromLink": "Windwalker/Event/ListenersQueue.html", "link": "Windwalker/Event/ListenersQueue.html#method_add", "name": "Windwalker\\Event\\ListenersQueue::add", "doc": "&quot;Add a listener with the given priority only if not already present.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\ListenersQueue", "fromLink": "Windwalker/Event/ListenersQueue.html", "link": "Windwalker/Event/ListenersQueue.html#method_remove", "name": "Windwalker\\Event\\ListenersQueue::remove", "doc": "&quot;Remove a listener from the queue.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\ListenersQueue", "fromLink": "Windwalker/Event/ListenersQueue.html", "link": "Windwalker/Event/ListenersQueue.html#method_has", "name": "Windwalker\\Event\\ListenersQueue::has", "doc": "&quot;Tell if the listener exists in the queue.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\ListenersQueue", "fromLink": "Windwalker/Event/ListenersQueue.html", "link": "Windwalker/Event/ListenersQueue.html#method_getPriority", "name": "Windwalker\\Event\\ListenersQueue::getPriority", "doc": "&quot;Get the priority of the given listener.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\ListenersQueue", "fromLink": "Windwalker/Event/ListenersQueue.html", "link": "Windwalker/Event/ListenersQueue.html#method_getAll", "name": "Windwalker\\Event\\ListenersQueue::getAll", "doc": "&quot;Get all listeners contained in this queue, sorted according to their priority.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\ListenersQueue", "fromLink": "Windwalker/Event/ListenersQueue.html", "link": "Windwalker/Event/ListenersQueue.html#method_getIterator", "name": "Windwalker\\Event\\ListenersQueue::getIterator", "doc": "&quot;Get the inner queue with its cursor on top of the heap.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Event\\ListenersQueue", "fromLink": "Windwalker/Event/ListenersQueue.html", "link": "Windwalker/Event/ListenersQueue.html#method_count", "name": "Windwalker\\Event\\ListenersQueue::count", "doc": "&quot;Count the number of listeners in the queue.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Filesystem\\Comparator", "fromLink": "Windwalker/Filesystem/Comparator.html", "link": "Windwalker/Filesystem/Comparator/FileComparatorInterface.html", "name": "Windwalker\\Filesystem\\Comparator\\FileComparatorInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Filesystem\\Comparator\\FileComparatorInterface", "fromLink": "Windwalker/Filesystem/Comparator/FileComparatorInterface.html", "link": "Windwalker/Filesystem/Comparator/FileComparatorInterface.html#method_compare", "name": "Windwalker\\Filesystem\\Comparator\\FileComparatorInterface::compare", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Filesystem\\Exception", "fromLink": "Windwalker/Filesystem/Exception.html", "link": "Windwalker/Filesystem/Exception/FilesystemException.html", "name": "Windwalker\\Filesystem\\Exception\\FilesystemException", "doc": "&quot;Exception class for handling errors in the Filesystem package&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Filesystem", "fromLink": "Windwalker/Filesystem.html", "link": "Windwalker/Filesystem/File.html", "name": "Windwalker\\Filesystem\\File", "doc": "&quot;A File handling class&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Filesystem\\File", "fromLink": "Windwalker/Filesystem/File.html", "link": "Windwalker/Filesystem/File.html#method_stripExtension", "name": "Windwalker\\Filesystem\\File::stripExtension", "doc": "&quot;Strips the last extension off of a file name&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\File", "fromLink": "Windwalker/Filesystem/File.html", "link": "Windwalker/Filesystem/File.html#method_getExtension", "name": "Windwalker\\Filesystem\\File::getExtension", "doc": "&quot;getExtension&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\File", "fromLink": "Windwalker/Filesystem/File.html", "link": "Windwalker/Filesystem/File.html#method_getFilename", "name": "Windwalker\\Filesystem\\File::getFilename", "doc": "&quot;Get file name from a path.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\File", "fromLink": "Windwalker/Filesystem/File.html", "link": "Windwalker/Filesystem/File.html#method_makeSafe", "name": "Windwalker\\Filesystem\\File::makeSafe", "doc": "&quot;Makes the file name safe to use&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\File", "fromLink": "Windwalker/Filesystem/File.html", "link": "Windwalker/Filesystem/File.html#method_copy", "name": "Windwalker\\Filesystem\\File::copy", "doc": "&quot;Copies a file&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\File", "fromLink": "Windwalker/Filesystem/File.html", "link": "Windwalker/Filesystem/File.html#method_delete", "name": "Windwalker\\Filesystem\\File::delete", "doc": "&quot;Delete a file or array of files&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\File", "fromLink": "Windwalker/Filesystem/File.html", "link": "Windwalker/Filesystem/File.html#method_move", "name": "Windwalker\\Filesystem\\File::move", "doc": "&quot;Moves a file&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\File", "fromLink": "Windwalker/Filesystem/File.html", "link": "Windwalker/Filesystem/File.html#method_write", "name": "Windwalker\\Filesystem\\File::write", "doc": "&quot;Write contents to a file&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\File", "fromLink": "Windwalker/Filesystem/File.html", "link": "Windwalker/Filesystem/File.html#method_upload", "name": "Windwalker\\Filesystem\\File::upload", "doc": "&quot;Moves an uploaded file to a destination folder&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Filesystem", "fromLink": "Windwalker/Filesystem.html", "link": "Windwalker/Filesystem/Filesystem.html", "name": "Windwalker\\Filesystem\\Filesystem", "doc": "&quot;Class Filesystem&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Filesystem\\Filesystem", "fromLink": "Windwalker/Filesystem/Filesystem.html", "link": "Windwalker/Filesystem/Filesystem.html#method_copy", "name": "Windwalker\\Filesystem\\Filesystem::copy", "doc": "&quot;copy&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Filesystem", "fromLink": "Windwalker/Filesystem/Filesystem.html", "link": "Windwalker/Filesystem/Filesystem.html#method_move", "name": "Windwalker\\Filesystem\\Filesystem::move", "doc": "&quot;move&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Filesystem", "fromLink": "Windwalker/Filesystem/Filesystem.html", "link": "Windwalker/Filesystem/Filesystem.html#method_delete", "name": "Windwalker\\Filesystem\\Filesystem::delete", "doc": "&quot;delete&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Filesystem", "fromLink": "Windwalker/Filesystem/Filesystem.html", "link": "Windwalker/Filesystem/Filesystem.html#method_files", "name": "Windwalker\\Filesystem\\Filesystem::files", "doc": "&quot;files&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Filesystem", "fromLink": "Windwalker/Filesystem/Filesystem.html", "link": "Windwalker/Filesystem/Filesystem.html#method_folders", "name": "Windwalker\\Filesystem\\Filesystem::folders", "doc": "&quot;folders&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Filesystem", "fromLink": "Windwalker/Filesystem/Filesystem.html", "link": "Windwalker/Filesystem/Filesystem.html#method_items", "name": "Windwalker\\Filesystem\\Filesystem::items", "doc": "&quot;items&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Filesystem", "fromLink": "Windwalker/Filesystem/Filesystem.html", "link": "Windwalker/Filesystem/Filesystem.html#method_findOne", "name": "Windwalker\\Filesystem\\Filesystem::findOne", "doc": "&quot;Find one file and return.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Filesystem", "fromLink": "Windwalker/Filesystem/Filesystem.html", "link": "Windwalker/Filesystem/Filesystem.html#method_find", "name": "Windwalker\\Filesystem\\Filesystem::find", "doc": "&quot;Find all files which matches condition.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Filesystem", "fromLink": "Windwalker/Filesystem/Filesystem.html", "link": "Windwalker/Filesystem/Filesystem.html#method_findByCallback", "name": "Windwalker\\Filesystem\\Filesystem::findByCallback", "doc": "&quot;Using a closure function to filter file.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Filesystem", "fromLink": "Windwalker/Filesystem/Filesystem.html", "link": "Windwalker/Filesystem/Filesystem.html#method_createIterator", "name": "Windwalker\\Filesystem\\Filesystem::createIterator", "doc": "&quot;Create file iterator of current dir.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Filesystem", "fromLink": "Windwalker/Filesystem/Filesystem.html", "link": "Windwalker/Filesystem/Filesystem.html#method_iteratorToArray", "name": "Windwalker\\Filesystem\\Filesystem::iteratorToArray", "doc": "&quot;iteratorToArray&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Filesystem", "fromLink": "Windwalker/Filesystem.html", "link": "Windwalker/Filesystem/Folder.html", "name": "Windwalker\\Filesystem\\Folder", "doc": "&quot;A Folder handling class&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Filesystem\\Folder", "fromLink": "Windwalker/Filesystem/Folder.html", "link": "Windwalker/Filesystem/Folder.html#method_copy", "name": "Windwalker\\Filesystem\\Folder::copy", "doc": "&quot;Copy a folder.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Folder", "fromLink": "Windwalker/Filesystem/Folder.html", "link": "Windwalker/Filesystem/Folder.html#method_create", "name": "Windwalker\\Filesystem\\Folder::create", "doc": "&quot;Create a folder -- and all necessary parent folders.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Folder", "fromLink": "Windwalker/Filesystem/Folder.html", "link": "Windwalker/Filesystem/Folder.html#method_delete", "name": "Windwalker\\Filesystem\\Folder::delete", "doc": "&quot;Delete a folder.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Folder", "fromLink": "Windwalker/Filesystem/Folder.html", "link": "Windwalker/Filesystem/Folder.html#method_move", "name": "Windwalker\\Filesystem\\Folder::move", "doc": "&quot;Moves a folder.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Folder", "fromLink": "Windwalker/Filesystem/Folder.html", "link": "Windwalker/Filesystem/Folder.html#method_files", "name": "Windwalker\\Filesystem\\Folder::files", "doc": "&quot;files&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Folder", "fromLink": "Windwalker/Filesystem/Folder.html", "link": "Windwalker/Filesystem/Folder.html#method_items", "name": "Windwalker\\Filesystem\\Folder::items", "doc": "&quot;items&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Folder", "fromLink": "Windwalker/Filesystem/Folder.html", "link": "Windwalker/Filesystem/Folder.html#method_folders", "name": "Windwalker\\Filesystem\\Folder::folders", "doc": "&quot;folders&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Folder", "fromLink": "Windwalker/Filesystem/Folder.html", "link": "Windwalker/Filesystem/Folder.html#method_listFolderTree", "name": "Windwalker\\Filesystem\\Folder::listFolderTree", "doc": "&quot;Lists folder in format suitable for tree display.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Folder", "fromLink": "Windwalker/Filesystem/Folder.html", "link": "Windwalker/Filesystem/Folder.html#method_makeSafe", "name": "Windwalker\\Filesystem\\Folder::makeSafe", "doc": "&quot;Makes path name safe to use.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Filesystem\\Iterator", "fromLink": "Windwalker/Filesystem/Iterator.html", "link": "Windwalker/Filesystem/Iterator/ArrayObject.html", "name": "Windwalker\\Filesystem\\Iterator\\ArrayObject", "doc": "&quot;The ArrayObject class. Based on ZF2.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Filesystem\\Iterator\\ArrayObject", "fromLink": "Windwalker/Filesystem/Iterator/ArrayObject.html", "link": "Windwalker/Filesystem/Iterator/ArrayObject.html#method___construct", "name": "Windwalker\\Filesystem\\Iterator\\ArrayObject::__construct", "doc": "&quot;Constructor&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Iterator\\ArrayObject", "fromLink": "Windwalker/Filesystem/Iterator/ArrayObject.html", "link": "Windwalker/Filesystem/Iterator/ArrayObject.html#method___isset", "name": "Windwalker\\Filesystem\\Iterator\\ArrayObject::__isset", "doc": "&quot;Returns whether the requested key exists&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Iterator\\ArrayObject", "fromLink": "Windwalker/Filesystem/Iterator/ArrayObject.html", "link": "Windwalker/Filesystem/Iterator/ArrayObject.html#method___set", "name": "Windwalker\\Filesystem\\Iterator\\ArrayObject::__set", "doc": "&quot;Sets the value at the specified key to value&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Iterator\\ArrayObject", "fromLink": "Windwalker/Filesystem/Iterator/ArrayObject.html", "link": "Windwalker/Filesystem/Iterator/ArrayObject.html#method___unset", "name": "Windwalker\\Filesystem\\Iterator\\ArrayObject::__unset", "doc": "&quot;Unsets the value at the specified key&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Iterator\\ArrayObject", "fromLink": "Windwalker/Filesystem/Iterator/ArrayObject.html", "link": "Windwalker/Filesystem/Iterator/ArrayObject.html#method___get", "name": "Windwalker\\Filesystem\\Iterator\\ArrayObject::__get", "doc": "&quot;Returns the value at the specified key by reference&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Iterator\\ArrayObject", "fromLink": "Windwalker/Filesystem/Iterator/ArrayObject.html", "link": "Windwalker/Filesystem/Iterator/ArrayObject.html#method_append", "name": "Windwalker\\Filesystem\\Iterator\\ArrayObject::append", "doc": "&quot;Appends the value&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Iterator\\ArrayObject", "fromLink": "Windwalker/Filesystem/Iterator/ArrayObject.html", "link": "Windwalker/Filesystem/Iterator/ArrayObject.html#method_asort", "name": "Windwalker\\Filesystem\\Iterator\\ArrayObject::asort", "doc": "&quot;Sort the entries by value&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Iterator\\ArrayObject", "fromLink": "Windwalker/Filesystem/Iterator/ArrayObject.html", "link": "Windwalker/Filesystem/Iterator/ArrayObject.html#method_count", "name": "Windwalker\\Filesystem\\Iterator\\ArrayObject::count", "doc": "&quot;Get the number of public properties in the ArrayObject&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Iterator\\ArrayObject", "fromLink": "Windwalker/Filesystem/Iterator/ArrayObject.html", "link": "Windwalker/Filesystem/Iterator/ArrayObject.html#method_exchangeArray", "name": "Windwalker\\Filesystem\\Iterator\\ArrayObject::exchangeArray", "doc": "&quot;Exchange the array for another one.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Iterator\\ArrayObject", "fromLink": "Windwalker/Filesystem/Iterator/ArrayObject.html", "link": "Windwalker/Filesystem/Iterator/ArrayObject.html#method_getArrayCopy", "name": "Windwalker\\Filesystem\\Iterator\\ArrayObject::getArrayCopy", "doc": "&quot;Creates a copy of the ArrayObject.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Iterator\\ArrayObject", "fromLink": "Windwalker/Filesystem/Iterator/ArrayObject.html", "link": "Windwalker/Filesystem/Iterator/ArrayObject.html#method_getFlags", "name": "Windwalker\\Filesystem\\Iterator\\ArrayObject::getFlags", "doc": "&quot;Gets the behavior flags.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Iterator\\ArrayObject", "fromLink": "Windwalker/Filesystem/Iterator/ArrayObject.html", "link": "Windwalker/Filesystem/Iterator/ArrayObject.html#method_getIterator", "name": "Windwalker\\Filesystem\\Iterator\\ArrayObject::getIterator", "doc": "&quot;Create a new iterator from an ArrayObject instance&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Iterator\\ArrayObject", "fromLink": "Windwalker/Filesystem/Iterator/ArrayObject.html", "link": "Windwalker/Filesystem/Iterator/ArrayObject.html#method_getIteratorClass", "name": "Windwalker\\Filesystem\\Iterator\\ArrayObject::getIteratorClass", "doc": "&quot;Gets the iterator classname for the ArrayObject.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Iterator\\ArrayObject", "fromLink": "Windwalker/Filesystem/Iterator/ArrayObject.html", "link": "Windwalker/Filesystem/Iterator/ArrayObject.html#method_ksort", "name": "Windwalker\\Filesystem\\Iterator\\ArrayObject::ksort", "doc": "&quot;Sort the entries by key&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Iterator\\ArrayObject", "fromLink": "Windwalker/Filesystem/Iterator/ArrayObject.html", "link": "Windwalker/Filesystem/Iterator/ArrayObject.html#method_natcasesort", "name": "Windwalker\\Filesystem\\Iterator\\ArrayObject::natcasesort", "doc": "&quot;Sort an array using a case insensitive \&quot;natural order\&quot; algorithm&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Iterator\\ArrayObject", "fromLink": "Windwalker/Filesystem/Iterator/ArrayObject.html", "link": "Windwalker/Filesystem/Iterator/ArrayObject.html#method_natsort", "name": "Windwalker\\Filesystem\\Iterator\\ArrayObject::natsort", "doc": "&quot;Sort entries using a \&quot;natural order\&quot; algorithm&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Iterator\\ArrayObject", "fromLink": "Windwalker/Filesystem/Iterator/ArrayObject.html", "link": "Windwalker/Filesystem/Iterator/ArrayObject.html#method_offsetExists", "name": "Windwalker\\Filesystem\\Iterator\\ArrayObject::offsetExists", "doc": "&quot;Returns whether the requested key exists&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Iterator\\ArrayObject", "fromLink": "Windwalker/Filesystem/Iterator/ArrayObject.html", "link": "Windwalker/Filesystem/Iterator/ArrayObject.html#method_offsetGet", "name": "Windwalker\\Filesystem\\Iterator\\ArrayObject::offsetGet", "doc": "&quot;Returns the value at the specified key&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Iterator\\ArrayObject", "fromLink": "Windwalker/Filesystem/Iterator/ArrayObject.html", "link": "Windwalker/Filesystem/Iterator/ArrayObject.html#method_offsetSet", "name": "Windwalker\\Filesystem\\Iterator\\ArrayObject::offsetSet", "doc": "&quot;Sets the value at the specified key to value&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Iterator\\ArrayObject", "fromLink": "Windwalker/Filesystem/Iterator/ArrayObject.html", "link": "Windwalker/Filesystem/Iterator/ArrayObject.html#method_offsetUnset", "name": "Windwalker\\Filesystem\\Iterator\\ArrayObject::offsetUnset", "doc": "&quot;Unsets the value at the specified key&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Iterator\\ArrayObject", "fromLink": "Windwalker/Filesystem/Iterator/ArrayObject.html", "link": "Windwalker/Filesystem/Iterator/ArrayObject.html#method_serialize", "name": "Windwalker\\Filesystem\\Iterator\\ArrayObject::serialize", "doc": "&quot;Serialize an ArrayObject&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Iterator\\ArrayObject", "fromLink": "Windwalker/Filesystem/Iterator/ArrayObject.html", "link": "Windwalker/Filesystem/Iterator/ArrayObject.html#method_setFlags", "name": "Windwalker\\Filesystem\\Iterator\\ArrayObject::setFlags", "doc": "&quot;Sets the behavior flags&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Iterator\\ArrayObject", "fromLink": "Windwalker/Filesystem/Iterator/ArrayObject.html", "link": "Windwalker/Filesystem/Iterator/ArrayObject.html#method_setIteratorClass", "name": "Windwalker\\Filesystem\\Iterator\\ArrayObject::setIteratorClass", "doc": "&quot;Sets the iterator classname for the ArrayObject&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Iterator\\ArrayObject", "fromLink": "Windwalker/Filesystem/Iterator/ArrayObject.html", "link": "Windwalker/Filesystem/Iterator/ArrayObject.html#method_uasort", "name": "Windwalker\\Filesystem\\Iterator\\ArrayObject::uasort", "doc": "&quot;Sort the entries with a user-defined comparison function and maintain key association&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Iterator\\ArrayObject", "fromLink": "Windwalker/Filesystem/Iterator/ArrayObject.html", "link": "Windwalker/Filesystem/Iterator/ArrayObject.html#method_uksort", "name": "Windwalker\\Filesystem\\Iterator\\ArrayObject::uksort", "doc": "&quot;Sort the entries by keys using a user-defined comparison function&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Iterator\\ArrayObject", "fromLink": "Windwalker/Filesystem/Iterator/ArrayObject.html", "link": "Windwalker/Filesystem/Iterator/ArrayObject.html#method_unserialize", "name": "Windwalker\\Filesystem\\Iterator\\ArrayObject::unserialize", "doc": "&quot;Unserialize an ArrayObject&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Filesystem\\Iterator", "fromLink": "Windwalker/Filesystem/Iterator.html", "link": "Windwalker/Filesystem/Iterator/RecursiveDirectoryIterator.html", "name": "Windwalker\\Filesystem\\Iterator\\RecursiveDirectoryIterator", "doc": "&quot;A Directory iterator extends from SPL RecursiveDirectoryIterator.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Filesystem\\Iterator\\RecursiveDirectoryIterator", "fromLink": "Windwalker/Filesystem/Iterator/RecursiveDirectoryIterator.html", "link": "Windwalker/Filesystem/Iterator/RecursiveDirectoryIterator.html#method_current", "name": "Windwalker\\Filesystem\\Iterator\\RecursiveDirectoryIterator::current", "doc": "&quot;Get file information of the current element.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Filesystem", "fromLink": "Windwalker/Filesystem.html", "link": "Windwalker/Filesystem/Path.html", "name": "Windwalker\\Filesystem\\Path", "doc": "&quot;A Path handling class&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path", "fromLink": "Windwalker/Filesystem/Path.html", "link": "Windwalker/Filesystem/Path.html#method_canChmod", "name": "Windwalker\\Filesystem\\Path::canChmod", "doc": "&quot;Checks if a path&#039;s permissions can be changed.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path", "fromLink": "Windwalker/Filesystem/Path.html", "link": "Windwalker/Filesystem/Path.html#method_setPermissions", "name": "Windwalker\\Filesystem\\Path::setPermissions", "doc": "&quot;Chmods files and directories recursively to given permissions.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path", "fromLink": "Windwalker/Filesystem/Path.html", "link": "Windwalker/Filesystem/Path.html#method_getPermissions", "name": "Windwalker\\Filesystem\\Path::getPermissions", "doc": "&quot;Get the permissions of the file\/folder at a give path.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path", "fromLink": "Windwalker/Filesystem/Path.html", "link": "Windwalker/Filesystem/Path.html#method_check", "name": "Windwalker\\Filesystem\\Path::check", "doc": "&quot;Checks for snooping outside of the file system root.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path", "fromLink": "Windwalker/Filesystem/Path.html", "link": "Windwalker/Filesystem/Path.html#method_clean", "name": "Windwalker\\Filesystem\\Path::clean", "doc": "&quot;Function to strip additional \/ or \\ in a path name.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path", "fromLink": "Windwalker/Filesystem/Path.html", "link": "Windwalker/Filesystem/Path.html#method_normalize", "name": "Windwalker\\Filesystem\\Path::normalize", "doc": "&quot;Normalize a path. This method will do clean() first to replace slashes and remove &#039;.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path", "fromLink": "Windwalker/Filesystem/Path.html", "link": "Windwalker/Filesystem/Path.html#method_find", "name": "Windwalker\\Filesystem\\Path::find", "doc": "&quot;Searches the directory paths for a given file.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Filesystem\\Path", "fromLink": "Windwalker/Filesystem/Path.html", "link": "Windwalker/Filesystem/Path/PathCollection.html", "name": "Windwalker\\Filesystem\\Path\\PathCollection", "doc": "&quot;A PathLocator collection class&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathCollection", "fromLink": "Windwalker/Filesystem/Path/PathCollection.html", "link": "Windwalker/Filesystem/Path/PathCollection.html#method___construct", "name": "Windwalker\\Filesystem\\Path\\PathCollection::__construct", "doc": "&quot;PathCollection constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathCollection", "fromLink": "Windwalker/Filesystem/Path/PathCollection.html", "link": "Windwalker/Filesystem/Path/PathCollection.html#method_addPaths", "name": "Windwalker\\Filesystem\\Path\\PathCollection::addPaths", "doc": "&quot;Batch add paths to bag.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathCollection", "fromLink": "Windwalker/Filesystem/Path/PathCollection.html", "link": "Windwalker/Filesystem/Path/PathCollection.html#method_addPath", "name": "Windwalker\\Filesystem\\Path\\PathCollection::addPath", "doc": "&quot;Add one path to bag.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathCollection", "fromLink": "Windwalker/Filesystem/Path/PathCollection.html", "link": "Windwalker/Filesystem/Path/PathCollection.html#method_removePath", "name": "Windwalker\\Filesystem\\Path\\PathCollection::removePath", "doc": "&quot;Using key to remove a path from bag.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathCollection", "fromLink": "Windwalker/Filesystem/Path/PathCollection.html", "link": "Windwalker/Filesystem/Path/PathCollection.html#method_getPaths", "name": "Windwalker\\Filesystem\\Path\\PathCollection::getPaths", "doc": "&quot;Get all paths with key from bag.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathCollection", "fromLink": "Windwalker/Filesystem/Path/PathCollection.html", "link": "Windwalker/Filesystem/Path/PathCollection.html#method_getPath", "name": "Windwalker\\Filesystem\\Path\\PathCollection::getPath", "doc": "&quot;Using key to get a path.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathCollection", "fromLink": "Windwalker/Filesystem/Path/PathCollection.html", "link": "Windwalker/Filesystem/Path/PathCollection.html#method_getAllChildren", "name": "Windwalker\\Filesystem\\Path\\PathCollection::getAllChildren", "doc": "&quot;Get all files and folders as an iterator.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathCollection", "fromLink": "Windwalker/Filesystem/Path/PathCollection.html", "link": "Windwalker/Filesystem/Path/PathCollection.html#method_findOne", "name": "Windwalker\\Filesystem\\Path\\PathCollection::findOne", "doc": "&quot;Find one file from all paths.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathCollection", "fromLink": "Windwalker/Filesystem/Path/PathCollection.html", "link": "Windwalker/Filesystem/Path/PathCollection.html#method_find", "name": "Windwalker\\Filesystem\\Path\\PathCollection::find", "doc": "&quot;Find all files from paths.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathCollection", "fromLink": "Windwalker/Filesystem/Path/PathCollection.html", "link": "Windwalker/Filesystem/Path/PathCollection.html#method_getFiles", "name": "Windwalker\\Filesystem\\Path\\PathCollection::getFiles", "doc": "&quot;Get file iterator of all paths&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathCollection", "fromLink": "Windwalker/Filesystem/Path/PathCollection.html", "link": "Windwalker/Filesystem/Path/PathCollection.html#method_getFolders", "name": "Windwalker\\Filesystem\\Path\\PathCollection::getFolders", "doc": "&quot;Get folder iterator of all paths&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathCollection", "fromLink": "Windwalker/Filesystem/Path/PathCollection.html", "link": "Windwalker/Filesystem/Path/PathCollection.html#method_setPrefix", "name": "Windwalker\\Filesystem\\Path\\PathCollection::setPrefix", "doc": "&quot;Set prefix to all paths.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathCollection", "fromLink": "Windwalker/Filesystem/Path/PathCollection.html", "link": "Windwalker/Filesystem/Path/PathCollection.html#method_appendAll", "name": "Windwalker\\Filesystem\\Path\\PathCollection::appendAll", "doc": "&quot;Append a new path to all paths.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathCollection", "fromLink": "Windwalker/Filesystem/Path/PathCollection.html", "link": "Windwalker/Filesystem/Path/PathCollection.html#method_prependAll", "name": "Windwalker\\Filesystem\\Path\\PathCollection::prependAll", "doc": "&quot;Prepend a new path to all paths.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathCollection", "fromLink": "Windwalker/Filesystem/Path/PathCollection.html", "link": "Windwalker/Filesystem/Path/PathCollection.html#method_toArray", "name": "Windwalker\\Filesystem\\Path\\PathCollection::toArray", "doc": "&quot;Convert paths bag to array, and every path to string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathCollection", "fromLink": "Windwalker/Filesystem/Path/PathCollection.html", "link": "Windwalker/Filesystem/Path/PathCollection.html#method_isSubdir", "name": "Windwalker\\Filesystem\\Path\\PathCollection::isSubdir", "doc": "&quot;Is this path a subdir of another path in bag?&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Filesystem\\Path", "fromLink": "Windwalker/Filesystem/Path.html", "link": "Windwalker/Filesystem/Path/PathLocator.html", "name": "Windwalker\\Filesystem\\Path\\PathLocator", "doc": "&quot;A Path locator class&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathLocator", "fromLink": "Windwalker/Filesystem/Path/PathLocator.html", "link": "Windwalker/Filesystem/Path/PathLocator.html#method___construct", "name": "Windwalker\\Filesystem\\Path\\PathLocator::__construct", "doc": "&quot;Constructor to handle path.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathLocator", "fromLink": "Windwalker/Filesystem/Path/PathLocator.html", "link": "Windwalker/Filesystem/Path/PathLocator.html#method_redirect", "name": "Windwalker\\Filesystem\\Path\\PathLocator::redirect", "doc": "&quot;Replace with a new path.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathLocator", "fromLink": "Windwalker/Filesystem/Path/PathLocator.html", "link": "Windwalker/Filesystem/Path/PathLocator.html#method_getIterator", "name": "Windwalker\\Filesystem\\Path\\PathLocator::getIterator", "doc": "&quot;Get file iterator of current dir.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathLocator", "fromLink": "Windwalker/Filesystem/Path/PathLocator.html", "link": "Windwalker/Filesystem/Path/PathLocator.html#method_getFolders", "name": "Windwalker\\Filesystem\\Path\\PathLocator::getFolders", "doc": "&quot;Get folder iterator of current dir.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathLocator", "fromLink": "Windwalker/Filesystem/Path/PathLocator.html", "link": "Windwalker/Filesystem/Path/PathLocator.html#method_getFiles", "name": "Windwalker\\Filesystem\\Path\\PathLocator::getFiles", "doc": "&quot;Get file iterator of current dir&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathLocator", "fromLink": "Windwalker/Filesystem/Path/PathLocator.html", "link": "Windwalker/Filesystem/Path/PathLocator.html#method_findOne", "name": "Windwalker\\Filesystem\\Path\\PathLocator::findOne", "doc": "&quot;Find one file and return.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathLocator", "fromLink": "Windwalker/Filesystem/Path/PathLocator.html", "link": "Windwalker/Filesystem/Path/PathLocator.html#method_find", "name": "Windwalker\\Filesystem\\Path\\PathLocator::find", "doc": "&quot;Find all files which matches condition.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathLocator", "fromLink": "Windwalker/Filesystem/Path/PathLocator.html", "link": "Windwalker/Filesystem/Path/PathLocator.html#method_findByCallback", "name": "Windwalker\\Filesystem\\Path\\PathLocator::findByCallback", "doc": "&quot;Using a closure function to filter file.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathLocator", "fromLink": "Windwalker/Filesystem/Path/PathLocator.html", "link": "Windwalker/Filesystem/Path/PathLocator.html#method_isDir", "name": "Windwalker\\Filesystem\\Path\\PathLocator::isDir", "doc": "&quot;Detect is current path a dir?&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathLocator", "fromLink": "Windwalker/Filesystem/Path/PathLocator.html", "link": "Windwalker/Filesystem/Path/PathLocator.html#method_isFile", "name": "Windwalker\\Filesystem\\Path\\PathLocator::isFile", "doc": "&quot;Detect is current path a file?&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathLocator", "fromLink": "Windwalker/Filesystem/Path/PathLocator.html", "link": "Windwalker/Filesystem/Path/PathLocator.html#method_exists", "name": "Windwalker\\Filesystem\\Path\\PathLocator::exists", "doc": "&quot;Detect is current path exists?&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathLocator", "fromLink": "Windwalker/Filesystem/Path/PathLocator.html", "link": "Windwalker/Filesystem/Path/PathLocator.html#method_setPrefix", "name": "Windwalker\\Filesystem\\Path\\PathLocator::setPrefix", "doc": "&quot;Set a prefix, when this object convert to string,\nprefix will auto add to the front of path.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathLocator", "fromLink": "Windwalker/Filesystem/Path/PathLocator.html", "link": "Windwalker/Filesystem/Path/PathLocator.html#method_child", "name": "Windwalker\\Filesystem\\Path\\PathLocator::child", "doc": "&quot;Get a child path of given name.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathLocator", "fromLink": "Windwalker/Filesystem/Path/PathLocator.html", "link": "Windwalker/Filesystem/Path/PathLocator.html#method_parent", "name": "Windwalker\\Filesystem\\Path\\PathLocator::parent", "doc": "&quot;Get a parent path of given condition.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathLocator", "fromLink": "Windwalker/Filesystem/Path/PathLocator.html", "link": "Windwalker/Filesystem/Path/PathLocator.html#method_append", "name": "Windwalker\\Filesystem\\Path\\PathLocator::append", "doc": "&quot;Append a new path before current path.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathLocator", "fromLink": "Windwalker/Filesystem/Path/PathLocator.html", "link": "Windwalker/Filesystem/Path/PathLocator.html#method_prepend", "name": "Windwalker\\Filesystem\\Path\\PathLocator::prepend", "doc": "&quot;Append a new path before current path.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathLocator", "fromLink": "Windwalker/Filesystem/Path/PathLocator.html", "link": "Windwalker/Filesystem/Path/PathLocator.html#method_isSubdirOf", "name": "Windwalker\\Filesystem\\Path\\PathLocator::isSubdirOf", "doc": "&quot;Is this path subdir of given path?&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filesystem\\Path\\PathLocator", "fromLink": "Windwalker/Filesystem/Path/PathLocator.html", "link": "Windwalker/Filesystem/Path/PathLocator.html#method___toString", "name": "Windwalker\\Filesystem\\Path\\PathLocator::__toString", "doc": "&quot;Convert this object to string.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Filesystem\\Path", "fromLink": "Windwalker/Filesystem/Path.html", "link": "Windwalker/Filesystem/Path/PathLocatorInterface.html", "name": "Windwalker\\Filesystem\\Path\\PathLocatorInterface", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Filter\\Cleaner", "fromLink": "Windwalker/Filter/Cleaner.html", "link": "Windwalker/Filter/Cleaner/CleanerInterface.html", "name": "Windwalker\\Filter\\Cleaner\\CleanerInterface", "doc": "&quot;Interface FilterRuleInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Filter\\Cleaner\\CleanerInterface", "fromLink": "Windwalker/Filter/Cleaner/CleanerInterface.html", "link": "Windwalker/Filter/Cleaner/CleanerInterface.html#method_clean", "name": "Windwalker\\Filter\\Cleaner\\CleanerInterface::clean", "doc": "&quot;Method to clean text by rule.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Filter", "fromLink": "Windwalker/Filter.html", "link": "Windwalker/Filter/HtmlCleaner.html", "name": "Windwalker\\Filter\\HtmlCleaner", "doc": "&quot;Html Cleaner object.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Filter\\HtmlCleaner", "fromLink": "Windwalker/Filter/HtmlCleaner.html", "link": "Windwalker/Filter/HtmlCleaner.html#method___construct", "name": "Windwalker\\Filter\\HtmlCleaner::__construct", "doc": "&quot;Constructor for inputFilter class. Only first parameter is required.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filter\\HtmlCleaner", "fromLink": "Windwalker/Filter/HtmlCleaner.html", "link": "Windwalker/Filter/HtmlCleaner.html#method_isBadAttribute", "name": "Windwalker\\Filter\\HtmlCleaner::isBadAttribute", "doc": "&quot;Function to determine if contents of an attribute are safe&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filter\\HtmlCleaner", "fromLink": "Windwalker/Filter/HtmlCleaner.html", "link": "Windwalker/Filter/HtmlCleaner.html#method_remove", "name": "Windwalker\\Filter\\HtmlCleaner::remove", "doc": "&quot;Internal method to iteratively remove all unwanted tags and attributes&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filter\\HtmlCleaner", "fromLink": "Windwalker/Filter/HtmlCleaner.html", "link": "Windwalker/Filter/HtmlCleaner.html#method_decode", "name": "Windwalker\\Filter\\HtmlCleaner::decode", "doc": "&quot;Try to convert to plaintext&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filter\\HtmlCleaner", "fromLink": "Windwalker/Filter/HtmlCleaner.html", "link": "Windwalker/Filter/HtmlCleaner.html#method_getTagsMethod", "name": "Windwalker\\Filter\\HtmlCleaner::getTagsMethod", "doc": "&quot;getTagsMethod&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filter\\HtmlCleaner", "fromLink": "Windwalker/Filter/HtmlCleaner.html", "link": "Windwalker/Filter/HtmlCleaner.html#method_setTagsMethod", "name": "Windwalker\\Filter\\HtmlCleaner::setTagsMethod", "doc": "&quot;setTagsMethod&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filter\\HtmlCleaner", "fromLink": "Windwalker/Filter/HtmlCleaner.html", "link": "Windwalker/Filter/HtmlCleaner.html#method_getAttrMethod", "name": "Windwalker\\Filter\\HtmlCleaner::getAttrMethod", "doc": "&quot;getAttrMethod&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filter\\HtmlCleaner", "fromLink": "Windwalker/Filter/HtmlCleaner.html", "link": "Windwalker/Filter/HtmlCleaner.html#method_setAttrMethod", "name": "Windwalker\\Filter\\HtmlCleaner::setAttrMethod", "doc": "&quot;setAttrMethod&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filter\\HtmlCleaner", "fromLink": "Windwalker/Filter/HtmlCleaner.html", "link": "Windwalker/Filter/HtmlCleaner.html#method_getXssMethod", "name": "Windwalker\\Filter\\HtmlCleaner::getXssMethod", "doc": "&quot;getXssAuto&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filter\\HtmlCleaner", "fromLink": "Windwalker/Filter/HtmlCleaner.html", "link": "Windwalker/Filter/HtmlCleaner.html#method_setXssMethod", "name": "Windwalker\\Filter\\HtmlCleaner::setXssMethod", "doc": "&quot;setXssAuto&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Filter", "fromLink": "Windwalker/Filter.html", "link": "Windwalker/Filter/InputFilter.html", "name": "Windwalker\\Filter\\InputFilter", "doc": "&quot;Class Filter&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Filter\\InputFilter", "fromLink": "Windwalker/Filter/InputFilter.html", "link": "Windwalker/Filter/InputFilter.html#method___construct", "name": "Windwalker\\Filter\\InputFilter::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filter\\InputFilter", "fromLink": "Windwalker/Filter/InputFilter.html", "link": "Windwalker/Filter/InputFilter.html#method_clean", "name": "Windwalker\\Filter\\InputFilter::clean", "doc": "&quot;clean&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filter\\InputFilter", "fromLink": "Windwalker/Filter/InputFilter.html", "link": "Windwalker/Filter/InputFilter.html#method_getHandler", "name": "Windwalker\\Filter\\InputFilter::getHandler", "doc": "&quot;getHandlers&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filter\\InputFilter", "fromLink": "Windwalker/Filter/InputFilter.html", "link": "Windwalker/Filter/InputFilter.html#method_setHandler", "name": "Windwalker\\Filter\\InputFilter::setHandler", "doc": "&quot;setHandlers&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filter\\InputFilter", "fromLink": "Windwalker/Filter/InputFilter.html", "link": "Windwalker/Filter/InputFilter.html#method_getHtmlCleaner", "name": "Windwalker\\Filter\\InputFilter::getHtmlCleaner", "doc": "&quot;gethtmlCleaner&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filter\\InputFilter", "fromLink": "Windwalker/Filter/InputFilter.html", "link": "Windwalker/Filter/InputFilter.html#method_setHtmlCleaner", "name": "Windwalker\\Filter\\InputFilter::setHtmlCleaner", "doc": "&quot;sethtmlCleaner&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filter\\InputFilter", "fromLink": "Windwalker/Filter/InputFilter.html", "link": "Windwalker/Filter/InputFilter.html#method_getDefaultHandler", "name": "Windwalker\\Filter\\InputFilter::getDefaultHandler", "doc": "&quot;getDefaultHandler&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filter\\InputFilter", "fromLink": "Windwalker/Filter/InputFilter.html", "link": "Windwalker/Filter/InputFilter.html#method_setDefaultHandler", "name": "Windwalker\\Filter\\InputFilter::setDefaultHandler", "doc": "&quot;setDefaultHandler&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filter\\InputFilter", "fromLink": "Windwalker/Filter/InputFilter.html", "link": "Windwalker/Filter/InputFilter.html#method_serialize", "name": "Windwalker\\Filter\\InputFilter::serialize", "doc": "&quot;Method to serialize the Filter.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filter\\InputFilter", "fromLink": "Windwalker/Filter/InputFilter.html", "link": "Windwalker/Filter/InputFilter.html#method_unserialize", "name": "Windwalker\\Filter\\InputFilter::unserialize", "doc": "&quot;Method to unserialize the Filter.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Filter", "fromLink": "Windwalker/Filter.html", "link": "Windwalker/Filter/OutputFilter.html", "name": "Windwalker\\Filter\\OutputFilter", "doc": "&quot;Windwalker Output Filter&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Filter\\OutputFilter", "fromLink": "Windwalker/Filter/OutputFilter.html", "link": "Windwalker/Filter/OutputFilter.html#method_objectHTMLSafe", "name": "Windwalker\\Filter\\OutputFilter::objectHTMLSafe", "doc": "&quot;Makes an object safe to display in forms&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filter\\OutputFilter", "fromLink": "Windwalker/Filter/OutputFilter.html", "link": "Windwalker/Filter/OutputFilter.html#method_linkXHTMLSafe", "name": "Windwalker\\Filter\\OutputFilter::linkXHTMLSafe", "doc": "&quot;This method processes a string and replaces all instances of &amp;amp; with &amp;amp; in links only.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filter\\OutputFilter", "fromLink": "Windwalker/Filter/OutputFilter.html", "link": "Windwalker/Filter/OutputFilter.html#method_stringURLSafe", "name": "Windwalker\\Filter\\OutputFilter::stringURLSafe", "doc": "&quot;This method processes a string and replaces all accented UTF-8 characters by unaccented\nASCII-7 \&quot;equivalents\&quot;, whitespaces are replaced by hyphens and the string is lowercase.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filter\\OutputFilter", "fromLink": "Windwalker/Filter/OutputFilter.html", "link": "Windwalker/Filter/OutputFilter.html#method_stringURLUnicodeSlug", "name": "Windwalker\\Filter\\OutputFilter::stringURLUnicodeSlug", "doc": "&quot;This method implements unicode slugs instead of transliteration.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filter\\OutputFilter", "fromLink": "Windwalker/Filter/OutputFilter.html", "link": "Windwalker/Filter/OutputFilter.html#method_ampReplace", "name": "Windwalker\\Filter\\OutputFilter::ampReplace", "doc": "&quot;Replaces &amp;amp; with &amp;amp; for XHTML compliance&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filter\\OutputFilter", "fromLink": "Windwalker/Filter/OutputFilter.html", "link": "Windwalker/Filter/OutputFilter.html#method_cleanText", "name": "Windwalker\\Filter\\OutputFilter::cleanText", "doc": "&quot;Cleans text of all formatting and scripting code&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filter\\OutputFilter", "fromLink": "Windwalker/Filter/OutputFilter.html", "link": "Windwalker/Filter/OutputFilter.html#method_stripImages", "name": "Windwalker\\Filter\\OutputFilter::stripImages", "doc": "&quot;Strip img-tags from string&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filter\\OutputFilter", "fromLink": "Windwalker/Filter/OutputFilter.html", "link": "Windwalker/Filter/OutputFilter.html#method_stripIframes", "name": "Windwalker\\Filter\\OutputFilter::stripIframes", "doc": "&quot;Strip iframe-tags from string&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filter\\OutputFilter", "fromLink": "Windwalker/Filter/OutputFilter.html", "link": "Windwalker/Filter/OutputFilter.html#method_stripScript", "name": "Windwalker\\Filter\\OutputFilter::stripScript", "doc": "&quot;stripScript&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filter\\OutputFilter", "fromLink": "Windwalker/Filter/OutputFilter.html", "link": "Windwalker/Filter/OutputFilter.html#method_stripStyle", "name": "Windwalker\\Filter\\OutputFilter::stripStyle", "doc": "&quot;stripStyle&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Filter\\Unicode", "fromLink": "Windwalker/Filter/Unicode.html", "link": "Windwalker/Filter/Unicode/UnicodeHelper.html", "name": "Windwalker\\Filter\\Unicode\\UnicodeHelper", "doc": "&quot;Class UnicodeHelper&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Filter\\Unicode\\UnicodeHelper", "fromLink": "Windwalker/Filter/Unicode/UnicodeHelper.html", "link": "Windwalker/Filter/Unicode/UnicodeHelper.html#method_latinToAscii", "name": "Windwalker\\Filter\\Unicode\\UnicodeHelper::latinToAscii", "doc": "&quot;latinToAscii&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filter\\Unicode\\UnicodeHelper", "fromLink": "Windwalker/Filter/Unicode/UnicodeHelper.html", "link": "Windwalker/Filter/Unicode/UnicodeHelper.html#method_strtolower", "name": "Windwalker\\Filter\\Unicode\\UnicodeHelper::strtolower", "doc": "&quot;strtolower&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filter\\Unicode\\UnicodeHelper", "fromLink": "Windwalker/Filter/Unicode/UnicodeHelper.html", "link": "Windwalker/Filter/Unicode/UnicodeHelper.html#method_utf8strtolower", "name": "Windwalker\\Filter\\Unicode\\UnicodeHelper::utf8strtolower", "doc": "&quot;utf8strtolower&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filter\\Unicode\\UnicodeHelper", "fromLink": "Windwalker/Filter/Unicode/UnicodeHelper.html", "link": "Windwalker/Filter/Unicode/UnicodeHelper.html#method_fromUnicode", "name": "Windwalker\\Filter\\Unicode\\UnicodeHelper::fromUnicode", "doc": "&quot;fromUnicode&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Filter\\Unicode\\UnicodeHelper", "fromLink": "Windwalker/Filter/Unicode/UnicodeHelper.html", "link": "Windwalker/Filter/Unicode/UnicodeHelper.html#method_toUnicode", "name": "Windwalker\\Filter\\Unicode\\UnicodeHelper::toUnicode", "doc": "&quot;toUnicode&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Form", "fromLink": "Windwalker/Form.html", "link": "Windwalker/Form/AbstractFormElementHelper.html", "name": "Windwalker\\Form\\AbstractFormElementHelper", "doc": "&quot;The AbstractFormElemetAwareHelper class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Form\\AbstractFormElementHelper", "fromLink": "Windwalker/Form/AbstractFormElementHelper.html", "link": "Windwalker/Form/AbstractFormElementHelper.html#method_init", "name": "Windwalker\\Form\\AbstractFormElementHelper::init", "doc": "&quot;init&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\AbstractFormElementHelper", "fromLink": "Windwalker/Form/AbstractFormElementHelper.html", "link": "Windwalker/Form/AbstractFormElementHelper.html#method_create", "name": "Windwalker\\Form\\AbstractFormElementHelper::create", "doc": "&quot;createField&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\AbstractFormElementHelper", "fromLink": "Windwalker/Form/AbstractFormElementHelper.html", "link": "Windwalker/Form/AbstractFormElementHelper.html#method_reset", "name": "Windwalker\\Form\\AbstractFormElementHelper::reset", "doc": "&quot;reset&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\AbstractFormElementHelper", "fromLink": "Windwalker/Form/AbstractFormElementHelper.html", "link": "Windwalker/Form/AbstractFormElementHelper.html#method_addNamespace", "name": "Windwalker\\Form\\AbstractFormElementHelper::addNamespace", "doc": "&quot;addNamespace&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\AbstractFormElementHelper", "fromLink": "Windwalker/Form/AbstractFormElementHelper.html", "link": "Windwalker/Form/AbstractFormElementHelper.html#method_getNamespaces", "name": "Windwalker\\Form\\AbstractFormElementHelper::getNamespaces", "doc": "&quot;getNamespaces&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Form", "fromLink": "Windwalker/Form.html", "link": "Windwalker/Form/FieldDefinitionInterface.html", "name": "Windwalker\\Form\\FieldDefinitionInterface", "doc": "&quot;Field Definition Interface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Form\\FieldDefinitionInterface", "fromLink": "Windwalker/Form/FieldDefinitionInterface.html", "link": "Windwalker/Form/FieldDefinitionInterface.html#method_define", "name": "Windwalker\\Form\\FieldDefinitionInterface::define", "doc": "&quot;Define the form fields.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Form", "fromLink": "Windwalker/Form.html", "link": "Windwalker/Form/FieldHelper.html", "name": "Windwalker\\Form\\FieldHelper", "doc": "&quot;The FieldHelper class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Form\\FieldHelper", "fromLink": "Windwalker/Form/FieldHelper.html", "link": "Windwalker/Form/FieldHelper.html#method_create", "name": "Windwalker\\Form\\FieldHelper::create", "doc": "&quot;createField&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\FieldHelper", "fromLink": "Windwalker/Form/FieldHelper.html", "link": "Windwalker/Form/FieldHelper.html#method_createByXml", "name": "Windwalker\\Form\\FieldHelper::createByXml", "doc": "&quot;createByXml&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\FieldHelper", "fromLink": "Windwalker/Form/FieldHelper.html", "link": "Windwalker/Form/FieldHelper.html#method_findFieldClass", "name": "Windwalker\\Form\\FieldHelper::findFieldClass", "doc": "&quot;findFieldClass&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Form\\Field", "fromLink": "Windwalker/Form/Field.html", "link": "Windwalker/Form/Field/AbstractField.html", "name": "Windwalker\\Form\\Field\\AbstractField", "doc": "&quot;The AbstractField class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method___construct", "name": "Windwalker\\Form\\Field\\AbstractField::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_renderInput", "name": "Windwalker\\Form\\Field\\AbstractField::renderInput", "doc": "&quot;getInput&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_buildInput", "name": "Windwalker\\Form\\Field\\AbstractField::buildInput", "doc": "&quot;buildInput&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_prepare", "name": "Windwalker\\Form\\Field\\AbstractField::prepare", "doc": "&quot;prepareRenderInput&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_prepareAttributes", "name": "Windwalker\\Form\\Field\\AbstractField::prepareAttributes", "doc": "&quot;prepareAttributes&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_renderLabel", "name": "Windwalker\\Form\\Field\\AbstractField::renderLabel", "doc": "&quot;getLabel&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_renderView", "name": "Windwalker\\Form\\Field\\AbstractField::renderView", "doc": "&quot;renderView&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_render", "name": "Windwalker\\Form\\Field\\AbstractField::render", "doc": "&quot;render&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_getLabel", "name": "Windwalker\\Form\\Field\\AbstractField::getLabel", "doc": "&quot;getLabel&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_getId", "name": "Windwalker\\Form\\Field\\AbstractField::getId", "doc": "&quot;getId&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_validate", "name": "Windwalker\\Form\\Field\\AbstractField::validate", "doc": "&quot;validate&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_checkRequired", "name": "Windwalker\\Form\\Field\\AbstractField::checkRequired", "doc": "&quot;checkRequired&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_checkRule", "name": "Windwalker\\Form\\Field\\AbstractField::checkRule", "doc": "&quot;checkRule&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_filter", "name": "Windwalker\\Form\\Field\\AbstractField::filter", "doc": "&quot;filter&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_prepareStore", "name": "Windwalker\\Form\\Field\\AbstractField::prepareStore", "doc": "&quot;prepareStore&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_getName", "name": "Windwalker\\Form\\Field\\AbstractField::getName", "doc": "&quot;Method to get property Name&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_setName", "name": "Windwalker\\Form\\Field\\AbstractField::setName", "doc": "&quot;Method to set property name&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_getFieldName", "name": "Windwalker\\Form\\Field\\AbstractField::getFieldName", "doc": "&quot;Method to get property FieldName&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_setFieldName", "name": "Windwalker\\Form\\Field\\AbstractField::setFieldName", "doc": "&quot;Method to set property fieldName&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_getGroup", "name": "Windwalker\\Form\\Field\\AbstractField::getGroup", "doc": "&quot;Method to get property Group&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_setGroup", "name": "Windwalker\\Form\\Field\\AbstractField::setGroup", "doc": "&quot;Method to set property group&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_getFieldset", "name": "Windwalker\\Form\\Field\\AbstractField::getFieldset", "doc": "&quot;Method to get property Fieldset&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_setFieldset", "name": "Windwalker\\Form\\Field\\AbstractField::setFieldset", "doc": "&quot;Method to set property fieldset&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_getValue", "name": "Windwalker\\Form\\Field\\AbstractField::getValue", "doc": "&quot;Method to get property Value&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_setValue", "name": "Windwalker\\Form\\Field\\AbstractField::setValue", "doc": "&quot;Method to set property value&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_description", "name": "Windwalker\\Form\\Field\\AbstractField::description", "doc": "&quot;description&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_defaultValue", "name": "Windwalker\\Form\\Field\\AbstractField::defaultValue", "doc": "&quot;defaultValue&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_getDefaultValue", "name": "Windwalker\\Form\\Field\\AbstractField::getDefaultValue", "doc": "&quot;getDefaultValue&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_setValidator", "name": "Windwalker\\Form\\Field\\AbstractField::setValidator", "doc": "&quot;Method to set property rule&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_getValidator", "name": "Windwalker\\Form\\Field\\AbstractField::getValidator", "doc": "&quot;Method to get property Rule&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_setFilter", "name": "Windwalker\\Form\\Field\\AbstractField::setFilter", "doc": "&quot;Method to set property filter&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_getFilter", "name": "Windwalker\\Form\\Field\\AbstractField::getFilter", "doc": "&quot;Method to get property Filter&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_getControl", "name": "Windwalker\\Form\\Field\\AbstractField::getControl", "doc": "&quot;Method to get property Control&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_setControl", "name": "Windwalker\\Form\\Field\\AbstractField::setControl", "doc": "&quot;Method to set property control&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_label", "name": "Windwalker\\Form\\Field\\AbstractField::label", "doc": "&quot;label&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_required", "name": "Windwalker\\Form\\Field\\AbstractField::required", "doc": "&quot;required&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_disabled", "name": "Windwalker\\Form\\Field\\AbstractField::disabled", "doc": "&quot;disabled&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_readonly", "name": "Windwalker\\Form\\Field\\AbstractField::readonly", "doc": "&quot;readonly&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_setClass", "name": "Windwalker\\Form\\Field\\AbstractField::setClass", "doc": "&quot;class&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_labelClass", "name": "Windwalker\\Form\\Field\\AbstractField::labelClass", "doc": "&quot;labelClass&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_getAttribute", "name": "Windwalker\\Form\\Field\\AbstractField::getAttribute", "doc": "&quot;getAttribute&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_setAttribute", "name": "Windwalker\\Form\\Field\\AbstractField::setAttribute", "doc": "&quot;getAttribute&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_get", "name": "Windwalker\\Form\\Field\\AbstractField::get", "doc": "&quot;Get attribute. Alias of &lt;code&gt;getAttribute()&lt;\/code&gt;.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_set", "name": "Windwalker\\Form\\Field\\AbstractField::set", "doc": "&quot;set&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_appendAttribute", "name": "Windwalker\\Form\\Field\\AbstractField::appendAttribute", "doc": "&quot;append&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_prependAttribute", "name": "Windwalker\\Form\\Field\\AbstractField::prependAttribute", "doc": "&quot;prependAttribute&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_getBool", "name": "Windwalker\\Form\\Field\\AbstractField::getBool", "doc": "&quot;Method to convert some string like &lt;code&gt;true&lt;\/code&gt;, &lt;code&gt;1&lt;\/code&gt;, &lt;code&gt;yes&lt;\/code&gt; to boolean TRUE,\nand &lt;code&gt;no&lt;\/code&gt;, &lt;code&gt;false&lt;\/code&gt;, &lt;code&gt;disabled&lt;\/code&gt;, &lt;code&gt;null&lt;\/code&gt;, &lt;code&gt;none&lt;\/code&gt;, &lt;code&gt;0&lt;\/code&gt; string to boolean FALSE.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_getFalse", "name": "Windwalker\\Form\\Field\\AbstractField::getFalse", "doc": "&quot;Just an alias of &lt;code&gt;getBool()&lt;\/code&gt; but FALSE will return TRUE.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_getAttributes", "name": "Windwalker\\Form\\Field\\AbstractField::getAttributes", "doc": "&quot;Get all attributes.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_def", "name": "Windwalker\\Form\\Field\\AbstractField::def", "doc": "&quot;If this attribute not exists, use this value as default, or we use original value from xml.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_getType", "name": "Windwalker\\Form\\Field\\AbstractField::getType", "doc": "&quot;Method to get property Type&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_getForm", "name": "Windwalker\\Form\\Field\\AbstractField::getForm", "doc": "&quot;Method to get property Form&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_setForm", "name": "Windwalker\\Form\\Field\\AbstractField::setForm", "doc": "&quot;Method to set property form&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\AbstractField", "fromLink": "Windwalker/Form/Field/AbstractField.html", "link": "Windwalker/Form/Field/AbstractField.html#method_escape", "name": "Windwalker\\Form\\Field\\AbstractField::escape", "doc": "&quot;Escape html string.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Form\\Field", "fromLink": "Windwalker/Form/Field.html", "link": "Windwalker/Form/Field/ButtonField.html", "name": "Windwalker\\Form\\Field\\ButtonField", "doc": "&quot;The ButtonField class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Form\\Field\\ButtonField", "fromLink": "Windwalker/Form/Field/ButtonField.html", "link": "Windwalker/Form/Field/ButtonField.html#method_prepare", "name": "Windwalker\\Form\\Field\\ButtonField::prepare", "doc": "&quot;prepareRenderInput&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\ButtonField", "fromLink": "Windwalker/Form/Field/ButtonField.html", "link": "Windwalker/Form/Field/ButtonField.html#method_buildInput", "name": "Windwalker\\Form\\Field\\ButtonField::buildInput", "doc": "&quot;buildInput&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Form\\Field", "fromLink": "Windwalker/Form/Field.html", "link": "Windwalker/Form/Field/CheckboxField.html", "name": "Windwalker\\Form\\Field\\CheckboxField", "doc": "&quot;The CheckboxField class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Form\\Field\\CheckboxField", "fromLink": "Windwalker/Form/Field/CheckboxField.html", "link": "Windwalker/Form/Field/CheckboxField.html#method_prepare", "name": "Windwalker\\Form\\Field\\CheckboxField::prepare", "doc": "&quot;prepareRenderInput&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Form\\Field", "fromLink": "Windwalker/Form/Field.html", "link": "Windwalker/Form/Field/CheckboxesField.html", "name": "Windwalker\\Form\\Field\\CheckboxesField", "doc": "&quot;The CheckboxesField class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Form\\Field\\CheckboxesField", "fromLink": "Windwalker/Form/Field/CheckboxesField.html", "link": "Windwalker/Form/Field/CheckboxesField.html#method_buildInput", "name": "Windwalker\\Form\\Field\\CheckboxesField::buildInput", "doc": "&quot;buildInput&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\CheckboxesField", "fromLink": "Windwalker/Form/Field/CheckboxesField.html", "link": "Windwalker/Form/Field/CheckboxesField.html#method_getValue", "name": "Windwalker\\Form\\Field\\CheckboxesField::getValue", "doc": "&quot;getValue&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Form\\Field", "fromLink": "Windwalker/Form/Field.html", "link": "Windwalker/Form/Field/CustomHtmlField.html", "name": "Windwalker\\Form\\Field\\CustomHtmlField", "doc": "&quot;The ButtonField class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Form\\Field\\CustomHtmlField", "fromLink": "Windwalker/Form/Field/CustomHtmlField.html", "link": "Windwalker/Form/Field/CustomHtmlField.html#method_prepare", "name": "Windwalker\\Form\\Field\\CustomHtmlField::prepare", "doc": "&quot;prepareRenderInput&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\CustomHtmlField", "fromLink": "Windwalker/Form/Field/CustomHtmlField.html", "link": "Windwalker/Form/Field/CustomHtmlField.html#method_buildInput", "name": "Windwalker\\Form\\Field\\CustomHtmlField::buildInput", "doc": "&quot;buildInput&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\CustomHtmlField", "fromLink": "Windwalker/Form/Field/CustomHtmlField.html", "link": "Windwalker/Form/Field/CustomHtmlField.html#method_content", "name": "Windwalker\\Form\\Field\\CustomHtmlField::content", "doc": "&quot;content&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Form\\Field", "fromLink": "Windwalker/Form/Field.html", "link": "Windwalker/Form/Field/EmailField.html", "name": "Windwalker\\Form\\Field\\EmailField", "doc": "&quot;The EmailField class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Form\\Field\\EmailField", "fromLink": "Windwalker/Form/Field/EmailField.html", "link": "Windwalker/Form/Field/EmailField.html#method_prepare", "name": "Windwalker\\Form\\Field\\EmailField::prepare", "doc": "&quot;prepare&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Form\\Field", "fromLink": "Windwalker/Form/Field.html", "link": "Windwalker/Form/Field/HiddenField.html", "name": "Windwalker\\Form\\Field\\HiddenField", "doc": "&quot;The HiddenField class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Form\\Field\\HiddenField", "fromLink": "Windwalker/Form/Field/HiddenField.html", "link": "Windwalker/Form/Field/HiddenField.html#method_prepare", "name": "Windwalker\\Form\\Field\\HiddenField::prepare", "doc": "&quot;prepareRenderInput&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Form\\Field", "fromLink": "Windwalker/Form/Field.html", "link": "Windwalker/Form/Field/ListField.html", "name": "Windwalker\\Form\\Field\\ListField", "doc": "&quot;The ListField class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Form\\Field\\ListField", "fromLink": "Windwalker/Form/Field/ListField.html", "link": "Windwalker/Form/Field/ListField.html#method___construct", "name": "Windwalker\\Form\\Field\\ListField::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\ListField", "fromLink": "Windwalker/Form/Field/ListField.html", "link": "Windwalker/Form/Field/ListField.html#method_prepare", "name": "Windwalker\\Form\\Field\\ListField::prepare", "doc": "&quot;prepareRenderInput&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\ListField", "fromLink": "Windwalker/Form/Field/ListField.html", "link": "Windwalker/Form/Field/ListField.html#method_buildInput", "name": "Windwalker\\Form\\Field\\ListField::buildInput", "doc": "&quot;buildInput&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\ListField", "fromLink": "Windwalker/Form/Field/ListField.html", "link": "Windwalker/Form/Field/ListField.html#method_getOptions", "name": "Windwalker\\Form\\Field\\ListField::getOptions", "doc": "&quot;getOptions&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\ListField", "fromLink": "Windwalker/Form/Field/ListField.html", "link": "Windwalker/Form/Field/ListField.html#method_setOptions", "name": "Windwalker\\Form\\Field\\ListField::setOptions", "doc": "&quot;setOptions&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\ListField", "fromLink": "Windwalker/Form/Field/ListField.html", "link": "Windwalker/Form/Field/ListField.html#method_addOption", "name": "Windwalker\\Form\\Field\\ListField::addOption", "doc": "&quot;addOption&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\ListField", "fromLink": "Windwalker/Form/Field/ListField.html", "link": "Windwalker/Form/Field/ListField.html#method_option", "name": "Windwalker\\Form\\Field\\ListField::option", "doc": "&quot;option&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\ListField", "fromLink": "Windwalker/Form/Field/ListField.html", "link": "Windwalker/Form/Field/ListField.html#method_group", "name": "Windwalker\\Form\\Field\\ListField::group", "doc": "&quot;optionGroup&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\ListField", "fromLink": "Windwalker/Form/Field/ListField.html", "link": "Windwalker/Form/Field/ListField.html#method_getValue", "name": "Windwalker\\Form\\Field\\ListField::getValue", "doc": "&quot;getValue&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Form\\Field", "fromLink": "Windwalker/Form/Field.html", "link": "Windwalker/Form/Field/PasswordField.html", "name": "Windwalker\\Form\\Field\\PasswordField", "doc": "&quot;The PasswordField class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Form\\Field\\PasswordField", "fromLink": "Windwalker/Form/Field/PasswordField.html", "link": "Windwalker/Form/Field/PasswordField.html#method_prepare", "name": "Windwalker\\Form\\Field\\PasswordField::prepare", "doc": "&quot;prepare&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Form\\Field", "fromLink": "Windwalker/Form/Field.html", "link": "Windwalker/Form/Field/RadioField.html", "name": "Windwalker\\Form\\Field\\RadioField", "doc": "&quot;The RadioField class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Form\\Field\\RadioField", "fromLink": "Windwalker/Form/Field/RadioField.html", "link": "Windwalker/Form/Field/RadioField.html#method_buildInput", "name": "Windwalker\\Form\\Field\\RadioField::buildInput", "doc": "&quot;buildInput&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Form\\Field", "fromLink": "Windwalker/Form/Field.html", "link": "Windwalker/Form/Field/SpacerField.html", "name": "Windwalker\\Form\\Field\\SpacerField", "doc": "&quot;The SpacerField class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Form\\Field\\SpacerField", "fromLink": "Windwalker/Form/Field/SpacerField.html", "link": "Windwalker/Form/Field/SpacerField.html#method_prepare", "name": "Windwalker\\Form\\Field\\SpacerField::prepare", "doc": "&quot;prepareRenderInput&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\SpacerField", "fromLink": "Windwalker/Form/Field/SpacerField.html", "link": "Windwalker/Form/Field/SpacerField.html#method_buildInput", "name": "Windwalker\\Form\\Field\\SpacerField::buildInput", "doc": "&quot;buildInput&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Form\\Field", "fromLink": "Windwalker/Form/Field.html", "link": "Windwalker/Form/Field/TextField.html", "name": "Windwalker\\Form\\Field\\TextField", "doc": "&quot;The TextField class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Form\\Field\\TextField", "fromLink": "Windwalker/Form/Field/TextField.html", "link": "Windwalker/Form/Field/TextField.html#method_prepare", "name": "Windwalker\\Form\\Field\\TextField::prepare", "doc": "&quot;prepareRenderInput&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Form\\Field", "fromLink": "Windwalker/Form/Field.html", "link": "Windwalker/Form/Field/TextareaField.html", "name": "Windwalker\\Form\\Field\\TextareaField", "doc": "&quot;The TextareaField class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Form\\Field\\TextareaField", "fromLink": "Windwalker/Form/Field/TextareaField.html", "link": "Windwalker/Form/Field/TextareaField.html#method_prepare", "name": "Windwalker\\Form\\Field\\TextareaField::prepare", "doc": "&quot;prepareRenderInput&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Field\\TextareaField", "fromLink": "Windwalker/Form/Field/TextareaField.html", "link": "Windwalker/Form/Field/TextareaField.html#method_buildInput", "name": "Windwalker\\Form\\Field\\TextareaField::buildInput", "doc": "&quot;buildInput&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Form\\Field", "fromLink": "Windwalker/Form/Field.html", "link": "Windwalker/Form/Field/TimezoneField.html", "name": "Windwalker\\Form\\Field\\TimezoneField", "doc": "&quot;The TimezoneField class.&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Form", "fromLink": "Windwalker/Form.html", "link": "Windwalker/Form/FilterHelper.html", "name": "Windwalker\\Form\\FilterHelper", "doc": "&quot;The FilterHelper class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Form\\FilterHelper", "fromLink": "Windwalker/Form/FilterHelper.html", "link": "Windwalker/Form/FilterHelper.html#method_create", "name": "Windwalker\\Form\\FilterHelper::create", "doc": "&quot;createFilter&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Form\\Filter", "fromLink": "Windwalker/Form/Filter.html", "link": "Windwalker/Form/Filter/DefaultFilter.html", "name": "Windwalker\\Form\\Filter\\DefaultFilter", "doc": "&quot;The InputFiler class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Form\\Filter\\DefaultFilter", "fromLink": "Windwalker/Form/Filter/DefaultFilter.html", "link": "Windwalker/Form/Filter/DefaultFilter.html#method___construct", "name": "Windwalker\\Form\\Filter\\DefaultFilter::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Filter\\DefaultFilter", "fromLink": "Windwalker/Form/Filter/DefaultFilter.html", "link": "Windwalker/Form/Filter/DefaultFilter.html#method_clean", "name": "Windwalker\\Form\\Filter\\DefaultFilter::clean", "doc": "&quot;clean&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Filter\\DefaultFilter", "fromLink": "Windwalker/Form/Filter/DefaultFilter.html", "link": "Windwalker/Form/Filter/DefaultFilter.html#method_setFilter", "name": "Windwalker\\Form\\Filter\\DefaultFilter::setFilter", "doc": "&quot;Method to set property filter&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Filter\\DefaultFilter", "fromLink": "Windwalker/Form/Filter/DefaultFilter.html", "link": "Windwalker/Form/Filter/DefaultFilter.html#method_getType", "name": "Windwalker\\Form\\Filter\\DefaultFilter::getType", "doc": "&quot;Method to get property Type&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Filter\\DefaultFilter", "fromLink": "Windwalker/Form/Filter/DefaultFilter.html", "link": "Windwalker/Form/Filter/DefaultFilter.html#method_setType", "name": "Windwalker\\Form\\Filter\\DefaultFilter::setType", "doc": "&quot;Method to set property type&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Form\\Filter", "fromLink": "Windwalker/Form/Filter.html", "link": "Windwalker/Form/Filter/FilterInterface.html", "name": "Windwalker\\Form\\Filter\\FilterInterface", "doc": "&quot;Interface FilterInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Form\\Filter\\FilterInterface", "fromLink": "Windwalker/Form/Filter/FilterInterface.html", "link": "Windwalker/Form/Filter/FilterInterface.html#method_clean", "name": "Windwalker\\Form\\Filter\\FilterInterface::clean", "doc": "&quot;clean&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Form\\Filter", "fromLink": "Windwalker/Form/Filter.html", "link": "Windwalker/Form/Filter/MockFilter.html", "name": "Windwalker\\Form\\Filter\\MockFilter", "doc": "&quot;The MockFilter class to use on test case.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Form\\Filter\\MockFilter", "fromLink": "Windwalker/Form/Filter/MockFilter.html", "link": "Windwalker/Form/Filter/MockFilter.html#method_clean", "name": "Windwalker\\Form\\Filter\\MockFilter::clean", "doc": "&quot;clean&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Form", "fromLink": "Windwalker/Form.html", "link": "Windwalker/Form/Form.html", "name": "Windwalker\\Form\\Form", "doc": "&quot;The Form class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method___construct", "name": "Windwalker\\Form\\Form::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_loadXml", "name": "Windwalker\\Form\\Form::loadXml", "doc": "&quot;load&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_loadFile", "name": "Windwalker\\Form\\Form::loadFile", "doc": "&quot;loadFile&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_addFields", "name": "Windwalker\\Form\\Form::addFields", "doc": "&quot;addFields&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_add", "name": "Windwalker\\Form\\Form::add", "doc": "&quot;Add a field.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_addField", "name": "Windwalker\\Form\\Form::addField", "doc": "&quot;addField&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_wrap", "name": "Windwalker\\Form\\Form::wrap", "doc": "&quot;wrap&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_fieldset", "name": "Windwalker\\Form\\Form::fieldset", "doc": "&quot;fieldset&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_group", "name": "Windwalker\\Form\\Form::group", "doc": "&quot;group&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_addFieldNamespace", "name": "Windwalker\\Form\\Form::addFieldNamespace", "doc": "&quot;Method to set property fieldNamespaces&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_addFilterNamespace", "name": "Windwalker\\Form\\Form::addFilterNamespace", "doc": "&quot;Method to set property fieldNamespaces&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_addValidatorNamespace", "name": "Windwalker\\Form\\Form::addValidatorNamespace", "doc": "&quot;Method to set property fieldNamespaces&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_getIterator", "name": "Windwalker\\Form\\Form::getIterator", "doc": "&quot;Retrieve an external iterator&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_getCallbackIterator", "name": "Windwalker\\Form\\Form::getCallbackIterator", "doc": "&quot;getCallbackIterator&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_getField", "name": "Windwalker\\Form\\Form::getField", "doc": "&quot;getField&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_removeField", "name": "Windwalker\\Form\\Form::removeField", "doc": "&quot;removeField&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_removeFields", "name": "Windwalker\\Form\\Form::removeFields", "doc": "&quot;removeField&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_getFields", "name": "Windwalker\\Form\\Form::getFields", "doc": "&quot;getFields&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_getFieldsets", "name": "Windwalker\\Form\\Form::getFieldsets", "doc": "&quot;Method to get property Fieldsets&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_getGroups", "name": "Windwalker\\Form\\Form::getGroups", "doc": "&quot;Method to get property Groups&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_setAttribute", "name": "Windwalker\\Form\\Form::setAttribute", "doc": "&quot;setAttribute&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_getAttribute", "name": "Windwalker\\Form\\Form::getAttribute", "doc": "&quot;getAttribute&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_setAttributes", "name": "Windwalker\\Form\\Form::setAttributes", "doc": "&quot;setAttributes&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_appendAttributes", "name": "Windwalker\\Form\\Form::appendAttributes", "doc": "&quot;appendAttributes&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_bind", "name": "Windwalker\\Form\\Form::bind", "doc": "&quot;bind&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_clearValues", "name": "Windwalker\\Form\\Form::clearValues", "doc": "&quot;reset&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_reset", "name": "Windwalker\\Form\\Form::reset", "doc": "&quot;reset&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_filter", "name": "Windwalker\\Form\\Form::filter", "doc": "&quot;filter&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_validate", "name": "Windwalker\\Form\\Form::validate", "doc": "&quot;validate&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_getViews", "name": "Windwalker\\Form\\Form::getViews", "doc": "&quot;getViews&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_prepareStore", "name": "Windwalker\\Form\\Form::prepareStore", "doc": "&quot;prepareStore&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_renderField", "name": "Windwalker\\Form\\Form::renderField", "doc": "&quot;renderField&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_renderFields", "name": "Windwalker\\Form\\Form::renderFields", "doc": "&quot;renderFields&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_getControl", "name": "Windwalker\\Form\\Form::getControl", "doc": "&quot;Method to get property Control&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_setControl", "name": "Windwalker\\Form\\Form::setControl", "doc": "&quot;Method to set property control&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_defineFormFields", "name": "Windwalker\\Form\\Form::defineFormFields", "doc": "&quot;defineFormFields&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_getErrors", "name": "Windwalker\\Form\\Form::getErrors", "doc": "&quot;Method to get property Errors&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_setErrors", "name": "Windwalker\\Form\\Form::setErrors", "doc": "&quot;Method to set property errors&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_getValues", "name": "Windwalker\\Form\\Form::getValues", "doc": "&quot;getValues&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_getRenderer", "name": "Windwalker\\Form\\Form::getRenderer", "doc": "&quot;Method to get property FieldRenderHandler&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Form", "fromLink": "Windwalker/Form/Form.html", "link": "Windwalker/Form/Form.html#method_setRenderer", "name": "Windwalker\\Form\\Form::setRenderer", "doc": "&quot;Method to set property fieldRenderHandler&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Form", "fromLink": "Windwalker/Form.html", "link": "Windwalker/Form/FormHelper.html", "name": "Windwalker\\Form\\FormHelper", "doc": "&quot;The FormHelper class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Form\\FormHelper", "fromLink": "Windwalker/Form/FormHelper.html", "link": "Windwalker/Form/FormHelper.html#method_encode", "name": "Windwalker\\Form\\FormHelper::encode", "doc": "&quot;encode&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\FormHelper", "fromLink": "Windwalker/Form/FormHelper.html", "link": "Windwalker/Form/FormHelper.html#method_flatten", "name": "Windwalker\\Form\\FormHelper::flatten", "doc": "&quot;Dump to on dimension array.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\FormHelper", "fromLink": "Windwalker/Form/FormHelper.html", "link": "Windwalker/Form/FormHelper.html#method_getByPath", "name": "Windwalker\\Form\\FormHelper::getByPath", "doc": "&quot;Get data from array or object by path.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\FormHelper", "fromLink": "Windwalker/Form/FormHelper.html", "link": "Windwalker/Form/FormHelper.html#method_setByPath", "name": "Windwalker\\Form\\FormHelper::setByPath", "doc": "&quot;setByPath&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Form\\Renderer", "fromLink": "Windwalker/Form/Renderer.html", "link": "Windwalker/Form/Renderer/FormRendererInterface.html", "name": "Windwalker\\Form\\Renderer\\FormRendererInterface", "doc": "&quot;The FormRendererInterface class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Form\\Renderer\\FormRendererInterface", "fromLink": "Windwalker/Form/Renderer/FormRendererInterface.html", "link": "Windwalker/Form/Renderer/FormRendererInterface.html#method_renderField", "name": "Windwalker\\Form\\Renderer\\FormRendererInterface::renderField", "doc": "&quot;renderField&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Renderer\\FormRendererInterface", "fromLink": "Windwalker/Form/Renderer/FormRendererInterface.html", "link": "Windwalker/Form/Renderer/FormRendererInterface.html#method_renderLabel", "name": "Windwalker\\Form\\Renderer\\FormRendererInterface::renderLabel", "doc": "&quot;renderLabel&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Renderer\\FormRendererInterface", "fromLink": "Windwalker/Form/Renderer/FormRendererInterface.html", "link": "Windwalker/Form/Renderer/FormRendererInterface.html#method_renderInput", "name": "Windwalker\\Form\\Renderer\\FormRendererInterface::renderInput", "doc": "&quot;renderInput&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Form\\Validate", "fromLink": "Windwalker/Form/Validate.html", "link": "Windwalker/Form/Validate/ValidateResult.html", "name": "Windwalker\\Form\\Validate\\ValidateResult", "doc": "&quot;The ValidateResult class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Form\\Validate\\ValidateResult", "fromLink": "Windwalker/Form/Validate/ValidateResult.html", "link": "Windwalker/Form/Validate/ValidateResult.html#method___construct", "name": "Windwalker\\Form\\Validate\\ValidateResult::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Validate\\ValidateResult", "fromLink": "Windwalker/Form/Validate/ValidateResult.html", "link": "Windwalker/Form/Validate/ValidateResult.html#method_isSuccess", "name": "Windwalker\\Form\\Validate\\ValidateResult::isSuccess", "doc": "&quot;isSuccess&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Validate\\ValidateResult", "fromLink": "Windwalker/Form/Validate/ValidateResult.html", "link": "Windwalker/Form/Validate/ValidateResult.html#method_isFailure", "name": "Windwalker\\Form\\Validate\\ValidateResult::isFailure", "doc": "&quot;isFailure&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Validate\\ValidateResult", "fromLink": "Windwalker/Form/Validate/ValidateResult.html", "link": "Windwalker/Form/Validate/ValidateResult.html#method_getMessage", "name": "Windwalker\\Form\\Validate\\ValidateResult::getMessage", "doc": "&quot;Method to get property Message&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Validate\\ValidateResult", "fromLink": "Windwalker/Form/Validate/ValidateResult.html", "link": "Windwalker/Form/Validate/ValidateResult.html#method_setMessage", "name": "Windwalker\\Form\\Validate\\ValidateResult::setMessage", "doc": "&quot;Method to set property message&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Validate\\ValidateResult", "fromLink": "Windwalker/Form/Validate/ValidateResult.html", "link": "Windwalker/Form/Validate/ValidateResult.html#method_getField", "name": "Windwalker\\Form\\Validate\\ValidateResult::getField", "doc": "&quot;Method to get property Field&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Validate\\ValidateResult", "fromLink": "Windwalker/Form/Validate/ValidateResult.html", "link": "Windwalker/Form/Validate/ValidateResult.html#method_setField", "name": "Windwalker\\Form\\Validate\\ValidateResult::setField", "doc": "&quot;Method to set property field&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Validate\\ValidateResult", "fromLink": "Windwalker/Form/Validate/ValidateResult.html", "link": "Windwalker/Form/Validate/ValidateResult.html#method_getResult", "name": "Windwalker\\Form\\Validate\\ValidateResult::getResult", "doc": "&quot;Method to get property Result&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Form\\Validate\\ValidateResult", "fromLink": "Windwalker/Form/Validate/ValidateResult.html", "link": "Windwalker/Form/Validate/ValidateResult.html#method_setResult", "name": "Windwalker\\Form\\Validate\\ValidateResult::setResult", "doc": "&quot;Method to set property result&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Form", "fromLink": "Windwalker/Form.html", "link": "Windwalker/Form/ValidatorHelper.html", "name": "Windwalker\\Form\\ValidatorHelper", "doc": "&quot;The ValidatorHelper class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Form\\ValidatorHelper", "fromLink": "Windwalker/Form/ValidatorHelper.html", "link": "Windwalker/Form/ValidatorHelper.html#method_create", "name": "Windwalker\\Form\\ValidatorHelper::create", "doc": "&quot;createRule&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Html\\Enum", "fromLink": "Windwalker/Html/Enum.html", "link": "Windwalker/Html/Enum/AbstractHtmlList.html", "name": "Windwalker\\Html\\Enum\\AbstractHtmlList", "doc": "&quot;The AbstractHtmlList class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Html\\Enum\\AbstractHtmlList", "fromLink": "Windwalker/Html/Enum/AbstractHtmlList.html", "link": "Windwalker/Html/Enum/AbstractHtmlList.html#method___construct", "name": "Windwalker\\Html\\Enum\\AbstractHtmlList::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Enum\\AbstractHtmlList", "fromLink": "Windwalker/Html/Enum/AbstractHtmlList.html", "link": "Windwalker/Html/Enum/AbstractHtmlList.html#method_create", "name": "Windwalker\\Html\\Enum\\AbstractHtmlList::create", "doc": "&quot;Quick create for PHP 5.3&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Enum\\AbstractHtmlList", "fromLink": "Windwalker/Html/Enum/AbstractHtmlList.html", "link": "Windwalker/Html/Enum/AbstractHtmlList.html#method_addItem", "name": "Windwalker\\Html\\Enum\\AbstractHtmlList::addItem", "doc": "&quot;addItem&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Enum\\AbstractHtmlList", "fromLink": "Windwalker/Html/Enum/AbstractHtmlList.html", "link": "Windwalker/Html/Enum/AbstractHtmlList.html#method_item", "name": "Windwalker\\Html\\Enum\\AbstractHtmlList::item", "doc": "&quot;Alias of addItem()&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Enum\\AbstractHtmlList", "fromLink": "Windwalker/Html/Enum/AbstractHtmlList.html", "link": "Windwalker/Html/Enum/AbstractHtmlList.html#method_child", "name": "Windwalker\\Html\\Enum\\AbstractHtmlList::child", "doc": "&quot;child&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Enum\\AbstractHtmlList", "fromLink": "Windwalker/Html/Enum/AbstractHtmlList.html", "link": "Windwalker/Html/Enum/AbstractHtmlList.html#method_setItems", "name": "Windwalker\\Html\\Enum\\AbstractHtmlList::setItems", "doc": "&quot;setItems&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Html\\Enum", "fromLink": "Windwalker/Html/Enum.html", "link": "Windwalker/Html/Enum/DList.html", "name": "Windwalker\\Html\\Enum\\DList", "doc": "&quot;The DList class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Html\\Enum\\DList", "fromLink": "Windwalker/Html/Enum/DList.html", "link": "Windwalker/Html/Enum/DList.html#method_addDescription", "name": "Windwalker\\Html\\Enum\\DList::addDescription", "doc": "&quot;addDescription&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Enum\\DList", "fromLink": "Windwalker/Html/Enum/DList.html", "link": "Windwalker/Html/Enum/DList.html#method_addDesc", "name": "Windwalker\\Html\\Enum\\DList::addDesc", "doc": "&quot;addItem&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Enum\\DList", "fromLink": "Windwalker/Html/Enum/DList.html", "link": "Windwalker/Html/Enum/DList.html#method_desc", "name": "Windwalker\\Html\\Enum\\DList::desc", "doc": "&quot;desc&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Enum\\DList", "fromLink": "Windwalker/Html/Enum/DList.html", "link": "Windwalker/Html/Enum/DList.html#method_addTitle", "name": "Windwalker\\Html\\Enum\\DList::addTitle", "doc": "&quot;addItem&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Enum\\DList", "fromLink": "Windwalker/Html/Enum/DList.html", "link": "Windwalker/Html/Enum/DList.html#method_title", "name": "Windwalker\\Html\\Enum\\DList::title", "doc": "&quot;title&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Enum\\DList", "fromLink": "Windwalker/Html/Enum/DList.html", "link": "Windwalker/Html/Enum/DList.html#method_addItem", "name": "Windwalker\\Html\\Enum\\DList::addItem", "doc": "&quot;addItem&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Html\\Enum", "fromLink": "Windwalker/Html/Enum.html", "link": "Windwalker/Html/Enum/DListDescription.html", "name": "Windwalker\\Html\\Enum\\DListDescription", "doc": "&quot;The DListDescription class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Html\\Enum\\DListDescription", "fromLink": "Windwalker/Html/Enum/DListDescription.html", "link": "Windwalker/Html/Enum/DListDescription.html#method___construct", "name": "Windwalker\\Html\\Enum\\DListDescription::__construct", "doc": "&quot;Constructor&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Html\\Enum", "fromLink": "Windwalker/Html/Enum.html", "link": "Windwalker/Html/Enum/DListTitle.html", "name": "Windwalker\\Html\\Enum\\DListTitle", "doc": "&quot;The DListTitle class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Html\\Enum\\DListTitle", "fromLink": "Windwalker/Html/Enum/DListTitle.html", "link": "Windwalker/Html/Enum/DListTitle.html#method___construct", "name": "Windwalker\\Html\\Enum\\DListTitle::__construct", "doc": "&quot;Constructor&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Html\\Enum", "fromLink": "Windwalker/Html/Enum.html", "link": "Windwalker/Html/Enum/ListItem.html", "name": "Windwalker\\Html\\Enum\\ListItem", "doc": "&quot;The ListItem class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Html\\Enum\\ListItem", "fromLink": "Windwalker/Html/Enum/ListItem.html", "link": "Windwalker/Html/Enum/ListItem.html#method___construct", "name": "Windwalker\\Html\\Enum\\ListItem::__construct", "doc": "&quot;Constructor&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Html\\Enum", "fromLink": "Windwalker/Html/Enum.html", "link": "Windwalker/Html/Enum/OList.html", "name": "Windwalker\\Html\\Enum\\OList", "doc": "&quot;The OList class.&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Html\\Enum", "fromLink": "Windwalker/Html/Enum.html", "link": "Windwalker/Html/Enum/UList.html", "name": "Windwalker\\Html\\Enum\\UList", "doc": "&quot;The UList class.&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Html\\Form", "fromLink": "Windwalker/Html/Form.html", "link": "Windwalker/Html/Form/FormWrapper.html", "name": "Windwalker\\Html\\Form\\FormWrapper", "doc": "&quot;The FormWrapper class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Html\\Form\\FormWrapper", "fromLink": "Windwalker/Html/Form/FormWrapper.html", "link": "Windwalker/Html/Form/FormWrapper.html#method___construct", "name": "Windwalker\\Html\\Form\\FormWrapper::__construct", "doc": "&quot;Constructor&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Form\\FormWrapper", "fromLink": "Windwalker/Html/Form/FormWrapper.html", "link": "Windwalker/Html/Form/FormWrapper.html#method_create", "name": "Windwalker\\Html\\Form\\FormWrapper::create", "doc": "&quot;create&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Form\\FormWrapper", "fromLink": "Windwalker/Html/Form/FormWrapper.html", "link": "Windwalker/Html/Form/FormWrapper.html#method_start", "name": "Windwalker\\Html\\Form\\FormWrapper::start", "doc": "&quot;start&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Form\\FormWrapper", "fromLink": "Windwalker/Html/Form/FormWrapper.html", "link": "Windwalker/Html/Form/FormWrapper.html#method_end", "name": "Windwalker\\Html\\Form\\FormWrapper::end", "doc": "&quot;end&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Form\\FormWrapper", "fromLink": "Windwalker/Html/Form/FormWrapper.html", "link": "Windwalker/Html/Form/FormWrapper.html#method_renderStart", "name": "Windwalker\\Html\\Form\\FormWrapper::renderStart", "doc": "&quot;renderStart&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Form\\FormWrapper", "fromLink": "Windwalker/Html/Form/FormWrapper.html", "link": "Windwalker/Html/Form/FormWrapper.html#method_renderEnd", "name": "Windwalker\\Html\\Form\\FormWrapper::renderEnd", "doc": "&quot;renderEnd&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Form\\FormWrapper", "fromLink": "Windwalker/Html/Form/FormWrapper.html", "link": "Windwalker/Html/Form/FormWrapper.html#method_getToken", "name": "Windwalker\\Html\\Form\\FormWrapper::getToken", "doc": "&quot;getToken&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Form\\FormWrapper", "fromLink": "Windwalker/Html/Form/FormWrapper.html", "link": "Windwalker/Html/Form/FormWrapper.html#method_acceptCharset", "name": "Windwalker\\Html\\Form\\FormWrapper::acceptCharset", "doc": "&quot;acceptCharset&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Form\\FormWrapper", "fromLink": "Windwalker/Html/Form/FormWrapper.html", "link": "Windwalker/Html/Form/FormWrapper.html#method_action", "name": "Windwalker\\Html\\Form\\FormWrapper::action", "doc": "&quot;action&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Form\\FormWrapper", "fromLink": "Windwalker/Html/Form/FormWrapper.html", "link": "Windwalker/Html/Form/FormWrapper.html#method_autocomplete", "name": "Windwalker\\Html\\Form\\FormWrapper::autocomplete", "doc": "&quot;autocomplete&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Form\\FormWrapper", "fromLink": "Windwalker/Html/Form/FormWrapper.html", "link": "Windwalker/Html/Form/FormWrapper.html#method_enctype", "name": "Windwalker\\Html\\Form\\FormWrapper::enctype", "doc": "&quot;enctype&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Form\\FormWrapper", "fromLink": "Windwalker/Html/Form/FormWrapper.html", "link": "Windwalker/Html/Form/FormWrapper.html#method_method", "name": "Windwalker\\Html\\Form\\FormWrapper::method", "doc": "&quot;method&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Form\\FormWrapper", "fromLink": "Windwalker/Html/Form/FormWrapper.html", "link": "Windwalker/Html/Form/FormWrapper.html#method_name", "name": "Windwalker\\Html\\Form\\FormWrapper::name", "doc": "&quot;name&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Form\\FormWrapper", "fromLink": "Windwalker/Html/Form/FormWrapper.html", "link": "Windwalker/Html/Form/FormWrapper.html#method_novalidate", "name": "Windwalker\\Html\\Form\\FormWrapper::novalidate", "doc": "&quot;novalidate&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Form\\FormWrapper", "fromLink": "Windwalker/Html/Form/FormWrapper.html", "link": "Windwalker/Html/Form/FormWrapper.html#method_target", "name": "Windwalker\\Html\\Form\\FormWrapper::target", "doc": "&quot;target&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Form\\FormWrapper", "fromLink": "Windwalker/Html/Form/FormWrapper.html", "link": "Windwalker/Html/Form/FormWrapper.html#method_accept", "name": "Windwalker\\Html\\Form\\FormWrapper::accept", "doc": "&quot;accept&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Form\\FormWrapper", "fromLink": "Windwalker/Html/Form/FormWrapper.html", "link": "Windwalker/Html/Form/FormWrapper.html#method_getTokenHandler", "name": "Windwalker\\Html\\Form\\FormWrapper::getTokenHandler", "doc": "&quot;Method to get property TokenHandler&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Form\\FormWrapper", "fromLink": "Windwalker/Html/Form/FormWrapper.html", "link": "Windwalker/Html/Form/FormWrapper.html#method_setTokenHandler", "name": "Windwalker\\Html\\Form\\FormWrapper::setTokenHandler", "doc": "&quot;Method to set property tokenHandler&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Html\\Form", "fromLink": "Windwalker/Html/Form.html", "link": "Windwalker/Html/Form/InputElement.html", "name": "Windwalker\\Html\\Form\\InputElement", "doc": "&quot;The InputElement class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Html\\Form\\InputElement", "fromLink": "Windwalker/Html/Form/InputElement.html", "link": "Windwalker/Html/Form/InputElement.html#method___construct", "name": "Windwalker\\Html\\Form\\InputElement::__construct", "doc": "&quot;Constructor&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Html\\Grid", "fromLink": "Windwalker/Html/Grid.html", "link": "Windwalker/Html/Grid/Grid.html", "name": "Windwalker\\Html\\Grid\\Grid", "doc": "&quot;The Grid class to dynamically generate HTML tables.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Html\\Grid\\Grid", "fromLink": "Windwalker/Html/Grid/Grid.html", "link": "Windwalker/Html/Grid/Grid.html#method___construct", "name": "Windwalker\\Html\\Grid\\Grid::__construct", "doc": "&quot;Constructor for a Grid object&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Grid\\Grid", "fromLink": "Windwalker/Html/Grid/Grid.html", "link": "Windwalker/Html/Grid/Grid.html#method_create", "name": "Windwalker\\Html\\Grid\\Grid::create", "doc": "&quot;create&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Grid\\Grid", "fromLink": "Windwalker/Html/Grid/Grid.html", "link": "Windwalker/Html/Grid/Grid.html#method___toString", "name": "Windwalker\\Html\\Grid\\Grid::__toString", "doc": "&quot;Magic function to render this object as a table.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Grid\\Grid", "fromLink": "Windwalker/Html/Grid/Grid.html", "link": "Windwalker/Html/Grid/Grid.html#method_setTableAttributes", "name": "Windwalker\\Html\\Grid\\Grid::setTableAttributes", "doc": "&quot;Method to set the attributes for a table-tag&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Grid\\Grid", "fromLink": "Windwalker/Html/Grid/Grid.html", "link": "Windwalker/Html/Grid/Grid.html#method_getTableAttributes", "name": "Windwalker\\Html\\Grid\\Grid::getTableAttributes", "doc": "&quot;Get the Attributes of the current table&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Grid\\Grid", "fromLink": "Windwalker/Html/Grid/Grid.html", "link": "Windwalker/Html/Grid/Grid.html#method_addColumn", "name": "Windwalker\\Html\\Grid\\Grid::addColumn", "doc": "&quot;Add new column name to process&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Grid\\Grid", "fromLink": "Windwalker/Html/Grid/Grid.html", "link": "Windwalker/Html/Grid/Grid.html#method_getColumns", "name": "Windwalker\\Html\\Grid\\Grid::getColumns", "doc": "&quot;Returns the list of internal columns&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Grid\\Grid", "fromLink": "Windwalker/Html/Grid/Grid.html", "link": "Windwalker/Html/Grid/Grid.html#method_deleteColumn", "name": "Windwalker\\Html\\Grid\\Grid::deleteColumn", "doc": "&quot;Delete column by name&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Grid\\Grid", "fromLink": "Windwalker/Html/Grid/Grid.html", "link": "Windwalker/Html/Grid/Grid.html#method_setColumns", "name": "Windwalker\\Html\\Grid\\Grid::setColumns", "doc": "&quot;Method to set a whole range of columns at once\nThis can be used to re-order the columns, too&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Grid\\Grid", "fromLink": "Windwalker/Html/Grid/Grid.html", "link": "Windwalker/Html/Grid/Grid.html#method_addRow", "name": "Windwalker\\Html\\Grid\\Grid::addRow", "doc": "&quot;Adds a row to the table and sets the currently\nactive row to the new row&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Grid\\Grid", "fromLink": "Windwalker/Html/Grid/Grid.html", "link": "Windwalker/Html/Grid/Grid.html#method_getRowAttributes", "name": "Windwalker\\Html\\Grid\\Grid::getRowAttributes", "doc": "&quot;Method to get the attributes of the currently active row&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Grid\\Grid", "fromLink": "Windwalker/Html/Grid/Grid.html", "link": "Windwalker/Html/Grid/Grid.html#method_setRowAttributes", "name": "Windwalker\\Html\\Grid\\Grid::setRowAttributes", "doc": "&quot;Method to set the attributes of the currently active row&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Grid\\Grid", "fromLink": "Windwalker/Html/Grid/Grid.html", "link": "Windwalker/Html/Grid/Grid.html#method_getActiveRow", "name": "Windwalker\\Html\\Grid\\Grid::getActiveRow", "doc": "&quot;Get the currently active row ID&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Grid\\Grid", "fromLink": "Windwalker/Html/Grid/Grid.html", "link": "Windwalker/Html/Grid/Grid.html#method_setActiveRow", "name": "Windwalker\\Html\\Grid\\Grid::setActiveRow", "doc": "&quot;Set the currently active row&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Grid\\Grid", "fromLink": "Windwalker/Html/Grid/Grid.html", "link": "Windwalker/Html/Grid/Grid.html#method_setRowCell", "name": "Windwalker\\Html\\Grid\\Grid::setRowCell", "doc": "&quot;Set cell content for a specific column for the\ncurrently active row&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Grid\\Grid", "fromLink": "Windwalker/Html/Grid/Grid.html", "link": "Windwalker/Html/Grid/Grid.html#method_getRow", "name": "Windwalker\\Html\\Grid\\Grid::getRow", "doc": "&quot;Get all data for a row&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Grid\\Grid", "fromLink": "Windwalker/Html/Grid/Grid.html", "link": "Windwalker/Html/Grid/Grid.html#method_getRows", "name": "Windwalker\\Html\\Grid\\Grid::getRows", "doc": "&quot;Get the IDs of all rows in the table&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Grid\\Grid", "fromLink": "Windwalker/Html/Grid/Grid.html", "link": "Windwalker/Html/Grid/Grid.html#method_deleteRow", "name": "Windwalker\\Html\\Grid\\Grid::deleteRow", "doc": "&quot;Delete a row from the object&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Grid\\Grid", "fromLink": "Windwalker/Html/Grid/Grid.html", "link": "Windwalker/Html/Grid/Grid.html#method_toString", "name": "Windwalker\\Html\\Grid\\Grid::toString", "doc": "&quot;Render the HTML table&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Html\\Grid", "fromLink": "Windwalker/Html/Grid.html", "link": "Windwalker/Html/Grid/KeyValueGrid.html", "name": "Windwalker\\Html\\Grid\\KeyValueGrid", "doc": "&quot;The KeyValueGrid class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Html\\Grid\\KeyValueGrid", "fromLink": "Windwalker/Html/Grid/KeyValueGrid.html", "link": "Windwalker/Html/Grid/KeyValueGrid.html#method_create", "name": "Windwalker\\Html\\Grid\\KeyValueGrid::create", "doc": "&quot;create&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Grid\\KeyValueGrid", "fromLink": "Windwalker/Html/Grid/KeyValueGrid.html", "link": "Windwalker/Html/Grid/KeyValueGrid.html#method___construct", "name": "Windwalker\\Html\\Grid\\KeyValueGrid::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Grid\\KeyValueGrid", "fromLink": "Windwalker/Html/Grid/KeyValueGrid.html", "link": "Windwalker/Html/Grid/KeyValueGrid.html#method_addHeader", "name": "Windwalker\\Html\\Grid\\KeyValueGrid::addHeader", "doc": "&quot;addHeader&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Grid\\KeyValueGrid", "fromLink": "Windwalker/Html/Grid/KeyValueGrid.html", "link": "Windwalker/Html/Grid/KeyValueGrid.html#method_addItem", "name": "Windwalker\\Html\\Grid\\KeyValueGrid::addItem", "doc": "&quot;addItem&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Grid\\KeyValueGrid", "fromLink": "Windwalker/Html/Grid/KeyValueGrid.html", "link": "Windwalker/Html/Grid/KeyValueGrid.html#method_addItems", "name": "Windwalker\\Html\\Grid\\KeyValueGrid::addItems", "doc": "&quot;addItems&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Grid\\KeyValueGrid", "fromLink": "Windwalker/Html/Grid/KeyValueGrid.html", "link": "Windwalker/Html/Grid/KeyValueGrid.html#method_addTitle", "name": "Windwalker\\Html\\Grid\\KeyValueGrid::addTitle", "doc": "&quot;addTitle&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Grid\\KeyValueGrid", "fromLink": "Windwalker/Html/Grid/KeyValueGrid.html", "link": "Windwalker/Html/Grid/KeyValueGrid.html#method_configure", "name": "Windwalker\\Html\\Grid\\KeyValueGrid::configure", "doc": "&quot;configureRows&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Html\\Helper", "fromLink": "Windwalker/Html/Helper.html", "link": "Windwalker/Html/Helper/HtmlHelper.html", "name": "Windwalker\\Html\\Helper\\HtmlHelper", "doc": "&quot;The HtmlHelper class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Html\\Helper\\HtmlHelper", "fromLink": "Windwalker/Html/Helper/HtmlHelper.html", "link": "Windwalker/Html/Helper/HtmlHelper.html#method_repair", "name": "Windwalker\\Html\\Helper\\HtmlHelper::repair", "doc": "&quot;Repair HTML. If Tidy not exists, use repair function.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Helper\\HtmlHelper", "fromLink": "Windwalker/Html/Helper/HtmlHelper.html", "link": "Windwalker/Html/Helper/HtmlHelper.html#method_getJSObject", "name": "Windwalker\\Html\\Helper\\HtmlHelper::getJSObject", "doc": "&quot;Method to get a JavaScript object notation string from an array&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Helper\\HtmlHelper", "fromLink": "Windwalker/Html/Helper/HtmlHelper.html", "link": "Windwalker/Html/Helper/HtmlHelper.html#method_isAssociativeArray", "name": "Windwalker\\Html\\Helper\\HtmlHelper::isAssociativeArray", "doc": "&quot;Method to determine if an array is an associative array.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Html\\Media", "fromLink": "Windwalker/Html/Media.html", "link": "Windwalker/Html/Media/AbstractMediaElement.html", "name": "Windwalker\\Html\\Media\\AbstractMediaElement", "doc": "&quot;The AbstractMediaElement class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Html\\Media\\AbstractMediaElement", "fromLink": "Windwalker/Html/Media/AbstractMediaElement.html", "link": "Windwalker/Html/Media/AbstractMediaElement.html#method___construct", "name": "Windwalker\\Html\\Media\\AbstractMediaElement::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Media\\AbstractMediaElement", "fromLink": "Windwalker/Html/Media/AbstractMediaElement.html", "link": "Windwalker/Html/Media/AbstractMediaElement.html#method_create", "name": "Windwalker\\Html\\Media\\AbstractMediaElement::create", "doc": "&quot;Quick create for PHP 5.3&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Media\\AbstractMediaElement", "fromLink": "Windwalker/Html/Media/AbstractMediaElement.html", "link": "Windwalker/Html/Media/AbstractMediaElement.html#method_toString", "name": "Windwalker\\Html\\Media\\AbstractMediaElement::toString", "doc": "&quot;toString&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Media\\AbstractMediaElement", "fromLink": "Windwalker/Html/Media/AbstractMediaElement.html", "link": "Windwalker/Html/Media/AbstractMediaElement.html#method_setMainSource", "name": "Windwalker\\Html\\Media\\AbstractMediaElement::setMainSource", "doc": "&quot;setMainSource&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Media\\AbstractMediaElement", "fromLink": "Windwalker/Html/Media/AbstractMediaElement.html", "link": "Windwalker/Html/Media/AbstractMediaElement.html#method_addSource", "name": "Windwalker\\Html\\Media\\AbstractMediaElement::addSource", "doc": "&quot;addSource&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Media\\AbstractMediaElement", "fromLink": "Windwalker/Html/Media/AbstractMediaElement.html", "link": "Windwalker/Html/Media/AbstractMediaElement.html#method_addOggSource", "name": "Windwalker\\Html\\Media\\AbstractMediaElement::addOggSource", "doc": "&quot;addOggSource&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Media\\AbstractMediaElement", "fromLink": "Windwalker/Html/Media/AbstractMediaElement.html", "link": "Windwalker/Html/Media/AbstractMediaElement.html#method_getNoSupportHint", "name": "Windwalker\\Html\\Media\\AbstractMediaElement::getNoSupportHint", "doc": "&quot;Method to get property Hint&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Media\\AbstractMediaElement", "fromLink": "Windwalker/Html/Media/AbstractMediaElement.html", "link": "Windwalker/Html/Media/AbstractMediaElement.html#method_setNoSupportHint", "name": "Windwalker\\Html\\Media\\AbstractMediaElement::setNoSupportHint", "doc": "&quot;Method to set property hint&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Media\\AbstractMediaElement", "fromLink": "Windwalker/Html/Media/AbstractMediaElement.html", "link": "Windwalker/Html/Media/AbstractMediaElement.html#method_autoplay", "name": "Windwalker\\Html\\Media\\AbstractMediaElement::autoplay", "doc": "&quot;autoplay&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Media\\AbstractMediaElement", "fromLink": "Windwalker/Html/Media/AbstractMediaElement.html", "link": "Windwalker/Html/Media/AbstractMediaElement.html#method_controls", "name": "Windwalker\\Html\\Media\\AbstractMediaElement::controls", "doc": "&quot;controls&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Media\\AbstractMediaElement", "fromLink": "Windwalker/Html/Media/AbstractMediaElement.html", "link": "Windwalker/Html/Media/AbstractMediaElement.html#method_loop", "name": "Windwalker\\Html\\Media\\AbstractMediaElement::loop", "doc": "&quot;loop&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Media\\AbstractMediaElement", "fromLink": "Windwalker/Html/Media/AbstractMediaElement.html", "link": "Windwalker/Html/Media/AbstractMediaElement.html#method_muted", "name": "Windwalker\\Html\\Media\\AbstractMediaElement::muted", "doc": "&quot;muted&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Media\\AbstractMediaElement", "fromLink": "Windwalker/Html/Media/AbstractMediaElement.html", "link": "Windwalker/Html/Media/AbstractMediaElement.html#method_preload", "name": "Windwalker\\Html\\Media\\AbstractMediaElement::preload", "doc": "&quot;preload&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Html\\Media", "fromLink": "Windwalker/Html/Media.html", "link": "Windwalker/Html/Media/Audio.html", "name": "Windwalker\\Html\\Media\\Audio", "doc": "&quot;The Audio class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Html\\Media\\Audio", "fromLink": "Windwalker/Html/Media/Audio.html", "link": "Windwalker/Html/Media/Audio.html#method_addMp3Source", "name": "Windwalker\\Html\\Media\\Audio::addMp3Source", "doc": "&quot;addMp3Source&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Media\\Audio", "fromLink": "Windwalker/Html/Media/Audio.html", "link": "Windwalker/Html/Media/Audio.html#method_addWavSource", "name": "Windwalker\\Html\\Media\\Audio::addWavSource", "doc": "&quot;addWavSource&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Html\\Media", "fromLink": "Windwalker/Html/Media.html", "link": "Windwalker/Html/Media/Video.html", "name": "Windwalker\\Html\\Media\\Video", "doc": "&quot;The Video class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Html\\Media\\Video", "fromLink": "Windwalker/Html/Media/Video.html", "link": "Windwalker/Html/Media/Video.html#method_addMp4Source", "name": "Windwalker\\Html\\Media\\Video::addMp4Source", "doc": "&quot;addMp4Source&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Media\\Video", "fromLink": "Windwalker/Html/Media/Video.html", "link": "Windwalker/Html/Media/Video.html#method_addWebMSource", "name": "Windwalker\\Html\\Media\\Video::addWebMSource", "doc": "&quot;addWebMSource&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Media\\Video", "fromLink": "Windwalker/Html/Media/Video.html", "link": "Windwalker/Html/Media/Video.html#method_poster", "name": "Windwalker\\Html\\Media\\Video::poster", "doc": "&quot;poster&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Media\\Video", "fromLink": "Windwalker/Html/Media/Video.html", "link": "Windwalker/Html/Media/Video.html#method_height", "name": "Windwalker\\Html\\Media\\Video::height", "doc": "&quot;height&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Media\\Video", "fromLink": "Windwalker/Html/Media/Video.html", "link": "Windwalker/Html/Media/Video.html#method_width", "name": "Windwalker\\Html\\Media\\Video::width", "doc": "&quot;width&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Html", "fromLink": "Windwalker/Html.html", "link": "Windwalker/Html/Option.html", "name": "Windwalker\\Html\\Option", "doc": "&quot;The HtmlOption class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Html\\Option", "fromLink": "Windwalker/Html/Option.html", "link": "Windwalker/Html/Option.html#method___construct", "name": "Windwalker\\Html\\Option::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Option", "fromLink": "Windwalker/Html/Option.html", "link": "Windwalker/Html/Option.html#method_getValue", "name": "Windwalker\\Html\\Option::getValue", "doc": "&quot;Method to get property Value&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Option", "fromLink": "Windwalker/Html/Option.html", "link": "Windwalker/Html/Option.html#method_setValue", "name": "Windwalker\\Html\\Option::setValue", "doc": "&quot;Method to set property value&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Html\\Select", "fromLink": "Windwalker/Html/Select.html", "link": "Windwalker/Html/Select/AbstractInputList.html", "name": "Windwalker\\Html\\Select\\AbstractInputList", "doc": "&quot;The InputList class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Html\\Select\\AbstractInputList", "fromLink": "Windwalker/Html/Select/AbstractInputList.html", "link": "Windwalker/Html/Select/AbstractInputList.html#method___construct", "name": "Windwalker\\Html\\Select\\AbstractInputList::__construct", "doc": "&quot;Constructor&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Select\\AbstractInputList", "fromLink": "Windwalker/Html/Select/AbstractInputList.html", "link": "Windwalker/Html/Select/AbstractInputList.html#method_addOption", "name": "Windwalker\\Html\\Select\\AbstractInputList::addOption", "doc": "&quot;addOption&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Select\\AbstractInputList", "fromLink": "Windwalker/Html/Select/AbstractInputList.html", "link": "Windwalker/Html/Select/AbstractInputList.html#method_option", "name": "Windwalker\\Html\\Select\\AbstractInputList::option", "doc": "&quot;option&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Select\\AbstractInputList", "fromLink": "Windwalker/Html/Select/AbstractInputList.html", "link": "Windwalker/Html/Select/AbstractInputList.html#method_prepareOptions", "name": "Windwalker\\Html\\Select\\AbstractInputList::prepareOptions", "doc": "&quot;prepareOptions&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Select\\AbstractInputList", "fromLink": "Windwalker/Html/Select/AbstractInputList.html", "link": "Windwalker/Html/Select/AbstractInputList.html#method_toString", "name": "Windwalker\\Html\\Select\\AbstractInputList::toString", "doc": "&quot;toString&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Select\\AbstractInputList", "fromLink": "Windwalker/Html/Select/AbstractInputList.html", "link": "Windwalker/Html/Select/AbstractInputList.html#method_getChecked", "name": "Windwalker\\Html\\Select\\AbstractInputList::getChecked", "doc": "&quot;Method to get property Checked&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Select\\AbstractInputList", "fromLink": "Windwalker/Html/Select/AbstractInputList.html", "link": "Windwalker/Html/Select/AbstractInputList.html#method_setChecked", "name": "Windwalker\\Html\\Select\\AbstractInputList::setChecked", "doc": "&quot;Method to set property checked&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Select\\AbstractInputList", "fromLink": "Windwalker/Html/Select/AbstractInputList.html", "link": "Windwalker/Html/Select/AbstractInputList.html#method_getDisabled", "name": "Windwalker\\Html\\Select\\AbstractInputList::getDisabled", "doc": "&quot;Method to get property Disabled&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Select\\AbstractInputList", "fromLink": "Windwalker/Html/Select/AbstractInputList.html", "link": "Windwalker/Html/Select/AbstractInputList.html#method_setDisabled", "name": "Windwalker\\Html\\Select\\AbstractInputList::setDisabled", "doc": "&quot;Method to set property disabled&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Select\\AbstractInputList", "fromLink": "Windwalker/Html/Select/AbstractInputList.html", "link": "Windwalker/Html/Select/AbstractInputList.html#method_getReadonly", "name": "Windwalker\\Html\\Select\\AbstractInputList::getReadonly", "doc": "&quot;Method to get property Readonly&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Select\\AbstractInputList", "fromLink": "Windwalker/Html/Select/AbstractInputList.html", "link": "Windwalker/Html/Select/AbstractInputList.html#method_setReadonly", "name": "Windwalker\\Html\\Select\\AbstractInputList::setReadonly", "doc": "&quot;Method to set property readonly&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Html\\Select", "fromLink": "Windwalker/Html/Select.html", "link": "Windwalker/Html/Select/CheckboxList.html", "name": "Windwalker\\Html\\Select\\CheckboxList", "doc": "&quot;The CheckboxList class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Html\\Select\\CheckboxList", "fromLink": "Windwalker/Html/Select/CheckboxList.html", "link": "Windwalker/Html/Select/CheckboxList.html#method_prepareOptions", "name": "Windwalker\\Html\\Select\\CheckboxList::prepareOptions", "doc": "&quot;prepareOptions&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Html\\Select", "fromLink": "Windwalker/Html/Select.html", "link": "Windwalker/Html/Select/RadioList.html", "name": "Windwalker\\Html\\Select\\RadioList", "doc": "&quot;The RadioList class.&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Html\\Select", "fromLink": "Windwalker/Html/Select.html", "link": "Windwalker/Html/Select/SelectList.html", "name": "Windwalker\\Html\\Select\\SelectList", "doc": "&quot;The SelectList class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Html\\Select\\SelectList", "fromLink": "Windwalker/Html/Select/SelectList.html", "link": "Windwalker/Html/Select/SelectList.html#method___construct", "name": "Windwalker\\Html\\Select\\SelectList::__construct", "doc": "&quot;Constructor&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Select\\SelectList", "fromLink": "Windwalker/Html/Select/SelectList.html", "link": "Windwalker/Html/Select/SelectList.html#method_create", "name": "Windwalker\\Html\\Select\\SelectList::create", "doc": "&quot;Quick create for PHP 5.3&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Select\\SelectList", "fromLink": "Windwalker/Html/Select/SelectList.html", "link": "Windwalker/Html/Select/SelectList.html#method_addOption", "name": "Windwalker\\Html\\Select\\SelectList::addOption", "doc": "&quot;addOption&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Select\\SelectList", "fromLink": "Windwalker/Html/Select/SelectList.html", "link": "Windwalker/Html/Select/SelectList.html#method_option", "name": "Windwalker\\Html\\Select\\SelectList::option", "doc": "&quot;option&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Select\\SelectList", "fromLink": "Windwalker/Html/Select/SelectList.html", "link": "Windwalker/Html/Select/SelectList.html#method_toString", "name": "Windwalker\\Html\\Select\\SelectList::toString", "doc": "&quot;toString&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Select\\SelectList", "fromLink": "Windwalker/Html/Select/SelectList.html", "link": "Windwalker/Html/Select/SelectList.html#method_getSelected", "name": "Windwalker\\Html\\Select\\SelectList::getSelected", "doc": "&quot;Method to get property Selected&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Select\\SelectList", "fromLink": "Windwalker/Html/Select/SelectList.html", "link": "Windwalker/Html/Select/SelectList.html#method_setSelected", "name": "Windwalker\\Html\\Select\\SelectList::setSelected", "doc": "&quot;Method to set property selected&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Select\\SelectList", "fromLink": "Windwalker/Html/Select/SelectList.html", "link": "Windwalker/Html/Select/SelectList.html#method___clone", "name": "Windwalker\\Html\\Select\\SelectList::__clone", "doc": "&quot;__clone&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Select\\SelectList", "fromLink": "Windwalker/Html/Select/SelectList.html", "link": "Windwalker/Html/Select/SelectList.html#method_getMultiple", "name": "Windwalker\\Html\\Select\\SelectList::getMultiple", "doc": "&quot;Method to get property Multiple&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Html\\Select\\SelectList", "fromLink": "Windwalker/Html/Select/SelectList.html", "link": "Windwalker/Html/Select/SelectList.html#method_setMultiple", "name": "Windwalker\\Html\\Select\\SelectList::setMultiple", "doc": "&quot;Method to set property multiple&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Http", "fromLink": "Windwalker/Http.html", "link": "Windwalker/Http/AbstractMessage.html", "name": "Windwalker\\Http\\AbstractMessage", "doc": "&quot;The AbstractMessage class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\AbstractMessage", "fromLink": "Windwalker/Http/AbstractMessage.html", "link": "Windwalker/Http/AbstractMessage.html#method_getProtocolVersion", "name": "Windwalker\\Http\\AbstractMessage::getProtocolVersion", "doc": "&quot;Retrieves the HTTP protocol version as a string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\AbstractMessage", "fromLink": "Windwalker/Http/AbstractMessage.html", "link": "Windwalker/Http/AbstractMessage.html#method_withProtocolVersion", "name": "Windwalker\\Http\\AbstractMessage::withProtocolVersion", "doc": "&quot;Return an instance with the specified HTTP protocol version.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\AbstractMessage", "fromLink": "Windwalker/Http/AbstractMessage.html", "link": "Windwalker/Http/AbstractMessage.html#method_getHeaders", "name": "Windwalker\\Http\\AbstractMessage::getHeaders", "doc": "&quot;Retrieves all message header values.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\AbstractMessage", "fromLink": "Windwalker/Http/AbstractMessage.html", "link": "Windwalker/Http/AbstractMessage.html#method_hasHeader", "name": "Windwalker\\Http\\AbstractMessage::hasHeader", "doc": "&quot;Checks if a header exists by the given case-insensitive name.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\AbstractMessage", "fromLink": "Windwalker/Http/AbstractMessage.html", "link": "Windwalker/Http/AbstractMessage.html#method_getHeader", "name": "Windwalker\\Http\\AbstractMessage::getHeader", "doc": "&quot;Retrieves a message header value by the given case-insensitive name.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\AbstractMessage", "fromLink": "Windwalker/Http/AbstractMessage.html", "link": "Windwalker/Http/AbstractMessage.html#method_getHeaderLine", "name": "Windwalker\\Http\\AbstractMessage::getHeaderLine", "doc": "&quot;Retrieves a comma-separated string of the values for a single header.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\AbstractMessage", "fromLink": "Windwalker/Http/AbstractMessage.html", "link": "Windwalker/Http/AbstractMessage.html#method_withHeader", "name": "Windwalker\\Http\\AbstractMessage::withHeader", "doc": "&quot;Return an instance with the provided value replacing the specified header.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\AbstractMessage", "fromLink": "Windwalker/Http/AbstractMessage.html", "link": "Windwalker/Http/AbstractMessage.html#method_withAddedHeader", "name": "Windwalker\\Http\\AbstractMessage::withAddedHeader", "doc": "&quot;Return an instance with the specified header appended with the given value.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\AbstractMessage", "fromLink": "Windwalker/Http/AbstractMessage.html", "link": "Windwalker/Http/AbstractMessage.html#method_withoutHeader", "name": "Windwalker\\Http\\AbstractMessage::withoutHeader", "doc": "&quot;Return an instance without the specified header.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\AbstractMessage", "fromLink": "Windwalker/Http/AbstractMessage.html", "link": "Windwalker/Http/AbstractMessage.html#method_getBody", "name": "Windwalker\\Http\\AbstractMessage::getBody", "doc": "&quot;Gets the body of the message.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\AbstractMessage", "fromLink": "Windwalker/Http/AbstractMessage.html", "link": "Windwalker/Http/AbstractMessage.html#method_withBody", "name": "Windwalker\\Http\\AbstractMessage::withBody", "doc": "&quot;Return an instance with the specified message body.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Http\\Helper", "fromLink": "Windwalker/Http/Helper.html", "link": "Windwalker/Http/Helper/HeaderHelper.html", "name": "Windwalker\\Http\\Helper\\HeaderHelper", "doc": "&quot;The HeaderHelper class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\Helper\\HeaderHelper", "fromLink": "Windwalker/Http/Helper/HeaderHelper.html", "link": "Windwalker/Http/Helper/HeaderHelper.html#method_getValue", "name": "Windwalker\\Http\\Helper\\HeaderHelper::getValue", "doc": "&quot;Get header value.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Helper\\HeaderHelper", "fromLink": "Windwalker/Http/Helper/HeaderHelper.html", "link": "Windwalker/Http/Helper/HeaderHelper.html#method_isValidName", "name": "Windwalker\\Http\\Helper\\HeaderHelper::isValidName", "doc": "&quot;Check whether or not a header name is valid.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Helper\\HeaderHelper", "fromLink": "Windwalker/Http/Helper/HeaderHelper.html", "link": "Windwalker/Http/Helper/HeaderHelper.html#method_filter", "name": "Windwalker\\Http\\Helper\\HeaderHelper::filter", "doc": "&quot;Method to remove invalid CRLF injection from header value.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Helper\\HeaderHelper", "fromLink": "Windwalker/Http/Helper/HeaderHelper.html", "link": "Windwalker/Http/Helper/HeaderHelper.html#method_isValidValue", "name": "Windwalker\\Http\\Helper\\HeaderHelper::isValidValue", "doc": "&quot;Method to validate a header value.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Helper\\HeaderHelper", "fromLink": "Windwalker/Http/Helper/HeaderHelper.html", "link": "Windwalker/Http/Helper/HeaderHelper.html#method_isValidProtocolVersion", "name": "Windwalker\\Http\\Helper\\HeaderHelper::isValidProtocolVersion", "doc": "&quot;Method to validate protocol version format.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Helper\\HeaderHelper", "fromLink": "Windwalker/Http/Helper/HeaderHelper.html", "link": "Windwalker/Http/Helper/HeaderHelper.html#method_allToArray", "name": "Windwalker\\Http\\Helper\\HeaderHelper::allToArray", "doc": "&quot;Convert values to array.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Helper\\HeaderHelper", "fromLink": "Windwalker/Http/Helper/HeaderHelper.html", "link": "Windwalker/Http/Helper/HeaderHelper.html#method_arrayOnlyContainsString", "name": "Windwalker\\Http\\Helper\\HeaderHelper::arrayOnlyContainsString", "doc": "&quot;Validate is an array only contains string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Helper\\HeaderHelper", "fromLink": "Windwalker/Http/Helper/HeaderHelper.html", "link": "Windwalker/Http/Helper/HeaderHelper.html#method_toHeaderLine", "name": "Windwalker\\Http\\Helper\\HeaderHelper::toHeaderLine", "doc": "&quot;Convert every header values to one line and merge multiple values with comma.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Helper\\HeaderHelper", "fromLink": "Windwalker/Http/Helper/HeaderHelper.html", "link": "Windwalker/Http/Helper/HeaderHelper.html#method_normalizeHeaderName", "name": "Windwalker\\Http\\Helper\\HeaderHelper::normalizeHeaderName", "doc": "&quot;Filter a header name to lowercase.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Helper\\HeaderHelper", "fromLink": "Windwalker/Http/Helper/HeaderHelper.html", "link": "Windwalker/Http/Helper/HeaderHelper.html#method_prepareAttachmentHeaders", "name": "Windwalker\\Http\\Helper\\HeaderHelper::prepareAttachmentHeaders", "doc": "&quot;Prepare attachment headers to response object.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Http\\Helper", "fromLink": "Windwalker/Http/Helper.html", "link": "Windwalker/Http/Helper/ResponseHelper.html", "name": "Windwalker\\Http\\Helper\\ResponseHelper", "doc": "&quot;The ResponseHelper class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\Helper\\ResponseHelper", "fromLink": "Windwalker/Http/Helper/ResponseHelper.html", "link": "Windwalker/Http/Helper/ResponseHelper.html#method_getPhrase", "name": "Windwalker\\Http\\Helper\\ResponseHelper::getPhrase", "doc": "&quot;Get status phrase by code.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Helper\\ResponseHelper", "fromLink": "Windwalker/Http/Helper/ResponseHelper.html", "link": "Windwalker/Http/Helper/ResponseHelper.html#method_validateStatus", "name": "Windwalker\\Http\\Helper\\ResponseHelper::validateStatus", "doc": "&quot;Validate a status code.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Http\\Helper", "fromLink": "Windwalker/Http/Helper.html", "link": "Windwalker/Http/Helper/ServerHelper.html", "name": "Windwalker\\Http\\Helper\\ServerHelper", "doc": "&quot;The ServerHelper class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\Helper\\ServerHelper", "fromLink": "Windwalker/Http/Helper/ServerHelper.html", "link": "Windwalker/Http/Helper/ServerHelper.html#method_getValue", "name": "Windwalker\\Http\\Helper\\ServerHelper::getValue", "doc": "&quot;Access a value in an array, returning a default value if not found&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Helper\\ServerHelper", "fromLink": "Windwalker/Http/Helper/ServerHelper.html", "link": "Windwalker/Http/Helper/ServerHelper.html#method_validateUploadedFiles", "name": "Windwalker\\Http\\Helper\\ServerHelper::validateUploadedFiles", "doc": "&quot;Recursively validate the structure in an uploaded files array.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Helper\\ServerHelper", "fromLink": "Windwalker/Http/Helper/ServerHelper.html", "link": "Windwalker/Http/Helper/ServerHelper.html#method_getAllHeaders", "name": "Windwalker\\Http\\Helper\\ServerHelper::getAllHeaders", "doc": "&quot;A proxy to getallheaders().&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Helper\\ServerHelper", "fromLink": "Windwalker/Http/Helper/ServerHelper.html", "link": "Windwalker/Http/Helper/ServerHelper.html#method_apacheRequestHeaders", "name": "Windwalker\\Http\\Helper\\ServerHelper::apacheRequestHeaders", "doc": "&quot;A proxy to apache&lt;em&gt;request&lt;\/em&gt;headers().&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Helper\\ServerHelper", "fromLink": "Windwalker/Http/Helper/ServerHelper.html", "link": "Windwalker/Http/Helper/ServerHelper.html#method_parseFormData", "name": "Windwalker\\Http\\Helper\\ServerHelper::parseFormData", "doc": "&quot;parseFormData&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Helper\\ServerHelper", "fromLink": "Windwalker/Http/Helper/ServerHelper.html", "link": "Windwalker/Http/Helper/ServerHelper.html#method_setByPath", "name": "Windwalker\\Http\\Helper\\ServerHelper::setByPath", "doc": "&quot;setByPath&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Http\\Helper", "fromLink": "Windwalker/Http/Helper.html", "link": "Windwalker/Http/Helper/StreamHelper.html", "name": "Windwalker\\Http\\Helper\\StreamHelper", "doc": "&quot;The StreamHelper class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\Helper\\StreamHelper", "fromLink": "Windwalker/Http/Helper/StreamHelper.html", "link": "Windwalker/Http/Helper/StreamHelper.html#method_copy", "name": "Windwalker\\Http\\Helper\\StreamHelper::copy", "doc": "&quot;Copy stream to another stream.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Helper\\StreamHelper", "fromLink": "Windwalker/Http/Helper/StreamHelper.html", "link": "Windwalker/Http/Helper/StreamHelper.html#method_copyTo", "name": "Windwalker\\Http\\Helper\\StreamHelper::copyTo", "doc": "&quot;Copy a stream to target resource.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Helper\\StreamHelper", "fromLink": "Windwalker/Http/Helper/StreamHelper.html", "link": "Windwalker/Http/Helper/StreamHelper.html#method_copyFrom", "name": "Windwalker\\Http\\Helper\\StreamHelper::copyFrom", "doc": "&quot;Copy a stream to target resource.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Helper\\StreamHelper", "fromLink": "Windwalker/Http/Helper/StreamHelper.html", "link": "Windwalker/Http/Helper/StreamHelper.html#method_sendAttachment", "name": "Windwalker\\Http\\Helper\\StreamHelper::sendAttachment", "doc": "&quot;A simple method to quickly send attachment stream download.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Http\\Helper", "fromLink": "Windwalker/Http/Helper.html", "link": "Windwalker/Http/Helper/UploadedFileHelper.html", "name": "Windwalker\\Http\\Helper\\UploadedFileHelper", "doc": "&quot;The UploadedFileHelper class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\Helper\\UploadedFileHelper", "fromLink": "Windwalker/Http/Helper/UploadedFileHelper.html", "link": "Windwalker/Http/Helper/UploadedFileHelper.html#method_getUploadMessage", "name": "Windwalker\\Http\\Helper\\UploadedFileHelper::getUploadMessage", "doc": "&quot;Get Upload error message.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Http", "fromLink": "Windwalker/Http.html", "link": "Windwalker/Http/HttpClient.html", "name": "Windwalker\\Http\\HttpClient", "doc": "&quot;The HttpClient class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\HttpClient", "fromLink": "Windwalker/Http/HttpClient.html", "link": "Windwalker/Http/HttpClient.html#method___construct", "name": "Windwalker\\Http\\HttpClient::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\HttpClient", "fromLink": "Windwalker/Http/HttpClient.html", "link": "Windwalker/Http/HttpClient.html#method_request", "name": "Windwalker\\Http\\HttpClient::request", "doc": "&quot;Request a remote server.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\HttpClient", "fromLink": "Windwalker/Http/HttpClient.html", "link": "Windwalker/Http/HttpClient.html#method_download", "name": "Windwalker\\Http\\HttpClient::download", "doc": "&quot;Download file to target path.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\HttpClient", "fromLink": "Windwalker/Http/HttpClient.html", "link": "Windwalker/Http/HttpClient.html#method_send", "name": "Windwalker\\Http\\HttpClient::send", "doc": "&quot;Send a request to remote.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\HttpClient", "fromLink": "Windwalker/Http/HttpClient.html", "link": "Windwalker/Http/HttpClient.html#method_options", "name": "Windwalker\\Http\\HttpClient::options", "doc": "&quot;Method to send the OPTIONS command to the server.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\HttpClient", "fromLink": "Windwalker/Http/HttpClient.html", "link": "Windwalker/Http/HttpClient.html#method_head", "name": "Windwalker\\Http\\HttpClient::head", "doc": "&quot;Method to send the HEAD command to the server.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\HttpClient", "fromLink": "Windwalker/Http/HttpClient.html", "link": "Windwalker/Http/HttpClient.html#method_get", "name": "Windwalker\\Http\\HttpClient::get", "doc": "&quot;Method to send the GET command to the server.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\HttpClient", "fromLink": "Windwalker/Http/HttpClient.html", "link": "Windwalker/Http/HttpClient.html#method_post", "name": "Windwalker\\Http\\HttpClient::post", "doc": "&quot;Method to send the POST command to the server.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\HttpClient", "fromLink": "Windwalker/Http/HttpClient.html", "link": "Windwalker/Http/HttpClient.html#method_put", "name": "Windwalker\\Http\\HttpClient::put", "doc": "&quot;Method to send the PUT command to the server.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\HttpClient", "fromLink": "Windwalker/Http/HttpClient.html", "link": "Windwalker/Http/HttpClient.html#method_delete", "name": "Windwalker\\Http\\HttpClient::delete", "doc": "&quot;Method to send the DELETE command to the server.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\HttpClient", "fromLink": "Windwalker/Http/HttpClient.html", "link": "Windwalker/Http/HttpClient.html#method_trace", "name": "Windwalker\\Http\\HttpClient::trace", "doc": "&quot;Method to send the TRACE command to the server.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\HttpClient", "fromLink": "Windwalker/Http/HttpClient.html", "link": "Windwalker/Http/HttpClient.html#method_patch", "name": "Windwalker\\Http\\HttpClient::patch", "doc": "&quot;Method to send the PATCH command to the server.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\HttpClient", "fromLink": "Windwalker/Http/HttpClient.html", "link": "Windwalker/Http/HttpClient.html#method_getOption", "name": "Windwalker\\Http\\HttpClient::getOption", "doc": "&quot;Get option value.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\HttpClient", "fromLink": "Windwalker/Http/HttpClient.html", "link": "Windwalker/Http/HttpClient.html#method_setOption", "name": "Windwalker\\Http\\HttpClient::setOption", "doc": "&quot;Set option value.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\HttpClient", "fromLink": "Windwalker/Http/HttpClient.html", "link": "Windwalker/Http/HttpClient.html#method_getOptions", "name": "Windwalker\\Http\\HttpClient::getOptions", "doc": "&quot;Method to get property Options&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\HttpClient", "fromLink": "Windwalker/Http/HttpClient.html", "link": "Windwalker/Http/HttpClient.html#method_setOptions", "name": "Windwalker\\Http\\HttpClient::setOptions", "doc": "&quot;Method to set property options&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\HttpClient", "fromLink": "Windwalker/Http/HttpClient.html", "link": "Windwalker/Http/HttpClient.html#method_getTransport", "name": "Windwalker\\Http\\HttpClient::getTransport", "doc": "&quot;Method to get property Transport&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\HttpClient", "fromLink": "Windwalker/Http/HttpClient.html", "link": "Windwalker/Http/HttpClient.html#method_setTransport", "name": "Windwalker\\Http\\HttpClient::setTransport", "doc": "&quot;Method to set property transport&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Http", "fromLink": "Windwalker/Http.html", "link": "Windwalker/Http/HttpClientInterface.html", "name": "Windwalker\\Http\\HttpClientInterface", "doc": "&quot;Interface HttpClientInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\HttpClientInterface", "fromLink": "Windwalker/Http/HttpClientInterface.html", "link": "Windwalker/Http/HttpClientInterface.html#method_request", "name": "Windwalker\\Http\\HttpClientInterface::request", "doc": "&quot;Request a remote server.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\HttpClientInterface", "fromLink": "Windwalker/Http/HttpClientInterface.html", "link": "Windwalker/Http/HttpClientInterface.html#method_send", "name": "Windwalker\\Http\\HttpClientInterface::send", "doc": "&quot;Send a request to remote.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Http", "fromLink": "Windwalker/Http.html", "link": "Windwalker/Http/HttpServer.html", "name": "Windwalker\\Http\\HttpServer", "doc": "&quot;The Server class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\HttpServer", "fromLink": "Windwalker/Http/HttpServer.html", "link": "Windwalker/Http/HttpServer.html#method_createFromGlobals", "name": "Windwalker\\Http\\HttpServer::createFromGlobals", "doc": "&quot;Create a Server instance&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\HttpServer", "fromLink": "Windwalker/Http/HttpServer.html", "link": "Windwalker/Http/HttpServer.html#method_create", "name": "Windwalker\\Http\\HttpServer::create", "doc": "&quot;Create a Server instance from an existing request object&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\HttpServer", "fromLink": "Windwalker/Http/HttpServer.html", "link": "Windwalker/Http/HttpServer.html#method___construct", "name": "Windwalker\\Http\\HttpServer::__construct", "doc": "&quot;Create a Server instance from an existing request object&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\HttpServer", "fromLink": "Windwalker/Http/HttpServer.html", "link": "Windwalker/Http/HttpServer.html#method_listen", "name": "Windwalker\\Http\\HttpServer::listen", "doc": "&quot;Execute the server.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\HttpServer", "fromLink": "Windwalker/Http/HttpServer.html", "link": "Windwalker/Http/HttpServer.html#method_getHandler", "name": "Windwalker\\Http\\HttpServer::getHandler", "doc": "&quot;Method to get property Handler&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\HttpServer", "fromLink": "Windwalker/Http/HttpServer.html", "link": "Windwalker/Http/HttpServer.html#method_setHandler", "name": "Windwalker\\Http\\HttpServer::setHandler", "doc": "&quot;Method to set property handler&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\HttpServer", "fromLink": "Windwalker/Http/HttpServer.html", "link": "Windwalker/Http/HttpServer.html#method_getRequest", "name": "Windwalker\\Http\\HttpServer::getRequest", "doc": "&quot;Method to get property Request&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\HttpServer", "fromLink": "Windwalker/Http/HttpServer.html", "link": "Windwalker/Http/HttpServer.html#method_setRequest", "name": "Windwalker\\Http\\HttpServer::setRequest", "doc": "&quot;Method to set property request&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\HttpServer", "fromLink": "Windwalker/Http/HttpServer.html", "link": "Windwalker/Http/HttpServer.html#method_getOutput", "name": "Windwalker\\Http\\HttpServer::getOutput", "doc": "&quot;Method to get property Output&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\HttpServer", "fromLink": "Windwalker/Http/HttpServer.html", "link": "Windwalker/Http/HttpServer.html#method_setOutput", "name": "Windwalker\\Http\\HttpServer::setOutput", "doc": "&quot;Method to set property output&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\HttpServer", "fromLink": "Windwalker/Http/HttpServer.html", "link": "Windwalker/Http/HttpServer.html#method_getResponse", "name": "Windwalker\\Http\\HttpServer::getResponse", "doc": "&quot;Method to get property Response&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\HttpServer", "fromLink": "Windwalker/Http/HttpServer.html", "link": "Windwalker/Http/HttpServer.html#method_setResponse", "name": "Windwalker\\Http\\HttpServer::setResponse", "doc": "&quot;Method to set property response&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Http\\Output", "fromLink": "Windwalker/Http/Output.html", "link": "Windwalker/Http/Output/CompressException.html", "name": "Windwalker\\Http\\Output\\CompressException", "doc": "&quot;The CompressException class.&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Http\\Output", "fromLink": "Windwalker/Http/Output.html", "link": "Windwalker/Http/Output/HttpCompressor.html", "name": "Windwalker\\Http\\Output\\HttpCompressor", "doc": "&quot;The HttpCompressor class to support gzip encoding.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\Output\\HttpCompressor", "fromLink": "Windwalker/Http/Output/HttpCompressor.html", "link": "Windwalker/Http/Output/HttpCompressor.html#method___construct", "name": "Windwalker\\Http\\Output\\HttpCompressor::__construct", "doc": "&quot;Compressor constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Output\\HttpCompressor", "fromLink": "Windwalker/Http/Output/HttpCompressor.html", "link": "Windwalker/Http/Output/HttpCompressor.html#method_isSupported", "name": "Windwalker\\Http\\Output\\HttpCompressor::isSupported", "doc": "&quot;Method to check zlib supported.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Output\\HttpCompressor", "fromLink": "Windwalker/Http/Output/HttpCompressor.html", "link": "Windwalker/Http/Output/HttpCompressor.html#method_compress", "name": "Windwalker\\Http\\Output\\HttpCompressor::compress", "doc": "&quot;Checks the accept encoding of the browser and compresses the data before\nsending it to the client if possible.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Output\\HttpCompressor", "fromLink": "Windwalker/Http/Output/HttpCompressor.html", "link": "Windwalker/Http/Output/HttpCompressor.html#method_encode", "name": "Windwalker\\Http\\Output\\HttpCompressor::encode", "doc": "&quot;Compress raw data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Output\\HttpCompressor", "fromLink": "Windwalker/Http/Output/HttpCompressor.html", "link": "Windwalker/Http/Output/HttpCompressor.html#method_getAcceptEncoding", "name": "Windwalker\\Http\\Output\\HttpCompressor::getAcceptEncoding", "doc": "&quot;Method to get property AcceptEncoding&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Output\\HttpCompressor", "fromLink": "Windwalker/Http/Output/HttpCompressor.html", "link": "Windwalker/Http/Output/HttpCompressor.html#method_setAcceptEncoding", "name": "Windwalker\\Http\\Output\\HttpCompressor::setAcceptEncoding", "doc": "&quot;Method to set property acceptEncoding&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Output\\HttpCompressor", "fromLink": "Windwalker/Http/Output/HttpCompressor.html", "link": "Windwalker/Http/Output/HttpCompressor.html#method_checkHeadersSent", "name": "Windwalker\\Http\\Output\\HttpCompressor::checkHeadersSent", "doc": "&quot;Method to check to see if headers have already been sent.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Output\\HttpCompressor", "fromLink": "Windwalker/Http/Output/HttpCompressor.html", "link": "Windwalker/Http/Output/HttpCompressor.html#method_checkConnectionAlive", "name": "Windwalker\\Http\\Output\\HttpCompressor::checkConnectionAlive", "doc": "&quot;Method to check the current client connection status to ensure that it is alive.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Output\\HttpCompressor", "fromLink": "Windwalker/Http/Output/HttpCompressor.html", "link": "Windwalker/Http/Output/HttpCompressor.html#method_getEncodedBy", "name": "Windwalker\\Http\\Output\\HttpCompressor::getEncodedBy", "doc": "&quot;Method to get property EncodedBy&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Output\\HttpCompressor", "fromLink": "Windwalker/Http/Output/HttpCompressor.html", "link": "Windwalker/Http/Output/HttpCompressor.html#method_setEncodedBy", "name": "Windwalker\\Http\\Output\\HttpCompressor::setEncodedBy", "doc": "&quot;Method to set property encodedBy&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Http\\Output", "fromLink": "Windwalker/Http/Output.html", "link": "Windwalker/Http/Output/NoHeaderOutput.html", "name": "Windwalker\\Http\\Output\\NoHeaderOutput", "doc": "&quot;The NoHeaderOutput class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\Output\\NoHeaderOutput", "fromLink": "Windwalker/Http/Output/NoHeaderOutput.html", "link": "Windwalker/Http/Output/NoHeaderOutput.html#method_header", "name": "Windwalker\\Http\\Output\\NoHeaderOutput::header", "doc": "&quot;Method to override parent header() and do nothing.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Http\\Output", "fromLink": "Windwalker/Http/Output.html", "link": "Windwalker/Http/Output/Output.html", "name": "Windwalker\\Http\\Output\\Output", "doc": "&quot;Standard output object for PHP SAPI.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\Output\\Output", "fromLink": "Windwalker/Http/Output/Output.html", "link": "Windwalker/Http/Output/Output.html#method_respond", "name": "Windwalker\\Http\\Output\\Output::respond", "doc": "&quot;Method to send the application response to the client.  All headers will be sent prior to the main\napplication output data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Output\\Output", "fromLink": "Windwalker/Http/Output/Output.html", "link": "Windwalker/Http/Output/Output.html#method_sendBody", "name": "Windwalker\\Http\\Output\\Output::sendBody", "doc": "&quot;Method to send the application response to the client.  All headers will be sent prior to the main\napplication output data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Output\\Output", "fromLink": "Windwalker/Http/Output/Output.html", "link": "Windwalker/Http/Output/Output.html#method_header", "name": "Windwalker\\Http\\Output\\Output::header", "doc": "&quot;Method to send a header to the client.  We wrap header() function with this method for testing reason.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Output\\Output", "fromLink": "Windwalker/Http/Output/Output.html", "link": "Windwalker/Http/Output/Output.html#method_sendHeaders", "name": "Windwalker\\Http\\Output\\Output::sendHeaders", "doc": "&quot;Send all response headers.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Output\\Output", "fromLink": "Windwalker/Http/Output/Output.html", "link": "Windwalker/Http/Output/Output.html#method_sendStatusLine", "name": "Windwalker\\Http\\Output\\Output::sendStatusLine", "doc": "&quot;Send HTTP status line.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Output\\Output", "fromLink": "Windwalker/Http/Output/Output.html", "link": "Windwalker/Http/Output/Output.html#method_headersSent", "name": "Windwalker\\Http\\Output\\Output::headersSent", "doc": "&quot;checkHeaderSent&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Http\\Output", "fromLink": "Windwalker/Http/Output.html", "link": "Windwalker/Http/Output/OutputInterface.html", "name": "Windwalker\\Http\\Output\\OutputInterface", "doc": "&quot;OutputInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\Output\\OutputInterface", "fromLink": "Windwalker/Http/Output/OutputInterface.html", "link": "Windwalker/Http/Output/OutputInterface.html#method_respond", "name": "Windwalker\\Http\\Output\\OutputInterface::respond", "doc": "&quot;Method to send the application response to the client.  All headers will be sent prior to the main\napplication output data.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Http\\Output", "fromLink": "Windwalker/Http/Output.html", "link": "Windwalker/Http/Output/StreamOutput.html", "name": "Windwalker\\Http\\Output\\StreamOutput", "doc": "&quot;The StreamOutput class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\Output\\StreamOutput", "fromLink": "Windwalker/Http/Output/StreamOutput.html", "link": "Windwalker/Http/Output/StreamOutput.html#method_respond", "name": "Windwalker\\Http\\Output\\StreamOutput::respond", "doc": "&quot;Method to send the application response to the client.  All headers will be sent prior to the main\napplication output data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Output\\StreamOutput", "fromLink": "Windwalker/Http/Output/StreamOutput.html", "link": "Windwalker/Http/Output/StreamOutput.html#method_sendBody", "name": "Windwalker\\Http\\Output\\StreamOutput::sendBody", "doc": "&quot;Send body as response.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Output\\StreamOutput", "fromLink": "Windwalker/Http/Output/StreamOutput.html", "link": "Windwalker/Http/Output/StreamOutput.html#method_getMaxBufferLength", "name": "Windwalker\\Http\\Output\\StreamOutput::getMaxBufferLength", "doc": "&quot;Method to get property MaxBufferLength&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Output\\StreamOutput", "fromLink": "Windwalker/Http/Output/StreamOutput.html", "link": "Windwalker/Http/Output/StreamOutput.html#method_setMaxBufferLength", "name": "Windwalker\\Http\\Output\\StreamOutput::setMaxBufferLength", "doc": "&quot;Method to set property maxBufferLength&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Output\\StreamOutput", "fromLink": "Windwalker/Http/Output/StreamOutput.html", "link": "Windwalker/Http/Output/StreamOutput.html#method_getDelay", "name": "Windwalker\\Http\\Output\\StreamOutput::getDelay", "doc": "&quot;Method to get property Delay&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Output\\StreamOutput", "fromLink": "Windwalker/Http/Output/StreamOutput.html", "link": "Windwalker/Http/Output/StreamOutput.html#method_setDelay", "name": "Windwalker\\Http\\Output\\StreamOutput::setDelay", "doc": "&quot;Method to set property delay&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Http\\Request", "fromLink": "Windwalker/Http/Request.html", "link": "Windwalker/Http/Request/AbstractRequest.html", "name": "Windwalker\\Http\\Request\\AbstractRequest", "doc": "&quot;The AbstractRequest class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\Request\\AbstractRequest", "fromLink": "Windwalker/Http/Request/AbstractRequest.html", "link": "Windwalker/Http/Request/AbstractRequest.html#method___construct", "name": "Windwalker\\Http\\Request\\AbstractRequest::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Request\\AbstractRequest", "fromLink": "Windwalker/Http/Request/AbstractRequest.html", "link": "Windwalker/Http/Request/AbstractRequest.html#method_getRequestTarget", "name": "Windwalker\\Http\\Request\\AbstractRequest::getRequestTarget", "doc": "&quot;Retrieves the message&#039;s request target.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Request\\AbstractRequest", "fromLink": "Windwalker/Http/Request/AbstractRequest.html", "link": "Windwalker/Http/Request/AbstractRequest.html#method_withRequestTarget", "name": "Windwalker\\Http\\Request\\AbstractRequest::withRequestTarget", "doc": "&quot;Return an instance with the specific request-target.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Request\\AbstractRequest", "fromLink": "Windwalker/Http/Request/AbstractRequest.html", "link": "Windwalker/Http/Request/AbstractRequest.html#method_getMethod", "name": "Windwalker\\Http\\Request\\AbstractRequest::getMethod", "doc": "&quot;Retrieves the HTTP method of the request.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Request\\AbstractRequest", "fromLink": "Windwalker/Http/Request/AbstractRequest.html", "link": "Windwalker/Http/Request/AbstractRequest.html#method_withMethod", "name": "Windwalker\\Http\\Request\\AbstractRequest::withMethod", "doc": "&quot;Return an instance with the provided HTTP method.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Request\\AbstractRequest", "fromLink": "Windwalker/Http/Request/AbstractRequest.html", "link": "Windwalker/Http/Request/AbstractRequest.html#method_getUri", "name": "Windwalker\\Http\\Request\\AbstractRequest::getUri", "doc": "&quot;Retrieves the URI instance.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Request\\AbstractRequest", "fromLink": "Windwalker/Http/Request/AbstractRequest.html", "link": "Windwalker/Http/Request/AbstractRequest.html#method_withUri", "name": "Windwalker\\Http\\Request\\AbstractRequest::withUri", "doc": "&quot;Returns an instance with the provided URI.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Http\\Request", "fromLink": "Windwalker/Http/Request.html", "link": "Windwalker/Http/Request/Request.html", "name": "Windwalker\\Http\\Request\\Request", "doc": "&quot;The Request class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\Request\\Request", "fromLink": "Windwalker/Http/Request/Request.html", "link": "Windwalker/Http/Request/Request.html#method_getHeaders", "name": "Windwalker\\Http\\Request\\Request::getHeaders", "doc": "&quot;Retrieves all message header values.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Request\\Request", "fromLink": "Windwalker/Http/Request/Request.html", "link": "Windwalker/Http/Request/Request.html#method_getHeader", "name": "Windwalker\\Http\\Request\\Request::getHeader", "doc": "&quot;Retrieves a message header value by the given case-insensitive name.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Request\\Request", "fromLink": "Windwalker/Http/Request/Request.html", "link": "Windwalker/Http/Request/Request.html#method_hasHeader", "name": "Windwalker\\Http\\Request\\Request::hasHeader", "doc": "&quot;Checks if a header exists by the given case-insensitive name.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Http\\Request", "fromLink": "Windwalker/Http/Request.html", "link": "Windwalker/Http/Request/ServerRequest.html", "name": "Windwalker\\Http\\Request\\ServerRequest", "doc": "&quot;Representation of an incoming, server-side HTTP request.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\Request\\ServerRequest", "fromLink": "Windwalker/Http/Request/ServerRequest.html", "link": "Windwalker/Http/Request/ServerRequest.html#method___construct", "name": "Windwalker\\Http\\Request\\ServerRequest::__construct", "doc": "&quot;Class init&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Request\\ServerRequest", "fromLink": "Windwalker/Http/Request/ServerRequest.html", "link": "Windwalker/Http/Request/ServerRequest.html#method_getServerParams", "name": "Windwalker\\Http\\Request\\ServerRequest::getServerParams", "doc": "&quot;Retrieve server parameters.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Request\\ServerRequest", "fromLink": "Windwalker/Http/Request/ServerRequest.html", "link": "Windwalker/Http/Request/ServerRequest.html#method_getCookieParams", "name": "Windwalker\\Http\\Request\\ServerRequest::getCookieParams", "doc": "&quot;Retrieve cookies.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Request\\ServerRequest", "fromLink": "Windwalker/Http/Request/ServerRequest.html", "link": "Windwalker/Http/Request/ServerRequest.html#method_withCookieParams", "name": "Windwalker\\Http\\Request\\ServerRequest::withCookieParams", "doc": "&quot;Return an instance with the specified cookies.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Request\\ServerRequest", "fromLink": "Windwalker/Http/Request/ServerRequest.html", "link": "Windwalker/Http/Request/ServerRequest.html#method_getQueryParams", "name": "Windwalker\\Http\\Request\\ServerRequest::getQueryParams", "doc": "&quot;Retrieve query string arguments.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Request\\ServerRequest", "fromLink": "Windwalker/Http/Request/ServerRequest.html", "link": "Windwalker/Http/Request/ServerRequest.html#method_withQueryParams", "name": "Windwalker\\Http\\Request\\ServerRequest::withQueryParams", "doc": "&quot;Return an instance with the specified query string arguments.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Request\\ServerRequest", "fromLink": "Windwalker/Http/Request/ServerRequest.html", "link": "Windwalker/Http/Request/ServerRequest.html#method_getUploadedFiles", "name": "Windwalker\\Http\\Request\\ServerRequest::getUploadedFiles", "doc": "&quot;Retrieve normalized file upload data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Request\\ServerRequest", "fromLink": "Windwalker/Http/Request/ServerRequest.html", "link": "Windwalker/Http/Request/ServerRequest.html#method_withUploadedFiles", "name": "Windwalker\\Http\\Request\\ServerRequest::withUploadedFiles", "doc": "&quot;Create a new instance with the specified uploaded files.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Request\\ServerRequest", "fromLink": "Windwalker/Http/Request/ServerRequest.html", "link": "Windwalker/Http/Request/ServerRequest.html#method_getParsedBody", "name": "Windwalker\\Http\\Request\\ServerRequest::getParsedBody", "doc": "&quot;Retrieve any parameters provided in the request body.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Request\\ServerRequest", "fromLink": "Windwalker/Http/Request/ServerRequest.html", "link": "Windwalker/Http/Request/ServerRequest.html#method_withParsedBody", "name": "Windwalker\\Http\\Request\\ServerRequest::withParsedBody", "doc": "&quot;Return an instance with the specified body parameters.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Request\\ServerRequest", "fromLink": "Windwalker/Http/Request/ServerRequest.html", "link": "Windwalker/Http/Request/ServerRequest.html#method_getAttributes", "name": "Windwalker\\Http\\Request\\ServerRequest::getAttributes", "doc": "&quot;Retrieve attributes derived from the request.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Request\\ServerRequest", "fromLink": "Windwalker/Http/Request/ServerRequest.html", "link": "Windwalker/Http/Request/ServerRequest.html#method_getAttribute", "name": "Windwalker\\Http\\Request\\ServerRequest::getAttribute", "doc": "&quot;Retrieve a single derived request attribute.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Request\\ServerRequest", "fromLink": "Windwalker/Http/Request/ServerRequest.html", "link": "Windwalker/Http/Request/ServerRequest.html#method_withAttribute", "name": "Windwalker\\Http\\Request\\ServerRequest::withAttribute", "doc": "&quot;Return an instance with the specified derived request attribute.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Request\\ServerRequest", "fromLink": "Windwalker/Http/Request/ServerRequest.html", "link": "Windwalker/Http/Request/ServerRequest.html#method_withoutAttribute", "name": "Windwalker\\Http\\Request\\ServerRequest::withoutAttribute", "doc": "&quot;Return an instance that removes the specified derived request attribute.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Http\\Request", "fromLink": "Windwalker/Http/Request.html", "link": "Windwalker/Http/Request/ServerRequestFactory.html", "name": "Windwalker\\Http\\Request\\ServerRequestFactory", "doc": "&quot;The ServerRequestFactory class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\Request\\ServerRequestFactory", "fromLink": "Windwalker/Http/Request/ServerRequestFactory.html", "link": "Windwalker/Http/Request/ServerRequestFactory.html#method_createFromGlobals", "name": "Windwalker\\Http\\Request\\ServerRequestFactory::createFromGlobals", "doc": "&quot;Create a request from the supplied superglobal values.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Request\\ServerRequestFactory", "fromLink": "Windwalker/Http/Request/ServerRequestFactory.html", "link": "Windwalker/Http/Request/ServerRequestFactory.html#method_createFromUri", "name": "Windwalker\\Http\\Request\\ServerRequestFactory::createFromUri", "doc": "&quot;createFromUri&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Request\\ServerRequestFactory", "fromLink": "Windwalker/Http/Request/ServerRequestFactory.html", "link": "Windwalker/Http/Request/ServerRequestFactory.html#method_prepareServers", "name": "Windwalker\\Http\\Request\\ServerRequestFactory::prepareServers", "doc": "&quot;Prepare the $_SERVER variables.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Request\\ServerRequestFactory", "fromLink": "Windwalker/Http/Request/ServerRequestFactory.html", "link": "Windwalker/Http/Request/ServerRequestFactory.html#method_prepareFiles", "name": "Windwalker\\Http\\Request\\ServerRequestFactory::prepareFiles", "doc": "&quot;Normalize uploaded files&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Request\\ServerRequestFactory", "fromLink": "Windwalker/Http/Request/ServerRequestFactory.html", "link": "Windwalker/Http/Request/ServerRequestFactory.html#method_prepareHeaders", "name": "Windwalker\\Http\\Request\\ServerRequestFactory::prepareHeaders", "doc": "&quot;Get headers from $_SERVER.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Request\\ServerRequestFactory", "fromLink": "Windwalker/Http/Request/ServerRequestFactory.html", "link": "Windwalker/Http/Request/ServerRequestFactory.html#method_prepareUri", "name": "Windwalker\\Http\\Request\\ServerRequestFactory::prepareUri", "doc": "&quot;Marshal the URI from the $_SERVER array and headers&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Request\\ServerRequestFactory", "fromLink": "Windwalker/Http/Request/ServerRequestFactory.html", "link": "Windwalker/Http/Request/ServerRequestFactory.html#method_getHostAndPortFromHeaders", "name": "Windwalker\\Http\\Request\\ServerRequestFactory::getHostAndPortFromHeaders", "doc": "&quot;Marshal the host and port from HTTP headers and\/or the PHP environment&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Request\\ServerRequestFactory", "fromLink": "Windwalker/Http/Request/ServerRequestFactory.html", "link": "Windwalker/Http/Request/ServerRequestFactory.html#method_getRequestUri", "name": "Windwalker\\Http\\Request\\ServerRequestFactory::getRequestUri", "doc": "&quot;Get the base URI for the $_SERVER superglobal.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Request\\ServerRequestFactory", "fromLink": "Windwalker/Http/Request/ServerRequestFactory.html", "link": "Windwalker/Http/Request/ServerRequestFactory.html#method_stripQueryString", "name": "Windwalker\\Http\\Request\\ServerRequestFactory::stripQueryString", "doc": "&quot;Strip the query string from a path&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Http\\Response", "fromLink": "Windwalker/Http/Response.html", "link": "Windwalker/Http/Response/AbstractContentTypeResponse.html", "name": "Windwalker\\Http\\Response\\AbstractContentTypeResponse", "doc": "&quot;An response object contains content-type handler.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\Response\\AbstractContentTypeResponse", "fromLink": "Windwalker/Http/Response/AbstractContentTypeResponse.html", "link": "Windwalker/Http/Response/AbstractContentTypeResponse.html#method___construct", "name": "Windwalker\\Http\\Response\\AbstractContentTypeResponse::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Response\\AbstractContentTypeResponse", "fromLink": "Windwalker/Http/Response/AbstractContentTypeResponse.html", "link": "Windwalker/Http/Response/AbstractContentTypeResponse.html#method_withContent", "name": "Windwalker\\Http\\Response\\AbstractContentTypeResponse::withContent", "doc": "&quot;withContent&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Response\\AbstractContentTypeResponse", "fromLink": "Windwalker/Http/Response/AbstractContentTypeResponse.html", "link": "Windwalker/Http/Response/AbstractContentTypeResponse.html#method_withContentType", "name": "Windwalker\\Http\\Response\\AbstractContentTypeResponse::withContentType", "doc": "&quot;Add Content-Type to header.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Http\\Response", "fromLink": "Windwalker/Http/Response.html", "link": "Windwalker/Http/Response/EmptyResponse.html", "name": "Windwalker\\Http\\Response\\EmptyResponse", "doc": "&quot;The EmptyResponse class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\Response\\EmptyResponse", "fromLink": "Windwalker/Http/Response/EmptyResponse.html", "link": "Windwalker/Http/Response/EmptyResponse.html#method___construct", "name": "Windwalker\\Http\\Response\\EmptyResponse::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Response\\EmptyResponse", "fromLink": "Windwalker/Http/Response/EmptyResponse.html", "link": "Windwalker/Http/Response/EmptyResponse.html#method_getBody", "name": "Windwalker\\Http\\Response\\EmptyResponse::getBody", "doc": "&quot;Gets the body of the message.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Http\\Response", "fromLink": "Windwalker/Http/Response.html", "link": "Windwalker/Http/Response/HtmlResponse.html", "name": "Windwalker\\Http\\Response\\HtmlResponse", "doc": "&quot;The HtmlResponse class.&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Http\\Response", "fromLink": "Windwalker/Http/Response.html", "link": "Windwalker/Http/Response/JsonResponse.html", "name": "Windwalker\\Http\\Response\\JsonResponse", "doc": "&quot;The HtmlResponse class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\Response\\JsonResponse", "fromLink": "Windwalker/Http/Response/JsonResponse.html", "link": "Windwalker/Http/Response/JsonResponse.html#method___construct", "name": "Windwalker\\Http\\Response\\JsonResponse::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Response\\JsonResponse", "fromLink": "Windwalker/Http/Response/JsonResponse.html", "link": "Windwalker/Http/Response/JsonResponse.html#method_withContent", "name": "Windwalker\\Http\\Response\\JsonResponse::withContent", "doc": "&quot;withContent&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Http\\Response", "fromLink": "Windwalker/Http/Response.html", "link": "Windwalker/Http/Response/RedirectResponse.html", "name": "Windwalker\\Http\\Response\\RedirectResponse", "doc": "&quot;The RedirectResponse class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\Response\\RedirectResponse", "fromLink": "Windwalker/Http/Response/RedirectResponse.html", "link": "Windwalker/Http/Response/RedirectResponse.html#method___construct", "name": "Windwalker\\Http\\Response\\RedirectResponse::__construct", "doc": "&quot;Constructor.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Http\\Response", "fromLink": "Windwalker/Http/Response.html", "link": "Windwalker/Http/Response/Response.html", "name": "Windwalker\\Http\\Response\\Response", "doc": "&quot;The AbstractResponse class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\Response\\Response", "fromLink": "Windwalker/Http/Response/Response.html", "link": "Windwalker/Http/Response/Response.html#method___construct", "name": "Windwalker\\Http\\Response\\Response::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Response\\Response", "fromLink": "Windwalker/Http/Response/Response.html", "link": "Windwalker/Http/Response/Response.html#method_getStatusCode", "name": "Windwalker\\Http\\Response\\Response::getStatusCode", "doc": "&quot;Gets the response status code.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Response\\Response", "fromLink": "Windwalker/Http/Response/Response.html", "link": "Windwalker/Http/Response/Response.html#method_withStatus", "name": "Windwalker\\Http\\Response\\Response::withStatus", "doc": "&quot;Return an instance with the specified status code and, optionally, reason phrase.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Response\\Response", "fromLink": "Windwalker/Http/Response/Response.html", "link": "Windwalker/Http/Response/Response.html#method_getReasonPhrase", "name": "Windwalker\\Http\\Response\\Response::getReasonPhrase", "doc": "&quot;Gets the response reason phrase associated with the status code.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Http\\Response", "fromLink": "Windwalker/Http/Response.html", "link": "Windwalker/Http/Response/TextResponse.html", "name": "Windwalker\\Http\\Response\\TextResponse", "doc": "&quot;The TextResponse class.&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Http\\Response", "fromLink": "Windwalker/Http/Response.html", "link": "Windwalker/Http/Response/XmlResponse.html", "name": "Windwalker\\Http\\Response\\XmlResponse", "doc": "&quot;The XmlResponse class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\Response\\XmlResponse", "fromLink": "Windwalker/Http/Response/XmlResponse.html", "link": "Windwalker/Http/Response/XmlResponse.html#method___construct", "name": "Windwalker\\Http\\Response\\XmlResponse::__construct", "doc": "&quot;Constructor.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Http\\Stream", "fromLink": "Windwalker/Http/Stream.html", "link": "Windwalker/Http/Stream/PhpInputStream.html", "name": "Windwalker\\Http\\Stream\\PhpInputStream", "doc": "&quot;The PhpInputStream class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\PhpInputStream", "fromLink": "Windwalker/Http/Stream/PhpInputStream.html", "link": "Windwalker/Http/Stream/PhpInputStream.html#method___construct", "name": "Windwalker\\Http\\Stream\\PhpInputStream::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\PhpInputStream", "fromLink": "Windwalker/Http/Stream/PhpInputStream.html", "link": "Windwalker/Http/Stream/PhpInputStream.html#method___toString", "name": "Windwalker\\Http\\Stream\\PhpInputStream::__toString", "doc": "&quot;Reads all data from the stream into a string, from the beginning to end.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\PhpInputStream", "fromLink": "Windwalker/Http/Stream/PhpInputStream.html", "link": "Windwalker/Http/Stream/PhpInputStream.html#method_isWritable", "name": "Windwalker\\Http\\Stream\\PhpInputStream::isWritable", "doc": "&quot;Returns whether or not the stream is writable.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\PhpInputStream", "fromLink": "Windwalker/Http/Stream/PhpInputStream.html", "link": "Windwalker/Http/Stream/PhpInputStream.html#method_read", "name": "Windwalker\\Http\\Stream\\PhpInputStream::read", "doc": "&quot;Read data from the stream.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\PhpInputStream", "fromLink": "Windwalker/Http/Stream/PhpInputStream.html", "link": "Windwalker/Http/Stream/PhpInputStream.html#method_getContents", "name": "Windwalker\\Http\\Stream\\PhpInputStream::getContents", "doc": "&quot;Returns the remaining contents in a string&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Http\\Stream", "fromLink": "Windwalker/Http/Stream.html", "link": "Windwalker/Http/Stream/Stream.html", "name": "Windwalker\\Http\\Stream\\Stream", "doc": "&quot;The Stream class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\Stream", "fromLink": "Windwalker/Http/Stream/Stream.html", "link": "Windwalker/Http/Stream/Stream.html#method___construct", "name": "Windwalker\\Http\\Stream\\Stream::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\Stream", "fromLink": "Windwalker/Http/Stream/Stream.html", "link": "Windwalker/Http/Stream/Stream.html#method___toString", "name": "Windwalker\\Http\\Stream\\Stream::__toString", "doc": "&quot;Reads all data from the stream into a string, from the beginning to end.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\Stream", "fromLink": "Windwalker/Http/Stream/Stream.html", "link": "Windwalker/Http/Stream/Stream.html#method_close", "name": "Windwalker\\Http\\Stream\\Stream::close", "doc": "&quot;Closes the stream and any underlying resources.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\Stream", "fromLink": "Windwalker/Http/Stream/Stream.html", "link": "Windwalker/Http/Stream/Stream.html#method_attach", "name": "Windwalker\\Http\\Stream\\Stream::attach", "doc": "&quot;Method to attach resource into object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\Stream", "fromLink": "Windwalker/Http/Stream/Stream.html", "link": "Windwalker/Http/Stream/Stream.html#method_detach", "name": "Windwalker\\Http\\Stream\\Stream::detach", "doc": "&quot;Separates any underlying resources from the stream.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\Stream", "fromLink": "Windwalker/Http/Stream/Stream.html", "link": "Windwalker/Http/Stream/Stream.html#method_getSize", "name": "Windwalker\\Http\\Stream\\Stream::getSize", "doc": "&quot;Get the size of the stream if known.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\Stream", "fromLink": "Windwalker/Http/Stream/Stream.html", "link": "Windwalker/Http/Stream/Stream.html#method_tell", "name": "Windwalker\\Http\\Stream\\Stream::tell", "doc": "&quot;Returns the current position of the file read\/write pointer&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\Stream", "fromLink": "Windwalker/Http/Stream/Stream.html", "link": "Windwalker/Http/Stream/Stream.html#method_eof", "name": "Windwalker\\Http\\Stream\\Stream::eof", "doc": "&quot;Returns true if the stream is at the end of the stream.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\Stream", "fromLink": "Windwalker/Http/Stream/Stream.html", "link": "Windwalker/Http/Stream/Stream.html#method_isSeekable", "name": "Windwalker\\Http\\Stream\\Stream::isSeekable", "doc": "&quot;Returns whether or not the stream is seekable.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\Stream", "fromLink": "Windwalker/Http/Stream/Stream.html", "link": "Windwalker/Http/Stream/Stream.html#method_seek", "name": "Windwalker\\Http\\Stream\\Stream::seek", "doc": "&quot;Seek to a position in the stream.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\Stream", "fromLink": "Windwalker/Http/Stream/Stream.html", "link": "Windwalker/Http/Stream/Stream.html#method_rewind", "name": "Windwalker\\Http\\Stream\\Stream::rewind", "doc": "&quot;Seek to the beginning of the stream.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\Stream", "fromLink": "Windwalker/Http/Stream/Stream.html", "link": "Windwalker/Http/Stream/Stream.html#method_isWritable", "name": "Windwalker\\Http\\Stream\\Stream::isWritable", "doc": "&quot;Returns whether or not the stream is writable.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\Stream", "fromLink": "Windwalker/Http/Stream/Stream.html", "link": "Windwalker/Http/Stream/Stream.html#method_write", "name": "Windwalker\\Http\\Stream\\Stream::write", "doc": "&quot;Write data to the stream.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\Stream", "fromLink": "Windwalker/Http/Stream/Stream.html", "link": "Windwalker/Http/Stream/Stream.html#method_isReadable", "name": "Windwalker\\Http\\Stream\\Stream::isReadable", "doc": "&quot;Returns whether or not the stream is readable.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\Stream", "fromLink": "Windwalker/Http/Stream/Stream.html", "link": "Windwalker/Http/Stream/Stream.html#method_read", "name": "Windwalker\\Http\\Stream\\Stream::read", "doc": "&quot;Read data from the stream.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\Stream", "fromLink": "Windwalker/Http/Stream/Stream.html", "link": "Windwalker/Http/Stream/Stream.html#method_getContents", "name": "Windwalker\\Http\\Stream\\Stream::getContents", "doc": "&quot;Returns the remaining contents in a string&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\Stream", "fromLink": "Windwalker/Http/Stream/Stream.html", "link": "Windwalker/Http/Stream/Stream.html#method_getMetadata", "name": "Windwalker\\Http\\Stream\\Stream::getMetadata", "doc": "&quot;Get stream metadata as an associative array or retrieve a specific key.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\Stream", "fromLink": "Windwalker/Http/Stream/Stream.html", "link": "Windwalker/Http/Stream/Stream.html#method_getResource", "name": "Windwalker\\Http\\Stream\\Stream::getResource", "doc": "&quot;Method to get property Resource&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Http\\Stream", "fromLink": "Windwalker/Http/Stream.html", "link": "Windwalker/Http/Stream/StringStream.html", "name": "Windwalker\\Http\\Stream\\StringStream", "doc": "&quot;The ArrayStream class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\StringStream", "fromLink": "Windwalker/Http/Stream/StringStream.html", "link": "Windwalker/Http/Stream/StringStream.html#method___construct", "name": "Windwalker\\Http\\Stream\\StringStream::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\StringStream", "fromLink": "Windwalker/Http/Stream/StringStream.html", "link": "Windwalker/Http/Stream/StringStream.html#method_close", "name": "Windwalker\\Http\\Stream\\StringStream::close", "doc": "&quot;Closes the stream and any underlying resources.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\StringStream", "fromLink": "Windwalker/Http/Stream/StringStream.html", "link": "Windwalker/Http/Stream/StringStream.html#method_attach", "name": "Windwalker\\Http\\Stream\\StringStream::attach", "doc": "&quot;Method to attach resource into object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\StringStream", "fromLink": "Windwalker/Http/Stream/StringStream.html", "link": "Windwalker/Http/Stream/StringStream.html#method_detach", "name": "Windwalker\\Http\\Stream\\StringStream::detach", "doc": "&quot;Separates any underlying resources from the stream.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\StringStream", "fromLink": "Windwalker/Http/Stream/StringStream.html", "link": "Windwalker/Http/Stream/StringStream.html#method_getSize", "name": "Windwalker\\Http\\Stream\\StringStream::getSize", "doc": "&quot;Get the size of the stream if known.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\StringStream", "fromLink": "Windwalker/Http/Stream/StringStream.html", "link": "Windwalker/Http/Stream/StringStream.html#method_tell", "name": "Windwalker\\Http\\Stream\\StringStream::tell", "doc": "&quot;Returns the current position of the file read\/write pointer&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\StringStream", "fromLink": "Windwalker/Http/Stream/StringStream.html", "link": "Windwalker/Http/Stream/StringStream.html#method_eof", "name": "Windwalker\\Http\\Stream\\StringStream::eof", "doc": "&quot;Returns true if the stream is at the end of the stream.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\StringStream", "fromLink": "Windwalker/Http/Stream/StringStream.html", "link": "Windwalker/Http/Stream/StringStream.html#method_isSeekable", "name": "Windwalker\\Http\\Stream\\StringStream::isSeekable", "doc": "&quot;Returns whether or not the stream is seekable.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\StringStream", "fromLink": "Windwalker/Http/Stream/StringStream.html", "link": "Windwalker/Http/Stream/StringStream.html#method_seek", "name": "Windwalker\\Http\\Stream\\StringStream::seek", "doc": "&quot;Seek to a position in the stream.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\StringStream", "fromLink": "Windwalker/Http/Stream/StringStream.html", "link": "Windwalker/Http/Stream/StringStream.html#method_rewind", "name": "Windwalker\\Http\\Stream\\StringStream::rewind", "doc": "&quot;Seek to the beginning of the stream.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\StringStream", "fromLink": "Windwalker/Http/Stream/StringStream.html", "link": "Windwalker/Http/Stream/StringStream.html#method_isWritable", "name": "Windwalker\\Http\\Stream\\StringStream::isWritable", "doc": "&quot;Returns whether or not the stream is writable.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\StringStream", "fromLink": "Windwalker/Http/Stream/StringStream.html", "link": "Windwalker/Http/Stream/StringStream.html#method_write", "name": "Windwalker\\Http\\Stream\\StringStream::write", "doc": "&quot;Write data to the stream.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\StringStream", "fromLink": "Windwalker/Http/Stream/StringStream.html", "link": "Windwalker/Http/Stream/StringStream.html#method_isReadable", "name": "Windwalker\\Http\\Stream\\StringStream::isReadable", "doc": "&quot;Returns whether or not the stream is readable.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\StringStream", "fromLink": "Windwalker/Http/Stream/StringStream.html", "link": "Windwalker/Http/Stream/StringStream.html#method_read", "name": "Windwalker\\Http\\Stream\\StringStream::read", "doc": "&quot;Read data from the stream.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\StringStream", "fromLink": "Windwalker/Http/Stream/StringStream.html", "link": "Windwalker/Http/Stream/StringStream.html#method_getContents", "name": "Windwalker\\Http\\Stream\\StringStream::getContents", "doc": "&quot;Returns the remaining contents in a string&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\StringStream", "fromLink": "Windwalker/Http/Stream/StringStream.html", "link": "Windwalker/Http/Stream/StringStream.html#method_getMetadata", "name": "Windwalker\\Http\\Stream\\StringStream::getMetadata", "doc": "&quot;Get stream metadata as an associative array or retrieve a specific key.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\StringStream", "fromLink": "Windwalker/Http/Stream/StringStream.html", "link": "Windwalker/Http/Stream/StringStream.html#method_getResource", "name": "Windwalker\\Http\\Stream\\StringStream::getResource", "doc": "&quot;Method to get property Resource&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\StringStream", "fromLink": "Windwalker/Http/Stream/StringStream.html", "link": "Windwalker/Http/Stream/StringStream.html#method_seekable", "name": "Windwalker\\Http\\Stream\\StringStream::seekable", "doc": "&quot;Method to set property seekable&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Stream\\StringStream", "fromLink": "Windwalker/Http/Stream/StringStream.html", "link": "Windwalker/Http/Stream/StringStream.html#method_writable", "name": "Windwalker\\Http\\Stream\\StringStream::writable", "doc": "&quot;Method to set property writable&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Http\\Transport", "fromLink": "Windwalker/Http/Transport.html", "link": "Windwalker/Http/Transport/AbstractTransport.html", "name": "Windwalker\\Http\\Transport\\AbstractTransport", "doc": "&quot;The AbstractTransport class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\Transport\\AbstractTransport", "fromLink": "Windwalker/Http/Transport/AbstractTransport.html", "link": "Windwalker/Http/Transport/AbstractTransport.html#method___construct", "name": "Windwalker\\Http\\Transport\\AbstractTransport::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Transport\\AbstractTransport", "fromLink": "Windwalker/Http/Transport/AbstractTransport.html", "link": "Windwalker/Http/Transport/AbstractTransport.html#method_request", "name": "Windwalker\\Http\\Transport\\AbstractTransport::request", "doc": "&quot;Send a request to the server and return a Response object with the response.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Transport\\AbstractTransport", "fromLink": "Windwalker/Http/Transport/AbstractTransport.html", "link": "Windwalker/Http/Transport/AbstractTransport.html#method_getOption", "name": "Windwalker\\Http\\Transport\\AbstractTransport::getOption", "doc": "&quot;Get option value.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Transport\\AbstractTransport", "fromLink": "Windwalker/Http/Transport/AbstractTransport.html", "link": "Windwalker/Http/Transport/AbstractTransport.html#method_setOption", "name": "Windwalker\\Http\\Transport\\AbstractTransport::setOption", "doc": "&quot;Set option value.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Transport\\AbstractTransport", "fromLink": "Windwalker/Http/Transport/AbstractTransport.html", "link": "Windwalker/Http/Transport/AbstractTransport.html#method_getOptions", "name": "Windwalker\\Http\\Transport\\AbstractTransport::getOptions", "doc": "&quot;Method to get property Options&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Transport\\AbstractTransport", "fromLink": "Windwalker/Http/Transport/AbstractTransport.html", "link": "Windwalker/Http/Transport/AbstractTransport.html#method_setOptions", "name": "Windwalker\\Http\\Transport\\AbstractTransport::setOptions", "doc": "&quot;Method to set property options&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Http\\Transport", "fromLink": "Windwalker/Http/Transport.html", "link": "Windwalker/Http/Transport/CurlTransport.html", "name": "Windwalker\\Http\\Transport\\CurlTransport", "doc": "&quot;The CurlTransport class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\Transport\\CurlTransport", "fromLink": "Windwalker/Http/Transport/CurlTransport.html", "link": "Windwalker/Http/Transport/CurlTransport.html#method_download", "name": "Windwalker\\Http\\Transport\\CurlTransport::download", "doc": "&quot;Use stream to download file.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Transport\\CurlTransport", "fromLink": "Windwalker/Http/Transport/CurlTransport.html", "link": "Windwalker/Http/Transport/CurlTransport.html#method_isSupported", "name": "Windwalker\\Http\\Transport\\CurlTransport::isSupported", "doc": "&quot;Method to check if HTTP transport layer available for using&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Http\\Transport", "fromLink": "Windwalker/Http/Transport.html", "link": "Windwalker/Http/Transport/StreamTransport.html", "name": "Windwalker\\Http\\Transport\\StreamTransport", "doc": "&quot;The StreamTransport class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\Transport\\StreamTransport", "fromLink": "Windwalker/Http/Transport/StreamTransport.html", "link": "Windwalker/Http/Transport/StreamTransport.html#method_download", "name": "Windwalker\\Http\\Transport\\StreamTransport::download", "doc": "&quot;Use stream to download file.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Transport\\StreamTransport", "fromLink": "Windwalker/Http/Transport/StreamTransport.html", "link": "Windwalker/Http/Transport/StreamTransport.html#method_isSupported", "name": "Windwalker\\Http\\Transport\\StreamTransport::isSupported", "doc": "&quot;Method to check if HTTP transport layer available for using&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Http\\Transport", "fromLink": "Windwalker/Http/Transport.html", "link": "Windwalker/Http/Transport/TransportInterface.html", "name": "Windwalker\\Http\\Transport\\TransportInterface", "doc": "&quot;The TransportInterface class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\Transport\\TransportInterface", "fromLink": "Windwalker/Http/Transport/TransportInterface.html", "link": "Windwalker/Http/Transport/TransportInterface.html#method___construct", "name": "Windwalker\\Http\\Transport\\TransportInterface::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Transport\\TransportInterface", "fromLink": "Windwalker/Http/Transport/TransportInterface.html", "link": "Windwalker/Http/Transport/TransportInterface.html#method_request", "name": "Windwalker\\Http\\Transport\\TransportInterface::request", "doc": "&quot;Send a request to the server and return a Response object with the response.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Transport\\TransportInterface", "fromLink": "Windwalker/Http/Transport/TransportInterface.html", "link": "Windwalker/Http/Transport/TransportInterface.html#method_download", "name": "Windwalker\\Http\\Transport\\TransportInterface::download", "doc": "&quot;Use stream to download file.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\Transport\\TransportInterface", "fromLink": "Windwalker/Http/Transport/TransportInterface.html", "link": "Windwalker/Http/Transport/TransportInterface.html#method_isSupported", "name": "Windwalker\\Http\\Transport\\TransportInterface::isSupported", "doc": "&quot;Method to check if HTTP transport layer available for using&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Http", "fromLink": "Windwalker/Http.html", "link": "Windwalker/Http/UploadedFile.html", "name": "Windwalker\\Http\\UploadedFile", "doc": "&quot;The UploadedFile class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\UploadedFile", "fromLink": "Windwalker/Http/UploadedFile.html", "link": "Windwalker/Http/UploadedFile.html#method___construct", "name": "Windwalker\\Http\\UploadedFile::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\UploadedFile", "fromLink": "Windwalker/Http/UploadedFile.html", "link": "Windwalker/Http/UploadedFile.html#method_getStream", "name": "Windwalker\\Http\\UploadedFile::getStream", "doc": "&quot;Retrieve a stream representing the uploaded file.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\UploadedFile", "fromLink": "Windwalker/Http/UploadedFile.html", "link": "Windwalker/Http/UploadedFile.html#method_moveTo", "name": "Windwalker\\Http\\UploadedFile::moveTo", "doc": "&quot;Move the uploaded file to a new location.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\UploadedFile", "fromLink": "Windwalker/Http/UploadedFile.html", "link": "Windwalker/Http/UploadedFile.html#method_getSize", "name": "Windwalker\\Http\\UploadedFile::getSize", "doc": "&quot;Retrieve the file size.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\UploadedFile", "fromLink": "Windwalker/Http/UploadedFile.html", "link": "Windwalker/Http/UploadedFile.html#method_getError", "name": "Windwalker\\Http\\UploadedFile::getError", "doc": "&quot;Retrieve the error associated with the uploaded file.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\UploadedFile", "fromLink": "Windwalker/Http/UploadedFile.html", "link": "Windwalker/Http/UploadedFile.html#method_getClientFilename", "name": "Windwalker\\Http\\UploadedFile::getClientFilename", "doc": "&quot;Retrieve the filename sent by the client.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\UploadedFile", "fromLink": "Windwalker/Http/UploadedFile.html", "link": "Windwalker/Http/UploadedFile.html#method_getClientMediaType", "name": "Windwalker\\Http\\UploadedFile::getClientMediaType", "doc": "&quot;Retrieve the media type sent by the client.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\UploadedFile", "fromLink": "Windwalker/Http/UploadedFile.html", "link": "Windwalker/Http/UploadedFile.html#method_getSapi", "name": "Windwalker\\Http\\UploadedFile::getSapi", "doc": "&quot;Method to get property Sapi&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\UploadedFile", "fromLink": "Windwalker/Http/UploadedFile.html", "link": "Windwalker/Http/UploadedFile.html#method_setSapi", "name": "Windwalker\\Http\\UploadedFile::setSapi", "doc": "&quot;Method to set property sapi&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Http", "fromLink": "Windwalker/Http.html", "link": "Windwalker/Http/WebHttpServer.html", "name": "Windwalker\\Http\\WebHttpServer", "doc": "&quot;The WebServer class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Http\\WebHttpServer", "fromLink": "Windwalker/Http/WebHttpServer.html", "link": "Windwalker/Http/WebHttpServer.html#method___construct", "name": "Windwalker\\Http\\WebHttpServer::__construct", "doc": "&quot;Server constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\WebHttpServer", "fromLink": "Windwalker/Http/WebHttpServer.html", "link": "Windwalker/Http/WebHttpServer.html#method_listen", "name": "Windwalker\\Http\\WebHttpServer::listen", "doc": "&quot;listen&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\WebHttpServer", "fromLink": "Windwalker/Http/WebHttpServer.html", "link": "Windwalker/Http/WebHttpServer.html#method_execute", "name": "Windwalker\\Http\\WebHttpServer::execute", "doc": "&quot;execute&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\WebHttpServer", "fromLink": "Windwalker/Http/WebHttpServer.html", "link": "Windwalker/Http/WebHttpServer.html#method_prepareCache", "name": "Windwalker\\Http\\WebHttpServer::prepareCache", "doc": "&quot;prepareCache&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\WebHttpServer", "fromLink": "Windwalker/Http/WebHttpServer.html", "link": "Windwalker/Http/WebHttpServer.html#method_getContentType", "name": "Windwalker\\Http\\WebHttpServer::getContentType", "doc": "&quot;Method to get property MimeType&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\WebHttpServer", "fromLink": "Windwalker/Http/WebHttpServer.html", "link": "Windwalker/Http/WebHttpServer.html#method_setContentType", "name": "Windwalker\\Http\\WebHttpServer::setContentType", "doc": "&quot;Method to set property mimeType&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\WebHttpServer", "fromLink": "Windwalker/Http/WebHttpServer.html", "link": "Windwalker/Http/WebHttpServer.html#method_getCharSet", "name": "Windwalker\\Http\\WebHttpServer::getCharSet", "doc": "&quot;Method to get property CharSet&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\WebHttpServer", "fromLink": "Windwalker/Http/WebHttpServer.html", "link": "Windwalker/Http/WebHttpServer.html#method_setCharSet", "name": "Windwalker\\Http\\WebHttpServer::setCharSet", "doc": "&quot;Method to set property charSet&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\WebHttpServer", "fromLink": "Windwalker/Http/WebHttpServer.html", "link": "Windwalker/Http/WebHttpServer.html#method_getModifiedDate", "name": "Windwalker\\Http\\WebHttpServer::getModifiedDate", "doc": "&quot;Method to get property ModifiedDate&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\WebHttpServer", "fromLink": "Windwalker/Http/WebHttpServer.html", "link": "Windwalker/Http/WebHttpServer.html#method_setModifiedDate", "name": "Windwalker\\Http\\WebHttpServer::setModifiedDate", "doc": "&quot;Method to set property modifiedDate&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\WebHttpServer", "fromLink": "Windwalker/Http/WebHttpServer.html", "link": "Windwalker/Http/WebHttpServer.html#method_getUriData", "name": "Windwalker\\Http\\WebHttpServer::getUriData", "doc": "&quot;Method to get property UriData&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\WebHttpServer", "fromLink": "Windwalker/Http/WebHttpServer.html", "link": "Windwalker/Http/WebHttpServer.html#method_setUriData", "name": "Windwalker\\Http\\WebHttpServer::setUriData", "doc": "&quot;Method to set property uriData&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\WebHttpServer", "fromLink": "Windwalker/Http/WebHttpServer.html", "link": "Windwalker/Http/WebHttpServer.html#method___get", "name": "Windwalker\\Http\\WebHttpServer::__get", "doc": "&quot;__get&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\WebHttpServer", "fromLink": "Windwalker/Http/WebHttpServer.html", "link": "Windwalker/Http/WebHttpServer.html#method_getCompressor", "name": "Windwalker\\Http\\WebHttpServer::getCompressor", "doc": "&quot;Method to get property Compressor&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\WebHttpServer", "fromLink": "Windwalker/Http/WebHttpServer.html", "link": "Windwalker/Http/WebHttpServer.html#method_setCompressor", "name": "Windwalker\\Http\\WebHttpServer::setCompressor", "doc": "&quot;Method to set property compressor&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\WebHttpServer", "fromLink": "Windwalker/Http/WebHttpServer.html", "link": "Windwalker/Http/WebHttpServer.html#method_getCachable", "name": "Windwalker\\Http\\WebHttpServer::getCachable", "doc": "&quot;Method to get property Cachable&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\WebHttpServer", "fromLink": "Windwalker/Http/WebHttpServer.html", "link": "Windwalker/Http/WebHttpServer.html#method_cachable", "name": "Windwalker\\Http\\WebHttpServer::cachable", "doc": "&quot;Method to set property cachable&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Http\\WebHttpServer", "fromLink": "Windwalker/Http/WebHttpServer.html", "link": "Windwalker/Http/WebHttpServer.html#method_createHttpCompressor", "name": "Windwalker\\Http\\WebHttpServer::createHttpCompressor", "doc": "&quot;Create Compressor object.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\IO\\Cli\\Color", "fromLink": "Windwalker/IO/Cli/Color.html", "link": "Windwalker/IO/Cli/Color/ColorProcessor.html", "name": "Windwalker\\IO\\Cli\\Color\\ColorProcessor", "doc": "&quot;Class ColorProcessor.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Color\\ColorProcessor", "fromLink": "Windwalker/IO/Cli/Color/ColorProcessor.html", "link": "Windwalker/IO/Cli/Color/ColorProcessor.html#method___construct", "name": "Windwalker\\IO\\Cli\\Color\\ColorProcessor::__construct", "doc": "&quot;Class constructor&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Color\\ColorProcessor", "fromLink": "Windwalker/IO/Cli/Color/ColorProcessor.html", "link": "Windwalker/IO/Cli/Color/ColorProcessor.html#method_addStyle", "name": "Windwalker\\IO\\Cli\\Color\\ColorProcessor::addStyle", "doc": "&quot;Add a style.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Color\\ColorProcessor", "fromLink": "Windwalker/IO/Cli/Color/ColorProcessor.html", "link": "Windwalker/IO/Cli/Color/ColorProcessor.html#method_stripColors", "name": "Windwalker\\IO\\Cli\\Color\\ColorProcessor::stripColors", "doc": "&quot;Strip color tags from a string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Color\\ColorProcessor", "fromLink": "Windwalker/IO/Cli/Color/ColorProcessor.html", "link": "Windwalker/IO/Cli/Color/ColorProcessor.html#method_process", "name": "Windwalker\\IO\\Cli\\Color\\ColorProcessor::process", "doc": "&quot;Process a string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Color\\ColorProcessor", "fromLink": "Windwalker/IO/Cli/Color/ColorProcessor.html", "link": "Windwalker/IO/Cli/Color/ColorProcessor.html#method_getNoColors", "name": "Windwalker\\IO\\Cli\\Color\\ColorProcessor::getNoColors", "doc": "&quot;Method to get property NoColors&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Color\\ColorProcessor", "fromLink": "Windwalker/IO/Cli/Color/ColorProcessor.html", "link": "Windwalker/IO/Cli/Color/ColorProcessor.html#method_setNoColors", "name": "Windwalker\\IO\\Cli\\Color\\ColorProcessor::setNoColors", "doc": "&quot;Method to set property noColors&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\IO\\Cli\\Color", "fromLink": "Windwalker/IO/Cli/Color.html", "link": "Windwalker/IO/Cli/Color/ColorProcessorInterface.html", "name": "Windwalker\\IO\\Cli\\Color\\ColorProcessorInterface", "doc": "&quot;Class ProcessorInterface.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Color\\ColorProcessorInterface", "fromLink": "Windwalker/IO/Cli/Color/ColorProcessorInterface.html", "link": "Windwalker/IO/Cli/Color/ColorProcessorInterface.html#method_process", "name": "Windwalker\\IO\\Cli\\Color\\ColorProcessorInterface::process", "doc": "&quot;Process the provided output into a string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Color\\ColorProcessorInterface", "fromLink": "Windwalker/IO/Cli/Color/ColorProcessorInterface.html", "link": "Windwalker/IO/Cli/Color/ColorProcessorInterface.html#method_addStyle", "name": "Windwalker\\IO\\Cli\\Color\\ColorProcessorInterface::addStyle", "doc": "&quot;Add a style.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Color\\ColorProcessorInterface", "fromLink": "Windwalker/IO/Cli/Color/ColorProcessorInterface.html", "link": "Windwalker/IO/Cli/Color/ColorProcessorInterface.html#method_setNoColors", "name": "Windwalker\\IO\\Cli\\Color\\ColorProcessorInterface::setNoColors", "doc": "&quot;Method to set property noColors&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\IO\\Cli\\Color", "fromLink": "Windwalker/IO/Cli/Color.html", "link": "Windwalker/IO/Cli/Color/ColorStyle.html", "name": "Windwalker\\IO\\Cli\\Color\\ColorStyle", "doc": "&quot;Class ColorStyle&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Color\\ColorStyle", "fromLink": "Windwalker/IO/Cli/Color/ColorStyle.html", "link": "Windwalker/IO/Cli/Color/ColorStyle.html#method___construct", "name": "Windwalker\\IO\\Cli\\Color\\ColorStyle::__construct", "doc": "&quot;Constructor&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Color\\ColorStyle", "fromLink": "Windwalker/IO/Cli/Color/ColorStyle.html", "link": "Windwalker/IO/Cli/Color/ColorStyle.html#method___toString", "name": "Windwalker\\IO\\Cli\\Color\\ColorStyle::__toString", "doc": "&quot;Convert to a string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Color\\ColorStyle", "fromLink": "Windwalker/IO/Cli/Color/ColorStyle.html", "link": "Windwalker/IO/Cli/Color/ColorStyle.html#method_fromString", "name": "Windwalker\\IO\\Cli\\Color\\ColorStyle::fromString", "doc": "&quot;Create a color style from a parameter string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Color\\ColorStyle", "fromLink": "Windwalker/IO/Cli/Color/ColorStyle.html", "link": "Windwalker/IO/Cli/Color/ColorStyle.html#method_getStyle", "name": "Windwalker\\IO\\Cli\\Color\\ColorStyle::getStyle", "doc": "&quot;Get the translated color code.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Color\\ColorStyle", "fromLink": "Windwalker/IO/Cli/Color/ColorStyle.html", "link": "Windwalker/IO/Cli/Color/ColorStyle.html#method_getKnownColors", "name": "Windwalker\\IO\\Cli\\Color\\ColorStyle::getKnownColors", "doc": "&quot;Get the known colors.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Color\\ColorStyle", "fromLink": "Windwalker/IO/Cli/Color/ColorStyle.html", "link": "Windwalker/IO/Cli/Color/ColorStyle.html#method_getKnownOptions", "name": "Windwalker\\IO\\Cli\\Color\\ColorStyle::getKnownOptions", "doc": "&quot;Get the known options.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\IO\\Cli\\Color", "fromLink": "Windwalker/IO/Cli/Color.html", "link": "Windwalker/IO/Cli/Color/NoColorProcessor.html", "name": "Windwalker\\IO\\Cli\\Color\\NoColorProcessor", "doc": "&quot;The NullColorProcessor class.&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\IO\\Cli", "fromLink": "Windwalker/IO/Cli.html", "link": "Windwalker/IO/Cli/IO.html", "name": "Windwalker\\IO\\Cli\\IO", "doc": "&quot;The IO class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IO", "fromLink": "Windwalker/IO/Cli/IO.html", "link": "Windwalker/IO/Cli/IO.html#method___construct", "name": "Windwalker\\IO\\Cli\\IO::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IO", "fromLink": "Windwalker/IO/Cli/IO.html", "link": "Windwalker/IO/Cli/IO.html#method_out", "name": "Windwalker\\IO\\Cli\\IO::out", "doc": "&quot;Write a string to standard output&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IO", "fromLink": "Windwalker/IO/Cli/IO.html", "link": "Windwalker/IO/Cli/IO.html#method_in", "name": "Windwalker\\IO\\Cli\\IO::in", "doc": "&quot;Get a value from standard input.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IO", "fromLink": "Windwalker/IO/Cli/IO.html", "link": "Windwalker/IO/Cli/IO.html#method_err", "name": "Windwalker\\IO\\Cli\\IO::err", "doc": "&quot;Write a string to standard error output.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IO", "fromLink": "Windwalker/IO/Cli/IO.html", "link": "Windwalker/IO/Cli/IO.html#method_getOption", "name": "Windwalker\\IO\\Cli\\IO::getOption", "doc": "&quot;Gets a value from the input data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IO", "fromLink": "Windwalker/IO/Cli/IO.html", "link": "Windwalker/IO/Cli/IO.html#method_setOption", "name": "Windwalker\\IO\\Cli\\IO::setOption", "doc": "&quot;Sets a value&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IO", "fromLink": "Windwalker/IO/Cli/IO.html", "link": "Windwalker/IO/Cli/IO.html#method_getArgument", "name": "Windwalker\\IO\\Cli\\IO::getArgument", "doc": "&quot;getArgument&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IO", "fromLink": "Windwalker/IO/Cli/IO.html", "link": "Windwalker/IO/Cli/IO.html#method_setArgument", "name": "Windwalker\\IO\\Cli\\IO::setArgument", "doc": "&quot;setArgument&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IO", "fromLink": "Windwalker/IO/Cli/IO.html", "link": "Windwalker/IO/Cli/IO.html#method_getInput", "name": "Windwalker\\IO\\Cli\\IO::getInput", "doc": "&quot;getInput&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IO", "fromLink": "Windwalker/IO/Cli/IO.html", "link": "Windwalker/IO/Cli/IO.html#method_setInput", "name": "Windwalker\\IO\\Cli\\IO::setInput", "doc": "&quot;setInput&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IO", "fromLink": "Windwalker/IO/Cli/IO.html", "link": "Windwalker/IO/Cli/IO.html#method_getOutput", "name": "Windwalker\\IO\\Cli\\IO::getOutput", "doc": "&quot;getOutput&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IO", "fromLink": "Windwalker/IO/Cli/IO.html", "link": "Windwalker/IO/Cli/IO.html#method_setOutput", "name": "Windwalker\\IO\\Cli\\IO::setOutput", "doc": "&quot;setOutput&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IO", "fromLink": "Windwalker/IO/Cli/IO.html", "link": "Windwalker/IO/Cli/IO.html#method_getCalledScript", "name": "Windwalker\\IO\\Cli\\IO::getCalledScript", "doc": "&quot;getExecuted&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IO", "fromLink": "Windwalker/IO/Cli/IO.html", "link": "Windwalker/IO/Cli/IO.html#method_getOptions", "name": "Windwalker\\IO\\Cli\\IO::getOptions", "doc": "&quot;getOptions&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IO", "fromLink": "Windwalker/IO/Cli/IO.html", "link": "Windwalker/IO/Cli/IO.html#method_getArguments", "name": "Windwalker\\IO\\Cli\\IO::getArguments", "doc": "&quot;getArguments&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IO", "fromLink": "Windwalker/IO/Cli/IO.html", "link": "Windwalker/IO/Cli/IO.html#method_offsetSet", "name": "Windwalker\\IO\\Cli\\IO::offsetSet", "doc": "&quot;Set value to property&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IO", "fromLink": "Windwalker/IO/Cli/IO.html", "link": "Windwalker/IO/Cli/IO.html#method_offsetUnset", "name": "Windwalker\\IO\\Cli\\IO::offsetUnset", "doc": "&quot;Unset a property.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IO", "fromLink": "Windwalker/IO/Cli/IO.html", "link": "Windwalker/IO/Cli/IO.html#method_offsetExists", "name": "Windwalker\\IO\\Cli\\IO::offsetExists", "doc": "&quot;Property is exist or not.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IO", "fromLink": "Windwalker/IO/Cli/IO.html", "link": "Windwalker/IO/Cli/IO.html#method_offsetGet", "name": "Windwalker\\IO\\Cli\\IO::offsetGet", "doc": "&quot;Get a value of property.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IO", "fromLink": "Windwalker/IO/Cli/IO.html", "link": "Windwalker/IO/Cli/IO.html#method_getIterator", "name": "Windwalker\\IO\\Cli\\IO::getIterator", "doc": "&quot;Get the data store for iterate.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IO", "fromLink": "Windwalker/IO/Cli/IO.html", "link": "Windwalker/IO/Cli/IO.html#method_serialize", "name": "Windwalker\\IO\\Cli\\IO::serialize", "doc": "&quot;Serialize data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IO", "fromLink": "Windwalker/IO/Cli/IO.html", "link": "Windwalker/IO/Cli/IO.html#method_unserialize", "name": "Windwalker\\IO\\Cli\\IO::unserialize", "doc": "&quot;Unserialize the data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IO", "fromLink": "Windwalker/IO/Cli/IO.html", "link": "Windwalker/IO/Cli/IO.html#method_count", "name": "Windwalker\\IO\\Cli\\IO::count", "doc": "&quot;Count data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IO", "fromLink": "Windwalker/IO/Cli/IO.html", "link": "Windwalker/IO/Cli/IO.html#method_jsonSerialize", "name": "Windwalker\\IO\\Cli\\IO::jsonSerialize", "doc": "&quot;Serialize to json format.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\IO\\Cli", "fromLink": "Windwalker/IO/Cli.html", "link": "Windwalker/IO/Cli/IOInterface.html", "name": "Windwalker\\IO\\Cli\\IOInterface", "doc": "&quot;Class IOInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IOInterface", "fromLink": "Windwalker/IO/Cli/IOInterface.html", "link": "Windwalker/IO/Cli/IOInterface.html#method_out", "name": "Windwalker\\IO\\Cli\\IOInterface::out", "doc": "&quot;Write a string to standard output&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IOInterface", "fromLink": "Windwalker/IO/Cli/IOInterface.html", "link": "Windwalker/IO/Cli/IOInterface.html#method_in", "name": "Windwalker\\IO\\Cli\\IOInterface::in", "doc": "&quot;Get a value from standard input.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IOInterface", "fromLink": "Windwalker/IO/Cli/IOInterface.html", "link": "Windwalker/IO/Cli/IOInterface.html#method_err", "name": "Windwalker\\IO\\Cli\\IOInterface::err", "doc": "&quot;Write a string to standard error output.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IOInterface", "fromLink": "Windwalker/IO/Cli/IOInterface.html", "link": "Windwalker/IO/Cli/IOInterface.html#method_getOption", "name": "Windwalker\\IO\\Cli\\IOInterface::getOption", "doc": "&quot;Gets a value from the input data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IOInterface", "fromLink": "Windwalker/IO/Cli/IOInterface.html", "link": "Windwalker/IO/Cli/IOInterface.html#method_setOption", "name": "Windwalker\\IO\\Cli\\IOInterface::setOption", "doc": "&quot;Sets a value&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IOInterface", "fromLink": "Windwalker/IO/Cli/IOInterface.html", "link": "Windwalker/IO/Cli/IOInterface.html#method_getOptions", "name": "Windwalker\\IO\\Cli\\IOInterface::getOptions", "doc": "&quot;getOptions&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IOInterface", "fromLink": "Windwalker/IO/Cli/IOInterface.html", "link": "Windwalker/IO/Cli/IOInterface.html#method_getArgument", "name": "Windwalker\\IO\\Cli\\IOInterface::getArgument", "doc": "&quot;getArgument&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IOInterface", "fromLink": "Windwalker/IO/Cli/IOInterface.html", "link": "Windwalker/IO/Cli/IOInterface.html#method_setArgument", "name": "Windwalker\\IO\\Cli\\IOInterface::setArgument", "doc": "&quot;setArgument&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IOInterface", "fromLink": "Windwalker/IO/Cli/IOInterface.html", "link": "Windwalker/IO/Cli/IOInterface.html#method_getArguments", "name": "Windwalker\\IO\\Cli\\IOInterface::getArguments", "doc": "&quot;getArguments&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\IOInterface", "fromLink": "Windwalker/IO/Cli/IOInterface.html", "link": "Windwalker/IO/Cli/IOInterface.html#method_getCalledScript", "name": "Windwalker\\IO\\Cli\\IOInterface::getCalledScript", "doc": "&quot;getExecuted&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\IO\\Cli\\Input", "fromLink": "Windwalker/IO/Cli/Input.html", "link": "Windwalker/IO/Cli/Input/CliInput.html", "name": "Windwalker\\IO\\Cli\\Input\\CliInput", "doc": "&quot;Windwalker Input CLI Class&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Input\\CliInput", "fromLink": "Windwalker/IO/Cli/Input/CliInput.html", "link": "Windwalker/IO/Cli/Input/CliInput.html#method_prepareSource", "name": "Windwalker\\IO\\Cli\\Input\\CliInput::prepareSource", "doc": "&quot;Prepare source.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Input\\CliInput", "fromLink": "Windwalker/IO/Cli/Input/CliInput.html", "link": "Windwalker/IO/Cli/Input/CliInput.html#method_serialize", "name": "Windwalker\\IO\\Cli\\Input\\CliInput::serialize", "doc": "&quot;Method to serialize the input.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Input\\CliInput", "fromLink": "Windwalker/IO/Cli/Input/CliInput.html", "link": "Windwalker/IO/Cli/Input/CliInput.html#method_get", "name": "Windwalker\\IO\\Cli\\Input\\CliInput::get", "doc": "&quot;Gets a value from the input data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Input\\CliInput", "fromLink": "Windwalker/IO/Cli/Input/CliInput.html", "link": "Windwalker/IO/Cli/Input/CliInput.html#method_all", "name": "Windwalker\\IO\\Cli\\Input\\CliInput::all", "doc": "&quot;Gets an array of values from the request.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Input\\CliInput", "fromLink": "Windwalker/IO/Cli/Input/CliInput.html", "link": "Windwalker/IO/Cli/Input/CliInput.html#method_unserialize", "name": "Windwalker\\IO\\Cli\\Input\\CliInput::unserialize", "doc": "&quot;Method to unserialize the input.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Input\\CliInput", "fromLink": "Windwalker/IO/Cli/Input/CliInput.html", "link": "Windwalker/IO/Cli/Input/CliInput.html#method_getArgument", "name": "Windwalker\\IO\\Cli\\Input\\CliInput::getArgument", "doc": "&quot;getArgument&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Input\\CliInput", "fromLink": "Windwalker/IO/Cli/Input/CliInput.html", "link": "Windwalker/IO/Cli/Input/CliInput.html#method_setArgument", "name": "Windwalker\\IO\\Cli\\Input\\CliInput::setArgument", "doc": "&quot;setArgument&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Input\\CliInput", "fromLink": "Windwalker/IO/Cli/Input/CliInput.html", "link": "Windwalker/IO/Cli/Input/CliInput.html#method_in", "name": "Windwalker\\IO\\Cli\\Input\\CliInput::in", "doc": "&quot;Get a value from standard input.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Input\\CliInput", "fromLink": "Windwalker/IO/Cli/Input/CliInput.html", "link": "Windwalker/IO/Cli/Input/CliInput.html#method_getInputStream", "name": "Windwalker\\IO\\Cli\\Input\\CliInput::getInputStream", "doc": "&quot;getInputStream&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Input\\CliInput", "fromLink": "Windwalker/IO/Cli/Input/CliInput.html", "link": "Windwalker/IO/Cli/Input/CliInput.html#method_setInputStream", "name": "Windwalker\\IO\\Cli\\Input\\CliInput::setInputStream", "doc": "&quot;setInputStream&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Input\\CliInput", "fromLink": "Windwalker/IO/Cli/Input/CliInput.html", "link": "Windwalker/IO/Cli/Input/CliInput.html#method_getCalledScript", "name": "Windwalker\\IO\\Cli\\Input\\CliInput::getCalledScript", "doc": "&quot;getCalledScript&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Input\\CliInput", "fromLink": "Windwalker/IO/Cli/Input/CliInput.html", "link": "Windwalker/IO/Cli/Input/CliInput.html#method_setCalledScript", "name": "Windwalker\\IO\\Cli\\Input\\CliInput::setCalledScript", "doc": "&quot;setCalledScript&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\IO\\Cli\\Input", "fromLink": "Windwalker/IO/Cli/Input.html", "link": "Windwalker/IO/Cli/Input/CliInputInterface.html", "name": "Windwalker\\IO\\Cli\\Input\\CliInputInterface", "doc": "&quot;Interface CliInputInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Input\\CliInputInterface", "fromLink": "Windwalker/IO/Cli/Input/CliInputInterface.html", "link": "Windwalker/IO/Cli/Input/CliInputInterface.html#method_in", "name": "Windwalker\\IO\\Cli\\Input\\CliInputInterface::in", "doc": "&quot;Get a value from standard input.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Input\\CliInputInterface", "fromLink": "Windwalker/IO/Cli/Input/CliInputInterface.html", "link": "Windwalker/IO/Cli/Input/CliInputInterface.html#method_get", "name": "Windwalker\\IO\\Cli\\Input\\CliInputInterface::get", "doc": "&quot;Gets a value from the input data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Input\\CliInputInterface", "fromLink": "Windwalker/IO/Cli/Input/CliInputInterface.html", "link": "Windwalker/IO/Cli/Input/CliInputInterface.html#method_set", "name": "Windwalker\\IO\\Cli\\Input\\CliInputInterface::set", "doc": "&quot;Sets a value&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Input\\CliInputInterface", "fromLink": "Windwalker/IO/Cli/Input/CliInputInterface.html", "link": "Windwalker/IO/Cli/Input/CliInputInterface.html#method_all", "name": "Windwalker\\IO\\Cli\\Input\\CliInputInterface::all", "doc": "&quot;Gets an array of values from the request.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Input\\CliInputInterface", "fromLink": "Windwalker/IO/Cli/Input/CliInputInterface.html", "link": "Windwalker/IO/Cli/Input/CliInputInterface.html#method_getArgument", "name": "Windwalker\\IO\\Cli\\Input\\CliInputInterface::getArgument", "doc": "&quot;getArgument&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Input\\CliInputInterface", "fromLink": "Windwalker/IO/Cli/Input/CliInputInterface.html", "link": "Windwalker/IO/Cli/Input/CliInputInterface.html#method_getCalledScript", "name": "Windwalker\\IO\\Cli\\Input\\CliInputInterface::getCalledScript", "doc": "&quot;getCalledScript&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\IO\\Cli\\Output", "fromLink": "Windwalker/IO/Cli/Output.html", "link": "Windwalker/IO/Cli/Output/AbstractCliOutput.html", "name": "Windwalker\\IO\\Cli\\Output\\AbstractCliOutput", "doc": "&quot;Class AbstractCliOutput&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Output\\AbstractCliOutput", "fromLink": "Windwalker/IO/Cli/Output/AbstractCliOutput.html", "link": "Windwalker/IO/Cli/Output/AbstractCliOutput.html#method_getOutputStream", "name": "Windwalker\\IO\\Cli\\Output\\AbstractCliOutput::getOutputStream", "doc": "&quot;getOutStream&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Output\\AbstractCliOutput", "fromLink": "Windwalker/IO/Cli/Output/AbstractCliOutput.html", "link": "Windwalker/IO/Cli/Output/AbstractCliOutput.html#method_setOutputStream", "name": "Windwalker\\IO\\Cli\\Output\\AbstractCliOutput::setOutputStream", "doc": "&quot;setOutStream&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Output\\AbstractCliOutput", "fromLink": "Windwalker/IO/Cli/Output/AbstractCliOutput.html", "link": "Windwalker/IO/Cli/Output/AbstractCliOutput.html#method_getErrorStream", "name": "Windwalker\\IO\\Cli\\Output\\AbstractCliOutput::getErrorStream", "doc": "&quot;Method to get property ErrorStream&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Output\\AbstractCliOutput", "fromLink": "Windwalker/IO/Cli/Output/AbstractCliOutput.html", "link": "Windwalker/IO/Cli/Output/AbstractCliOutput.html#method_setErrorStream", "name": "Windwalker\\IO\\Cli\\Output\\AbstractCliOutput::setErrorStream", "doc": "&quot;Method to set property errorStream&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\IO\\Cli\\Output", "fromLink": "Windwalker/IO/Cli/Output.html", "link": "Windwalker/IO/Cli/Output/CliOutput.html", "name": "Windwalker\\IO\\Cli\\Output\\CliOutput", "doc": "&quot;Simple Cli Output&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Output\\CliOutput", "fromLink": "Windwalker/IO/Cli/Output/CliOutput.html", "link": "Windwalker/IO/Cli/Output/CliOutput.html#method___construct", "name": "Windwalker\\IO\\Cli\\Output\\CliOutput::__construct", "doc": "&quot;Constructor&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Output\\CliOutput", "fromLink": "Windwalker/IO/Cli/Output/CliOutput.html", "link": "Windwalker/IO/Cli/Output/CliOutput.html#method_out", "name": "Windwalker\\IO\\Cli\\Output\\CliOutput::out", "doc": "&quot;Write a string to standard output&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Output\\CliOutput", "fromLink": "Windwalker/IO/Cli/Output/CliOutput.html", "link": "Windwalker/IO/Cli/Output/CliOutput.html#method_err", "name": "Windwalker\\IO\\Cli\\Output\\CliOutput::err", "doc": "&quot;Write a string to standard error output.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Output\\CliOutput", "fromLink": "Windwalker/IO/Cli/Output/CliOutput.html", "link": "Windwalker/IO/Cli/Output/CliOutput.html#method_setProcessor", "name": "Windwalker\\IO\\Cli\\Output\\CliOutput::setProcessor", "doc": "&quot;Set a processor&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Output\\CliOutput", "fromLink": "Windwalker/IO/Cli/Output/CliOutput.html", "link": "Windwalker/IO/Cli/Output/CliOutput.html#method_getProcessor", "name": "Windwalker\\IO\\Cli\\Output\\CliOutput::getProcessor", "doc": "&quot;Get a processor&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\IO\\Cli\\Output", "fromLink": "Windwalker/IO/Cli/Output.html", "link": "Windwalker/IO/Cli/Output/CliOutputInterface.html", "name": "Windwalker\\IO\\Cli\\Output\\CliOutputInterface", "doc": "&quot;Class CliOutputInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Output\\CliOutputInterface", "fromLink": "Windwalker/IO/Cli/Output/CliOutputInterface.html", "link": "Windwalker/IO/Cli/Output/CliOutputInterface.html#method_out", "name": "Windwalker\\IO\\Cli\\Output\\CliOutputInterface::out", "doc": "&quot;Write a string to standard output&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Output\\CliOutputInterface", "fromLink": "Windwalker/IO/Cli/Output/CliOutputInterface.html", "link": "Windwalker/IO/Cli/Output/CliOutputInterface.html#method_err", "name": "Windwalker\\IO\\Cli\\Output\\CliOutputInterface::err", "doc": "&quot;Write a string to standard error output.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\IO\\Cli\\Output", "fromLink": "Windwalker/IO/Cli/Output.html", "link": "Windwalker/IO/Cli/Output/ColorfulOutputInterface.html", "name": "Windwalker\\IO\\Cli\\Output\\ColorfulOutputInterface", "doc": "&quot;The ColorfulOutputInterface class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Output\\ColorfulOutputInterface", "fromLink": "Windwalker/IO/Cli/Output/ColorfulOutputInterface.html", "link": "Windwalker/IO/Cli/Output/ColorfulOutputInterface.html#method_setProcessor", "name": "Windwalker\\IO\\Cli\\Output\\ColorfulOutputInterface::setProcessor", "doc": "&quot;Set a processor&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Output\\ColorfulOutputInterface", "fromLink": "Windwalker/IO/Cli/Output/ColorfulOutputInterface.html", "link": "Windwalker/IO/Cli/Output/ColorfulOutputInterface.html#method_getProcessor", "name": "Windwalker\\IO\\Cli\\Output\\ColorfulOutputInterface::getProcessor", "doc": "&quot;Get a processor&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\IO\\Cli\\Output", "fromLink": "Windwalker/IO/Cli/Output.html", "link": "Windwalker/IO/Cli/Output/SimpleCliOutput.html", "name": "Windwalker\\IO\\Cli\\Output\\SimpleCliOutput", "doc": "&quot;Class SimpleCliOutput&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Output\\SimpleCliOutput", "fromLink": "Windwalker/IO/Cli/Output/SimpleCliOutput.html", "link": "Windwalker/IO/Cli/Output/SimpleCliOutput.html#method_out", "name": "Windwalker\\IO\\Cli\\Output\\SimpleCliOutput::out", "doc": "&quot;Write a string to standard output&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Cli\\Output\\SimpleCliOutput", "fromLink": "Windwalker/IO/Cli/Output/SimpleCliOutput.html", "link": "Windwalker/IO/Cli/Output/SimpleCliOutput.html#method_err", "name": "Windwalker\\IO\\Cli\\Output\\SimpleCliOutput::err", "doc": "&quot;Write a string to standard error output.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\IO", "fromLink": "Windwalker/IO.html", "link": "Windwalker/IO/CookieInput.html", "name": "Windwalker\\IO\\CookieInput", "doc": "&quot;Windwalker Input Cookie Class&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\IO\\CookieInput", "fromLink": "Windwalker/IO/CookieInput.html", "link": "Windwalker/IO/CookieInput.html#method_prepareSource", "name": "Windwalker\\IO\\CookieInput::prepareSource", "doc": "&quot;Prepare source.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\CookieInput", "fromLink": "Windwalker/IO/CookieInput.html", "link": "Windwalker/IO/CookieInput.html#method_set", "name": "Windwalker\\IO\\CookieInput::set", "doc": "&quot;Sets a value&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\IO", "fromLink": "Windwalker/IO.html", "link": "Windwalker/IO/FilesInput.html", "name": "Windwalker\\IO\\FilesInput", "doc": "&quot;Windwalker Input Files Class&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\IO\\FilesInput", "fromLink": "Windwalker/IO/FilesInput.html", "link": "Windwalker/IO/FilesInput.html#method_prepareSource", "name": "Windwalker\\IO\\FilesInput::prepareSource", "doc": "&quot;Prepare source.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\FilesInput", "fromLink": "Windwalker/IO/FilesInput.html", "link": "Windwalker/IO/FilesInput.html#method_get", "name": "Windwalker\\IO\\FilesInput::get", "doc": "&quot;Gets a value from the input data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\FilesInput", "fromLink": "Windwalker/IO/FilesInput.html", "link": "Windwalker/IO/FilesInput.html#method_set", "name": "Windwalker\\IO\\FilesInput::set", "doc": "&quot;Sets a value&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\IO\\Filter", "fromLink": "Windwalker/IO/Filter.html", "link": "Windwalker/IO/Filter/NullFilter.html", "name": "Windwalker\\IO\\Filter\\NullFilter", "doc": "&quot;The NullFilter class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\IO\\Filter\\NullFilter", "fromLink": "Windwalker/IO/Filter/NullFilter.html", "link": "Windwalker/IO/Filter/NullFilter.html#method_clean", "name": "Windwalker\\IO\\Filter\\NullFilter::clean", "doc": "&quot;clean&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\IO", "fromLink": "Windwalker/IO.html", "link": "Windwalker/IO/FormDataInput.html", "name": "Windwalker\\IO\\FormDataInput", "doc": "&quot;The FormInput class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\IO\\FormDataInput", "fromLink": "Windwalker/IO/FormDataInput.html", "link": "Windwalker/IO/FormDataInput.html#method_prepareSource", "name": "Windwalker\\IO\\FormDataInput::prepareSource", "doc": "&quot;Prepare source.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\FormDataInput", "fromLink": "Windwalker/IO/FormDataInput.html", "link": "Windwalker/IO/FormDataInput.html#method_getRawFormData", "name": "Windwalker\\IO\\FormDataInput::getRawFormData", "doc": "&quot;Gets the raw HTTP data string from the request.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\FormDataInput", "fromLink": "Windwalker/IO/FormDataInput.html", "link": "Windwalker/IO/FormDataInput.html#method_setRawFormData", "name": "Windwalker\\IO\\FormDataInput::setRawFormData", "doc": "&quot;setRawData&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\FormDataInput", "fromLink": "Windwalker/IO/FormDataInput.html", "link": "Windwalker/IO/FormDataInput.html#method_parseFormData", "name": "Windwalker\\IO\\FormDataInput::parseFormData", "doc": "&quot;parseFormData&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\IO", "fromLink": "Windwalker/IO.html", "link": "Windwalker/IO/Input.html", "name": "Windwalker\\IO\\Input", "doc": "&quot;Class Input&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method___construct", "name": "Windwalker\\IO\\Input::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_prepareSource", "name": "Windwalker\\IO\\Input::prepareSource", "doc": "&quot;Prepare source.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method___get", "name": "Windwalker\\IO\\Input::__get", "doc": "&quot;Magic method to get an input object&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method___set", "name": "Windwalker\\IO\\Input::__set", "doc": "&quot;__set&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_count", "name": "Windwalker\\IO\\Input::count", "doc": "&quot;Get the number of variables.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_get", "name": "Windwalker\\IO\\Input::get", "doc": "&quot;Gets a value from the input data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_set", "name": "Windwalker\\IO\\Input::set", "doc": "&quot;Sets a value&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_def", "name": "Windwalker\\IO\\Input::def", "doc": "&quot;Define a value. The value will only be set if there&#039;s no value for the name or if it is null.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_exists", "name": "Windwalker\\IO\\Input::exists", "doc": "&quot;Check if a value name exists.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_compact", "name": "Windwalker\\IO\\Input::compact", "doc": "&quot;Gets an array of values from the request.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_extract", "name": "Windwalker\\IO\\Input::extract", "doc": "&quot;extract&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_merge", "name": "Windwalker\\IO\\Input::merge", "doc": "&quot;merge&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method___call", "name": "Windwalker\\IO\\Input::__call", "doc": "&quot;Magic method to get filtered input data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_getMethod", "name": "Windwalker\\IO\\Input::getMethod", "doc": "&quot;Gets the request method.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_setMethod", "name": "Windwalker\\IO\\Input::setMethod", "doc": "&quot;Method to set property method&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_serialize", "name": "Windwalker\\IO\\Input::serialize", "doc": "&quot;Method to serialize the input.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_unserialize", "name": "Windwalker\\IO\\Input::unserialize", "doc": "&quot;Method to unserialize the input.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_loadAllInputs", "name": "Windwalker\\IO\\Input::loadAllInputs", "doc": "&quot;Method to load all of the global inputs.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_getAllInputs", "name": "Windwalker\\IO\\Input::getAllInputs", "doc": "&quot;getAllInputs&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_dumpAllInputs", "name": "Windwalker\\IO\\Input::dumpAllInputs", "doc": "&quot;dumpAllInputs&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_setData", "name": "Windwalker\\IO\\Input::setData", "doc": "&quot;Method to set property data&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_getFilter", "name": "Windwalker\\IO\\Input::getFilter", "doc": "&quot;Method to get property Filter&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_setFilter", "name": "Windwalker\\IO\\Input::setFilter", "doc": "&quot;Method to set property filter&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_getRawData", "name": "Windwalker\\IO\\Input::getRawData", "doc": "&quot;Method to get property Data&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_toArray", "name": "Windwalker\\IO\\Input::toArray", "doc": "&quot;toArray&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_getByPath", "name": "Windwalker\\IO\\Input::getByPath", "doc": "&quot;Get data from array or object by path.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_setByPath", "name": "Windwalker\\IO\\Input::setByPath", "doc": "&quot;setByPath&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_getInt", "name": "Windwalker\\IO\\Input::getInt", "doc": "&quot;Get a signed integer.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_getUint", "name": "Windwalker\\IO\\Input::getUint", "doc": "&quot;Get an unsigned integer.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_getFloat", "name": "Windwalker\\IO\\Input::getFloat", "doc": "&quot;Get a floating-point number.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_getBool", "name": "Windwalker\\IO\\Input::getBool", "doc": "&quot;Get a boolean.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_getBoolean", "name": "Windwalker\\IO\\Input::getBoolean", "doc": "&quot;Get a boolean.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_getWord", "name": "Windwalker\\IO\\Input::getWord", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_getAlnum", "name": "Windwalker\\IO\\Input::getAlnum", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_getCmd", "name": "Windwalker\\IO\\Input::getCmd", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_getBase64", "name": "Windwalker\\IO\\Input::getBase64", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_getString", "name": "Windwalker\\IO\\Input::getString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_getArray", "name": "Windwalker\\IO\\Input::getArray", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_getHtml", "name": "Windwalker\\IO\\Input::getHtml", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_getPath", "name": "Windwalker\\IO\\Input::getPath", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_getUsername", "name": "Windwalker\\IO\\Input::getUsername", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_getEmail", "name": "Windwalker\\IO\\Input::getEmail", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_getUrl", "name": "Windwalker\\IO\\Input::getUrl", "doc": "&quot;Get URL&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_getRaw", "name": "Windwalker\\IO\\Input::getRaw", "doc": "&quot;Get raw data&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\Input", "fromLink": "Windwalker/IO/Input.html", "link": "Windwalker/IO/Input.html#method_getVar", "name": "Windwalker\\IO\\Input::getVar", "doc": "&quot;Get string or array and filter them.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\IO", "fromLink": "Windwalker/IO.html", "link": "Windwalker/IO/JsonInput.html", "name": "Windwalker\\IO\\JsonInput", "doc": "&quot;Windwalker Input JSON Class&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\IO\\JsonInput", "fromLink": "Windwalker/IO/JsonInput.html", "link": "Windwalker/IO/JsonInput.html#method_prepareSource", "name": "Windwalker\\IO\\JsonInput::prepareSource", "doc": "&quot;Prepare source.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\IO", "fromLink": "Windwalker/IO.html", "link": "Windwalker/IO/PsrFilesInput.html", "name": "Windwalker\\IO\\PsrFilesInput", "doc": "&quot;Windwalker Input Files Class&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\IO\\PsrFilesInput", "fromLink": "Windwalker/IO/PsrFilesInput.html", "link": "Windwalker/IO/PsrFilesInput.html#method_prepareSource", "name": "Windwalker\\IO\\PsrFilesInput::prepareSource", "doc": "&quot;Prepare source.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\PsrFilesInput", "fromLink": "Windwalker/IO/PsrFilesInput.html", "link": "Windwalker/IO/PsrFilesInput.html#method_get", "name": "Windwalker\\IO\\PsrFilesInput::get", "doc": "&quot;Gets a value from the input data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\PsrFilesInput", "fromLink": "Windwalker/IO/PsrFilesInput.html", "link": "Windwalker/IO/PsrFilesInput.html#method_set", "name": "Windwalker\\IO\\PsrFilesInput::set", "doc": "&quot;Sets a value&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\IO", "fromLink": "Windwalker/IO.html", "link": "Windwalker/IO/PsrHeaderInput.html", "name": "Windwalker\\IO\\PsrHeaderInput", "doc": "&quot;The HeaderInput class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\IO\\PsrHeaderInput", "fromLink": "Windwalker/IO/PsrHeaderInput.html", "link": "Windwalker/IO/PsrHeaderInput.html#method_prepareSource", "name": "Windwalker\\IO\\PsrHeaderInput::prepareSource", "doc": "&quot;prepareSource&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\PsrHeaderInput", "fromLink": "Windwalker/IO/PsrHeaderInput.html", "link": "Windwalker/IO/PsrHeaderInput.html#method_get", "name": "Windwalker\\IO\\PsrHeaderInput::get", "doc": "&quot;Gets a value from the input data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\IO\\PsrHeaderInput", "fromLink": "Windwalker/IO/PsrHeaderInput.html", "link": "Windwalker/IO/PsrHeaderInput.html#method_set", "name": "Windwalker\\IO\\PsrHeaderInput::set", "doc": "&quot;Sets a value&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\IO", "fromLink": "Windwalker/IO.html", "link": "Windwalker/IO/PsrInput.html", "name": "Windwalker\\IO\\PsrInput", "doc": "&quot;Class PsrInput&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\IO\\PsrInput", "fromLink": "Windwalker/IO/PsrInput.html", "link": "Windwalker/IO/PsrInput.html#method_create", "name": "Windwalker\\IO\\PsrInput::create", "doc": "&quot;Create Input from Psr ServerRequest&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Language\\Format", "fromLink": "Windwalker/Language/Format.html", "link": "Windwalker/Language/Format/AbstractFormat.html", "name": "Windwalker\\Language\\Format\\AbstractFormat", "doc": "&quot;Class AbstractFormat&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Language\\Format\\AbstractFormat", "fromLink": "Windwalker/Language/Format/AbstractFormat.html", "link": "Windwalker/Language/Format/AbstractFormat.html#method_getName", "name": "Windwalker\\Language\\Format\\AbstractFormat::getName", "doc": "&quot;getName&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\Format\\AbstractFormat", "fromLink": "Windwalker/Language/Format/AbstractFormat.html", "link": "Windwalker/Language/Format/AbstractFormat.html#method_parse", "name": "Windwalker\\Language\\Format\\AbstractFormat::parse", "doc": "&quot;parse&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Language\\Format", "fromLink": "Windwalker/Language/Format.html", "link": "Windwalker/Language/Format/FormatInterface.html", "name": "Windwalker\\Language\\Format\\FormatInterface", "doc": "&quot;Class FormatInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Language\\Format\\FormatInterface", "fromLink": "Windwalker/Language/Format/FormatInterface.html", "link": "Windwalker/Language/Format/FormatInterface.html#method_getName", "name": "Windwalker\\Language\\Format\\FormatInterface::getName", "doc": "&quot;getName&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\Format\\FormatInterface", "fromLink": "Windwalker/Language/Format/FormatInterface.html", "link": "Windwalker/Language/Format/FormatInterface.html#method_parse", "name": "Windwalker\\Language\\Format\\FormatInterface::parse", "doc": "&quot;parse&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Language\\Format", "fromLink": "Windwalker/Language/Format.html", "link": "Windwalker/Language/Format/IniFormat.html", "name": "Windwalker\\Language\\Format\\IniFormat", "doc": "&quot;Class IniFormat&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Language\\Format\\IniFormat", "fromLink": "Windwalker/Language/Format/IniFormat.html", "link": "Windwalker/Language/Format/IniFormat.html#method_parse", "name": "Windwalker\\Language\\Format\\IniFormat::parse", "doc": "&quot;parse&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Language\\Format", "fromLink": "Windwalker/Language/Format.html", "link": "Windwalker/Language/Format/JsonFormat.html", "name": "Windwalker\\Language\\Format\\JsonFormat", "doc": "&quot;Class JsonFormat&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Language\\Format\\JsonFormat", "fromLink": "Windwalker/Language/Format/JsonFormat.html", "link": "Windwalker/Language/Format/JsonFormat.html#method_parse", "name": "Windwalker\\Language\\Format\\JsonFormat::parse", "doc": "&quot;parse&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Language\\Format", "fromLink": "Windwalker/Language/Format.html", "link": "Windwalker/Language/Format/PhpFormat.html", "name": "Windwalker\\Language\\Format\\PhpFormat", "doc": "&quot;Class IniFormat&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Language\\Format\\PhpFormat", "fromLink": "Windwalker/Language/Format/PhpFormat.html", "link": "Windwalker/Language/Format/PhpFormat.html#method_parse", "name": "Windwalker\\Language\\Format\\PhpFormat::parse", "doc": "&quot;parse&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Language\\Format", "fromLink": "Windwalker/Language/Format.html", "link": "Windwalker/Language/Format/YamlFormat.html", "name": "Windwalker\\Language\\Format\\YamlFormat", "doc": "&quot;Class IniFormat&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Language\\Format\\YamlFormat", "fromLink": "Windwalker/Language/Format/YamlFormat.html", "link": "Windwalker/Language/Format/YamlFormat.html#method_parse", "name": "Windwalker\\Language\\Format\\YamlFormat::parse", "doc": "&quot;parse&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Language", "fromLink": "Windwalker/Language.html", "link": "Windwalker/Language/Language.html", "name": "Windwalker\\Language\\Language", "doc": "&quot;Class Language&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Language\\Language", "fromLink": "Windwalker/Language/Language.html", "link": "Windwalker/Language/Language.html#method___construct", "name": "Windwalker\\Language\\Language::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\Language", "fromLink": "Windwalker/Language/Language.html", "link": "Windwalker/Language/Language.html#method_load", "name": "Windwalker\\Language\\Language::load", "doc": "&quot;load&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\Language", "fromLink": "Windwalker/Language/Language.html", "link": "Windwalker/Language/Language.html#method_translate", "name": "Windwalker\\Language\\Language::translate", "doc": "&quot;translate&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\Language", "fromLink": "Windwalker/Language/Language.html", "link": "Windwalker/Language/Language.html#method_plural", "name": "Windwalker\\Language\\Language::plural", "doc": "&quot;plural&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\Language", "fromLink": "Windwalker/Language/Language.html", "link": "Windwalker/Language/Language.html#method_sprintf", "name": "Windwalker\\Language\\Language::sprintf", "doc": "&quot;sprintf&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\Language", "fromLink": "Windwalker/Language/Language.html", "link": "Windwalker/Language/Language.html#method_exists", "name": "Windwalker\\Language\\Language::exists", "doc": "&quot;exists&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\Language", "fromLink": "Windwalker/Language/Language.html", "link": "Windwalker/Language/Language.html#method_addString", "name": "Windwalker\\Language\\Language::addString", "doc": "&quot;addString&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\Language", "fromLink": "Windwalker/Language/Language.html", "link": "Windwalker/Language/Language.html#method_addStrings", "name": "Windwalker\\Language\\Language::addStrings", "doc": "&quot;addStrings&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\Language", "fromLink": "Windwalker/Language/Language.html", "link": "Windwalker/Language/Language.html#method_setDebug", "name": "Windwalker\\Language\\Language::setDebug", "doc": "&quot;setDebug&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\Language", "fromLink": "Windwalker/Language/Language.html", "link": "Windwalker/Language/Language.html#method_getLoader", "name": "Windwalker\\Language\\Language::getLoader", "doc": "&quot;getLoader&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\Language", "fromLink": "Windwalker/Language/Language.html", "link": "Windwalker/Language/Language.html#method_setLoader", "name": "Windwalker\\Language\\Language::setLoader", "doc": "&quot;setLoader&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\Language", "fromLink": "Windwalker/Language/Language.html", "link": "Windwalker/Language/Language.html#method_setLoaders", "name": "Windwalker\\Language\\Language::setLoaders", "doc": "&quot;setLoaders&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\Language", "fromLink": "Windwalker/Language/Language.html", "link": "Windwalker/Language/Language.html#method_getFormat", "name": "Windwalker\\Language\\Language::getFormat", "doc": "&quot;getFormat&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\Language", "fromLink": "Windwalker/Language/Language.html", "link": "Windwalker/Language/Language.html#method_setFormat", "name": "Windwalker\\Language\\Language::setFormat", "doc": "&quot;setFormat&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\Language", "fromLink": "Windwalker/Language/Language.html", "link": "Windwalker/Language/Language.html#method_setFormats", "name": "Windwalker\\Language\\Language::setFormats", "doc": "&quot;setFormats&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\Language", "fromLink": "Windwalker/Language/Language.html", "link": "Windwalker/Language/Language.html#method_getOrphans", "name": "Windwalker\\Language\\Language::getOrphans", "doc": "&quot;getOrphans&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\Language", "fromLink": "Windwalker/Language/Language.html", "link": "Windwalker/Language/Language.html#method_getUsed", "name": "Windwalker\\Language\\Language::getUsed", "doc": "&quot;getUsed&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\Language", "fromLink": "Windwalker/Language/Language.html", "link": "Windwalker/Language/Language.html#method_getLocale", "name": "Windwalker\\Language\\Language::getLocale", "doc": "&quot;getLocale&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\Language", "fromLink": "Windwalker/Language/Language.html", "link": "Windwalker/Language/Language.html#method_setLocale", "name": "Windwalker\\Language\\Language::setLocale", "doc": "&quot;setLocale&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\Language", "fromLink": "Windwalker/Language/Language.html", "link": "Windwalker/Language/Language.html#method_getDefaultLocale", "name": "Windwalker\\Language\\Language::getDefaultLocale", "doc": "&quot;Method to get property DefaultLocale&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\Language", "fromLink": "Windwalker/Language/Language.html", "link": "Windwalker/Language/Language.html#method_setDefaultLocale", "name": "Windwalker\\Language\\Language::setDefaultLocale", "doc": "&quot;Method to set property defaultLocale&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\Language", "fromLink": "Windwalker/Language/Language.html", "link": "Windwalker/Language/Language.html#method_setLocalise", "name": "Windwalker\\Language\\Language::setLocalise", "doc": "&quot;setLocalise&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\Language", "fromLink": "Windwalker/Language/Language.html", "link": "Windwalker/Language/Language.html#method_normalize", "name": "Windwalker\\Language\\Language::normalize", "doc": "&quot;normalize&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\Language", "fromLink": "Windwalker/Language/Language.html", "link": "Windwalker/Language/Language.html#method_getNormalizeHandler", "name": "Windwalker\\Language\\Language::getNormalizeHandler", "doc": "&quot;getNormalizeHandler&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\Language", "fromLink": "Windwalker/Language/Language.html", "link": "Windwalker/Language/Language.html#method_setNormalizeHandler", "name": "Windwalker\\Language\\Language::setNormalizeHandler", "doc": "&quot;setNormalizeHandler&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\Language", "fromLink": "Windwalker/Language/Language.html", "link": "Windwalker/Language/Language.html#method_getTrace", "name": "Windwalker\\Language\\Language::getTrace", "doc": "&quot;Method to get property Trace&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\Language", "fromLink": "Windwalker/Language/Language.html", "link": "Windwalker/Language/Language.html#method_getTraceLevelOffset", "name": "Windwalker\\Language\\Language::getTraceLevelOffset", "doc": "&quot;Method to get property TraceLevelOffset&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\Language", "fromLink": "Windwalker/Language/Language.html", "link": "Windwalker/Language/Language.html#method_setTraceLevelOffset", "name": "Windwalker\\Language\\Language::setTraceLevelOffset", "doc": "&quot;Method to set property traceLevelOffset&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Language", "fromLink": "Windwalker/Language.html", "link": "Windwalker/Language/LanguageInterface.html", "name": "Windwalker\\Language\\LanguageInterface", "doc": "&quot;Interface LanguageInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Language\\LanguageInterface", "fromLink": "Windwalker/Language/LanguageInterface.html", "link": "Windwalker/Language/LanguageInterface.html#method_translate", "name": "Windwalker\\Language\\LanguageInterface::translate", "doc": "&quot;translate&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\LanguageInterface", "fromLink": "Windwalker/Language/LanguageInterface.html", "link": "Windwalker/Language/LanguageInterface.html#method_plural", "name": "Windwalker\\Language\\LanguageInterface::plural", "doc": "&quot;plural&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\LanguageInterface", "fromLink": "Windwalker/Language/LanguageInterface.html", "link": "Windwalker/Language/LanguageInterface.html#method_sprintf", "name": "Windwalker\\Language\\LanguageInterface::sprintf", "doc": "&quot;sprintf&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\LanguageInterface", "fromLink": "Windwalker/Language/LanguageInterface.html", "link": "Windwalker/Language/LanguageInterface.html#method_exists", "name": "Windwalker\\Language\\LanguageInterface::exists", "doc": "&quot;exists&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Language", "fromLink": "Windwalker/Language.html", "link": "Windwalker/Language/LanguageNormalize.html", "name": "Windwalker\\Language\\LanguageNormalize", "doc": "&quot;Class LanguageNormalize&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Language\\LanguageNormalize", "fromLink": "Windwalker/Language/LanguageNormalize.html", "link": "Windwalker/Language/LanguageNormalize.html#method_toLanguageTag", "name": "Windwalker\\Language\\LanguageNormalize::toLanguageTag", "doc": "&quot;toLanguageKey&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\LanguageNormalize", "fromLink": "Windwalker/Language/LanguageNormalize.html", "link": "Windwalker/Language/LanguageNormalize.html#method_getLocaliseClassPrefix", "name": "Windwalker\\Language\\LanguageNormalize::getLocaliseClassPrefix", "doc": "&quot;getLocaliseClassPrefix&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\LanguageNormalize", "fromLink": "Windwalker/Language/LanguageNormalize.html", "link": "Windwalker/Language/LanguageNormalize.html#method_toLanguageKey", "name": "Windwalker\\Language\\LanguageNormalize::toLanguageKey", "doc": "&quot;toLanguageKey&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Language\\Loader", "fromLink": "Windwalker/Language/Loader.html", "link": "Windwalker/Language/Loader/AbstractLoader.html", "name": "Windwalker\\Language\\Loader\\AbstractLoader", "doc": "&quot;Class AbstractLoader&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Language\\Loader\\AbstractLoader", "fromLink": "Windwalker/Language/Loader/AbstractLoader.html", "link": "Windwalker/Language/Loader/AbstractLoader.html#method_getName", "name": "Windwalker\\Language\\Loader\\AbstractLoader::getName", "doc": "&quot;getName&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Language\\Loader", "fromLink": "Windwalker/Language/Loader.html", "link": "Windwalker/Language/Loader/FileLoader.html", "name": "Windwalker\\Language\\Loader\\FileLoader", "doc": "&quot;Class FileLoader&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Language\\Loader\\FileLoader", "fromLink": "Windwalker/Language/Loader/FileLoader.html", "link": "Windwalker/Language/Loader/FileLoader.html#method___construct", "name": "Windwalker\\Language\\Loader\\FileLoader::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\Loader\\FileLoader", "fromLink": "Windwalker/Language/Loader/FileLoader.html", "link": "Windwalker/Language/Loader/FileLoader.html#method_load", "name": "Windwalker\\Language\\Loader\\FileLoader::load", "doc": "&quot;load&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Language\\Loader", "fromLink": "Windwalker/Language/Loader.html", "link": "Windwalker/Language/Loader/LoaderInterface.html", "name": "Windwalker\\Language\\Loader\\LoaderInterface", "doc": "&quot;Interface LoaderInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Language\\Loader\\LoaderInterface", "fromLink": "Windwalker/Language/Loader/LoaderInterface.html", "link": "Windwalker/Language/Loader/LoaderInterface.html#method_getName", "name": "Windwalker\\Language\\Loader\\LoaderInterface::getName", "doc": "&quot;getName&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Language\\Loader\\LoaderInterface", "fromLink": "Windwalker/Language/Loader/LoaderInterface.html", "link": "Windwalker/Language/Loader/LoaderInterface.html#method_load", "name": "Windwalker\\Language\\Loader\\LoaderInterface::load", "doc": "&quot;load&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Language\\Loader", "fromLink": "Windwalker/Language/Loader.html", "link": "Windwalker/Language/Loader/PhpLoader.html", "name": "Windwalker\\Language\\Loader\\PhpLoader", "doc": "&quot;Class PhpLoader&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Language\\Loader\\PhpLoader", "fromLink": "Windwalker/Language/Loader/PhpLoader.html", "link": "Windwalker/Language/Loader/PhpLoader.html#method_load", "name": "Windwalker\\Language\\Loader\\PhpLoader::load", "doc": "&quot;load&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Language\\Localise", "fromLink": "Windwalker/Language/Localise.html", "link": "Windwalker/Language/Localise/EnGBLocalise.html", "name": "Windwalker\\Language\\Localise\\EnGBLocalise", "doc": "&quot;Class EnGBLocalise&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Language\\Localise\\EnGBLocalise", "fromLink": "Windwalker/Language/Localise/EnGBLocalise.html", "link": "Windwalker/Language/Localise/EnGBLocalise.html#method_getPluralSuffix", "name": "Windwalker\\Language\\Localise\\EnGBLocalise::getPluralSuffix", "doc": "&quot;getPluralSuffixes&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Language\\Localise", "fromLink": "Windwalker/Language/Localise.html", "link": "Windwalker/Language/Localise/LocaliseInterface.html", "name": "Windwalker\\Language\\Localise\\LocaliseInterface", "doc": "&quot;Interface LocaliseInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Language\\Localise\\LocaliseInterface", "fromLink": "Windwalker/Language/Localise/LocaliseInterface.html", "link": "Windwalker/Language/Localise/LocaliseInterface.html#method_getPluralSuffix", "name": "Windwalker\\Language\\Localise\\LocaliseInterface::getPluralSuffix", "doc": "&quot;getPluralSuffixes&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Language\\Localise", "fromLink": "Windwalker/Language/Localise.html", "link": "Windwalker/Language/Localise/NullLocalise.html", "name": "Windwalker\\Language\\Localise\\NullLocalise", "doc": "&quot;Class NullLocalise&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Language\\Localise\\NullLocalise", "fromLink": "Windwalker/Language/Localise/NullLocalise.html", "link": "Windwalker/Language/Localise/NullLocalise.html#method_getPluralSuffix", "name": "Windwalker\\Language\\Localise\\NullLocalise::getPluralSuffix", "doc": "&quot;getPluralSuffixes&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Language\\Localise", "fromLink": "Windwalker/Language/Localise.html", "link": "Windwalker/Language/Localise/ZhCNLocalise.html", "name": "Windwalker\\Language\\Localise\\ZhCNLocalise", "doc": "&quot;Class ZhCNLocalise&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Language\\Localise", "fromLink": "Windwalker/Language/Localise.html", "link": "Windwalker/Language/Localise/ZhTWLocalise.html", "name": "Windwalker\\Language\\Localise\\ZhTWLocalise", "doc": "&quot;Class ZhTWLocalise&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Language\\Localise\\ZhTWLocalise", "fromLink": "Windwalker/Language/Localise/ZhTWLocalise.html", "link": "Windwalker/Language/Localise/ZhTWLocalise.html#method_getPluralSuffix", "name": "Windwalker\\Language\\Localise\\ZhTWLocalise::getPluralSuffix", "doc": "&quot;getPluralSuffixes&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Loader", "fromLink": "Windwalker/Loader.html", "link": "Windwalker/Loader/ClassLoader.html", "name": "Windwalker\\Loader\\ClassLoader", "doc": "&quot;Class ClassLoader&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Loader\\ClassLoader", "fromLink": "Windwalker/Loader/ClassLoader.html", "link": "Windwalker/Loader/ClassLoader.html#method___construct", "name": "Windwalker\\Loader\\ClassLoader::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Loader\\ClassLoader", "fromLink": "Windwalker/Loader/ClassLoader.html", "link": "Windwalker/Loader/ClassLoader.html#method_register", "name": "Windwalker\\Loader\\ClassLoader::register", "doc": "&quot;register&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Loader\\ClassLoader", "fromLink": "Windwalker/Loader/ClassLoader.html", "link": "Windwalker/Loader/ClassLoader.html#method_unregister", "name": "Windwalker\\Loader\\ClassLoader::unregister", "doc": "&quot;unregister&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Loader\\ClassLoader", "fromLink": "Windwalker/Loader/ClassLoader.html", "link": "Windwalker/Loader/ClassLoader.html#method_addPsr0", "name": "Windwalker\\Loader\\ClassLoader::addPsr0", "doc": "&quot;addPsr0&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Loader\\ClassLoader", "fromLink": "Windwalker/Loader/ClassLoader.html", "link": "Windwalker/Loader/ClassLoader.html#method_addPsr4", "name": "Windwalker\\Loader\\ClassLoader::addPsr4", "doc": "&quot;addPsr4&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Loader\\ClassLoader", "fromLink": "Windwalker/Loader/ClassLoader.html", "link": "Windwalker/Loader/ClassLoader.html#method_addMap", "name": "Windwalker\\Loader\\ClassLoader::addMap", "doc": "&quot;addMap&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Loader\\ClassLoader", "fromLink": "Windwalker/Loader/ClassLoader.html", "link": "Windwalker/Loader/ClassLoader.html#method_getPsr0Loader", "name": "Windwalker\\Loader\\ClassLoader::getPsr0Loader", "doc": "&quot;Method to get property Psr0&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Loader\\ClassLoader", "fromLink": "Windwalker/Loader/ClassLoader.html", "link": "Windwalker/Loader/ClassLoader.html#method_setPsr0Loader", "name": "Windwalker\\Loader\\ClassLoader::setPsr0Loader", "doc": "&quot;Method to set property psr0&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Loader\\ClassLoader", "fromLink": "Windwalker/Loader/ClassLoader.html", "link": "Windwalker/Loader/ClassLoader.html#method_getPsr4Loader", "name": "Windwalker\\Loader\\ClassLoader::getPsr4Loader", "doc": "&quot;Method to get property Psr4&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Loader\\ClassLoader", "fromLink": "Windwalker/Loader/ClassLoader.html", "link": "Windwalker/Loader/ClassLoader.html#method_setPsr4Loader", "name": "Windwalker\\Loader\\ClassLoader::setPsr4Loader", "doc": "&quot;Method to set property psr4&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Loader\\ClassLoader", "fromLink": "Windwalker/Loader/ClassLoader.html", "link": "Windwalker/Loader/ClassLoader.html#method_getFilesLoader", "name": "Windwalker\\Loader\\ClassLoader::getFilesLoader", "doc": "&quot;Method to get property Files&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Loader\\ClassLoader", "fromLink": "Windwalker/Loader/ClassLoader.html", "link": "Windwalker/Loader/ClassLoader.html#method_setFilesLoader", "name": "Windwalker\\Loader\\ClassLoader::setFilesLoader", "doc": "&quot;Method to set property files&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Loader\\Loader", "fromLink": "Windwalker/Loader/Loader.html", "link": "Windwalker/Loader/Loader/AbstractLoader.html", "name": "Windwalker\\Loader\\Loader\\AbstractLoader", "doc": "&quot;AbstractLoader&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Loader\\Loader\\AbstractLoader", "fromLink": "Windwalker/Loader/Loader/AbstractLoader.html", "link": "Windwalker/Loader/Loader/AbstractLoader.html#method_register", "name": "Windwalker\\Loader\\Loader\\AbstractLoader::register", "doc": "&quot;Installs this class loader on the SPL autoload stack.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Loader\\Loader\\AbstractLoader", "fromLink": "Windwalker/Loader/Loader/AbstractLoader.html", "link": "Windwalker/Loader/Loader/AbstractLoader.html#method_unregister", "name": "Windwalker\\Loader\\Loader\\AbstractLoader::unregister", "doc": "&quot;Uninstalls this class loader from the SPL autoloader stack.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Loader\\Loader\\AbstractLoader", "fromLink": "Windwalker/Loader/Loader/AbstractLoader.html", "link": "Windwalker/Loader/Loader/AbstractLoader.html#method_loadClass", "name": "Windwalker\\Loader\\Loader\\AbstractLoader::loadClass", "doc": "&quot;Loads the given class or interface.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Loader\\Loader\\AbstractLoader", "fromLink": "Windwalker/Loader/Loader/AbstractLoader.html", "link": "Windwalker/Loader/Loader/AbstractLoader.html#method_normalizeClass", "name": "Windwalker\\Loader\\Loader\\AbstractLoader::normalizeClass", "doc": "&quot;normalizeClass&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Loader\\Loader\\AbstractLoader", "fromLink": "Windwalker/Loader/Loader/AbstractLoader.html", "link": "Windwalker/Loader/Loader/AbstractLoader.html#method_normalizePath", "name": "Windwalker\\Loader\\Loader\\AbstractLoader::normalizePath", "doc": "&quot;normalizePath&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Loader\\Loader", "fromLink": "Windwalker/Loader/Loader.html", "link": "Windwalker/Loader/Loader/FileMappingLoader.html", "name": "Windwalker\\Loader\\Loader\\FileMappingLoader", "doc": "&quot;Class FileMappingLoader&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Loader\\Loader\\FileMappingLoader", "fromLink": "Windwalker/Loader/Loader/FileMappingLoader.html", "link": "Windwalker/Loader/Loader/FileMappingLoader.html#method_addMap", "name": "Windwalker\\Loader\\Loader\\FileMappingLoader::addMap", "doc": "&quot;addMap&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Loader\\Loader\\FileMappingLoader", "fromLink": "Windwalker/Loader/Loader/FileMappingLoader.html", "link": "Windwalker/Loader/Loader/FileMappingLoader.html#method_loadClass", "name": "Windwalker\\Loader\\Loader\\FileMappingLoader::loadClass", "doc": "&quot;Loads the given class or interface.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Loader\\Loader", "fromLink": "Windwalker/Loader/Loader.html", "link": "Windwalker/Loader/Loader/Psr0Loader.html", "name": "Windwalker\\Loader\\Loader\\Psr0Loader", "doc": "&quot;Class Psr0Loader&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Loader\\Loader\\Psr0Loader", "fromLink": "Windwalker/Loader/Loader/Psr0Loader.html", "link": "Windwalker/Loader/Loader/Psr0Loader.html#method___construct", "name": "Windwalker\\Loader\\Loader\\Psr0Loader::__construct", "doc": "&quot;Creates a new instance that loads classes of the\nspecified namespace.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Loader\\Loader\\Psr0Loader", "fromLink": "Windwalker/Loader/Loader/Psr0Loader.html", "link": "Windwalker/Loader/Loader/Psr0Loader.html#method_addNamespace", "name": "Windwalker\\Loader\\Loader\\Psr0Loader::addNamespace", "doc": "&quot;addNamespace&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Loader\\Loader\\Psr0Loader", "fromLink": "Windwalker/Loader/Loader/Psr0Loader.html", "link": "Windwalker/Loader/Loader/Psr0Loader.html#method_setNamespaceSeparator", "name": "Windwalker\\Loader\\Loader\\Psr0Loader::setNamespaceSeparator", "doc": "&quot;Sets the namespace separator used by classes in the namespace of this class loader.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Loader\\Loader\\Psr0Loader", "fromLink": "Windwalker/Loader/Loader/Psr0Loader.html", "link": "Windwalker/Loader/Loader/Psr0Loader.html#method_getNamespaceSeparator", "name": "Windwalker\\Loader\\Loader\\Psr0Loader::getNamespaceSeparator", "doc": "&quot;Gets the namespace seperator used by classes in the namespace of this class loader.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Loader\\Loader\\Psr0Loader", "fromLink": "Windwalker/Loader/Loader/Psr0Loader.html", "link": "Windwalker/Loader/Loader/Psr0Loader.html#method_setFileExtension", "name": "Windwalker\\Loader\\Loader\\Psr0Loader::setFileExtension", "doc": "&quot;Sets the file extension of class files in the namespace of this class loader.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Loader\\Loader\\Psr0Loader", "fromLink": "Windwalker/Loader/Loader/Psr0Loader.html", "link": "Windwalker/Loader/Loader/Psr0Loader.html#method_getFileExtension", "name": "Windwalker\\Loader\\Loader\\Psr0Loader::getFileExtension", "doc": "&quot;Gets the file extension of class files in the namespace of this class loader.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Loader\\Loader\\Psr0Loader", "fromLink": "Windwalker/Loader/Loader/Psr0Loader.html", "link": "Windwalker/Loader/Loader/Psr0Loader.html#method_loadClass", "name": "Windwalker\\Loader\\Loader\\Psr0Loader::loadClass", "doc": "&quot;Loads the given class or interface.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Loader\\Loader", "fromLink": "Windwalker/Loader/Loader.html", "link": "Windwalker/Loader/Loader/Psr4Loader.html", "name": "Windwalker\\Loader\\Loader\\Psr4Loader", "doc": "&quot;Class Psr4Loader&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Loader\\Loader\\Psr4Loader", "fromLink": "Windwalker/Loader/Loader/Psr4Loader.html", "link": "Windwalker/Loader/Loader/Psr4Loader.html#method_addNamespace", "name": "Windwalker\\Loader\\Loader\\Psr4Loader::addNamespace", "doc": "&quot;Adds a base directory for a namespace prefix.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Loader\\Loader\\Psr4Loader", "fromLink": "Windwalker/Loader/Loader/Psr4Loader.html", "link": "Windwalker/Loader/Loader/Psr4Loader.html#method_loadClass", "name": "Windwalker\\Loader\\Loader\\Psr4Loader::loadClass", "doc": "&quot;Loads the class file for a given class name.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Middleware", "fromLink": "Windwalker/Middleware.html", "link": "Windwalker/Middleware/AbstractMiddleware.html", "name": "Windwalker\\Middleware\\AbstractMiddleware", "doc": "&quot;Basic Middleware class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Middleware\\AbstractMiddleware", "fromLink": "Windwalker/Middleware/AbstractMiddleware.html", "link": "Windwalker/Middleware/AbstractMiddleware.html#method_getNext", "name": "Windwalker\\Middleware\\AbstractMiddleware::getNext", "doc": "&quot;Get next middleware.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Middleware\\AbstractMiddleware", "fromLink": "Windwalker/Middleware/AbstractMiddleware.html", "link": "Windwalker/Middleware/AbstractMiddleware.html#method_setNext", "name": "Windwalker\\Middleware\\AbstractMiddleware::setNext", "doc": "&quot;Set next middleware.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Middleware", "fromLink": "Windwalker/Middleware.html", "link": "Windwalker/Middleware/CallbackMiddleware.html", "name": "Windwalker\\Middleware\\CallbackMiddleware", "doc": "&quot;Callback Middleware&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Middleware\\CallbackMiddleware", "fromLink": "Windwalker/Middleware/CallbackMiddleware.html", "link": "Windwalker/Middleware/CallbackMiddleware.html#method___construct", "name": "Windwalker\\Middleware\\CallbackMiddleware::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Middleware\\CallbackMiddleware", "fromLink": "Windwalker/Middleware/CallbackMiddleware.html", "link": "Windwalker/Middleware/CallbackMiddleware.html#method_execute", "name": "Windwalker\\Middleware\\CallbackMiddleware::execute", "doc": "&quot;Call next middleware.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Middleware\\CallbackMiddleware", "fromLink": "Windwalker/Middleware/CallbackMiddleware.html", "link": "Windwalker/Middleware/CallbackMiddleware.html#method_getHandler", "name": "Windwalker\\Middleware\\CallbackMiddleware::getHandler", "doc": "&quot;Get callback handler.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Middleware\\CallbackMiddleware", "fromLink": "Windwalker/Middleware/CallbackMiddleware.html", "link": "Windwalker/Middleware/CallbackMiddleware.html#method_setHandler", "name": "Windwalker\\Middleware\\CallbackMiddleware::setHandler", "doc": "&quot;Set callback handler.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Middleware\\Chain", "fromLink": "Windwalker/Middleware/Chain.html", "link": "Windwalker/Middleware/Chain/ChainBuilder.html", "name": "Windwalker\\Middleware\\Chain\\ChainBuilder", "doc": "&quot;The Chain Builder&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Middleware\\Chain\\ChainBuilder", "fromLink": "Windwalker/Middleware/Chain/ChainBuilder.html", "link": "Windwalker/Middleware/Chain/ChainBuilder.html#method___construct", "name": "Windwalker\\Middleware\\Chain\\ChainBuilder::__construct", "doc": "&quot;ChainBuilder constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Middleware\\Chain\\ChainBuilder", "fromLink": "Windwalker/Middleware/Chain/ChainBuilder.html", "link": "Windwalker/Middleware/Chain/ChainBuilder.html#method_add", "name": "Windwalker\\Middleware\\Chain\\ChainBuilder::add", "doc": "&quot;Add a middleware into chain.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Middleware\\Chain\\ChainBuilder", "fromLink": "Windwalker/Middleware/Chain/ChainBuilder.html", "link": "Windwalker/Middleware/Chain/ChainBuilder.html#method_execute", "name": "Windwalker\\Middleware\\Chain\\ChainBuilder::execute", "doc": "&quot;Call chaining.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Middleware\\Chain\\ChainBuilder", "fromLink": "Windwalker/Middleware/Chain/ChainBuilder.html", "link": "Windwalker/Middleware/Chain/ChainBuilder.html#method_getStack", "name": "Windwalker\\Middleware\\Chain\\ChainBuilder::getStack", "doc": "&quot;Method to get property Stack&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Middleware\\Chain\\ChainBuilder", "fromLink": "Windwalker/Middleware/Chain/ChainBuilder.html", "link": "Windwalker/Middleware/Chain/ChainBuilder.html#method_setStack", "name": "Windwalker\\Middleware\\Chain\\ChainBuilder::setStack", "doc": "&quot;Method to set property stack&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Middleware\\Chain\\ChainBuilder", "fromLink": "Windwalker/Middleware/Chain/ChainBuilder.html", "link": "Windwalker/Middleware/Chain/ChainBuilder.html#method_addMiddlewares", "name": "Windwalker\\Middleware\\Chain\\ChainBuilder::addMiddlewares", "doc": "&quot;addMiddlewares&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Middleware\\Chain\\ChainBuilder", "fromLink": "Windwalker/Middleware/Chain/ChainBuilder.html", "link": "Windwalker/Middleware/Chain/ChainBuilder.html#method_setEndMiddleware", "name": "Windwalker\\Middleware\\Chain\\ChainBuilder::setEndMiddleware", "doc": "&quot;Method to set property endMiddleware&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Middleware\\Chain\\ChainBuilder", "fromLink": "Windwalker/Middleware/Chain/ChainBuilder.html", "link": "Windwalker/Middleware/Chain/ChainBuilder.html#method_dumpStack", "name": "Windwalker\\Middleware\\Chain\\ChainBuilder::dumpStack", "doc": "&quot;dumpStack&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Middleware\\Chain", "fromLink": "Windwalker/Middleware/Chain.html", "link": "Windwalker/Middleware/Chain/Psr7ChainBuilder.html", "name": "Windwalker\\Middleware\\Chain\\Psr7ChainBuilder", "doc": "&quot;The Psr7ChainBuilder class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Middleware\\Chain\\Psr7ChainBuilder", "fromLink": "Windwalker/Middleware/Chain/Psr7ChainBuilder.html", "link": "Windwalker/Middleware/Chain/Psr7ChainBuilder.html#method_add", "name": "Windwalker\\Middleware\\Chain\\Psr7ChainBuilder::add", "doc": "&quot;Add a middleware into chain.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Middleware\\Chain\\Psr7ChainBuilder", "fromLink": "Windwalker/Middleware/Chain/Psr7ChainBuilder.html", "link": "Windwalker/Middleware/Chain/Psr7ChainBuilder.html#method___invoke", "name": "Windwalker\\Middleware\\Chain\\Psr7ChainBuilder::__invoke", "doc": "&quot;Middleware logic to be invoked.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Middleware\\Chain\\Psr7ChainBuilder", "fromLink": "Windwalker/Middleware/Chain/Psr7ChainBuilder.html", "link": "Windwalker/Middleware/Chain/Psr7ChainBuilder.html#method_execute", "name": "Windwalker\\Middleware\\Chain\\Psr7ChainBuilder::execute", "doc": "&quot;Call chaining.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Middleware", "fromLink": "Windwalker/Middleware.html", "link": "Windwalker/Middleware/EndMiddleware.html", "name": "Windwalker\\Middleware\\EndMiddleware", "doc": "&quot;End Middleware, this object will not do anything.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Middleware\\EndMiddleware", "fromLink": "Windwalker/Middleware/EndMiddleware.html", "link": "Windwalker/Middleware/EndMiddleware.html#method_setNext", "name": "Windwalker\\Middleware\\EndMiddleware::setNext", "doc": "&quot;Set next middleware.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Middleware\\EndMiddleware", "fromLink": "Windwalker/Middleware/EndMiddleware.html", "link": "Windwalker/Middleware/EndMiddleware.html#method_getNext", "name": "Windwalker\\Middleware\\EndMiddleware::getNext", "doc": "&quot;Get next middleware.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Middleware\\EndMiddleware", "fromLink": "Windwalker/Middleware/EndMiddleware.html", "link": "Windwalker/Middleware/EndMiddleware.html#method_execute", "name": "Windwalker\\Middleware\\EndMiddleware::execute", "doc": "&quot;Call next middleware.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Middleware", "fromLink": "Windwalker/Middleware.html", "link": "Windwalker/Middleware/MiddlewareInterface.html", "name": "Windwalker\\Middleware\\MiddlewareInterface", "doc": "&quot;Middleware Interface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Middleware\\MiddlewareInterface", "fromLink": "Windwalker/Middleware/MiddlewareInterface.html", "link": "Windwalker/Middleware/MiddlewareInterface.html#method_execute", "name": "Windwalker\\Middleware\\MiddlewareInterface::execute", "doc": "&quot;Call next middleware.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Middleware\\MiddlewareInterface", "fromLink": "Windwalker/Middleware/MiddlewareInterface.html", "link": "Windwalker/Middleware/MiddlewareInterface.html#method_getNext", "name": "Windwalker\\Middleware\\MiddlewareInterface::getNext", "doc": "&quot;Get next middleware.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Middleware\\MiddlewareInterface", "fromLink": "Windwalker/Middleware/MiddlewareInterface.html", "link": "Windwalker/Middleware/MiddlewareInterface.html#method_setNext", "name": "Windwalker\\Middleware\\MiddlewareInterface::setNext", "doc": "&quot;Set next middleware.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Middleware", "fromLink": "Windwalker/Middleware.html", "link": "Windwalker/Middleware/Psr7InvokableInterface.html", "name": "Windwalker\\Middleware\\Psr7InvokableInterface", "doc": "&quot;Interface Psr7InvokableInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Middleware\\Psr7InvokableInterface", "fromLink": "Windwalker/Middleware/Psr7InvokableInterface.html", "link": "Windwalker/Middleware/Psr7InvokableInterface.html#method___invoke", "name": "Windwalker\\Middleware\\Psr7InvokableInterface::__invoke", "doc": "&quot;Middleware logic to be invoked.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Middleware", "fromLink": "Windwalker/Middleware.html", "link": "Windwalker/Middleware/Psr7Middleware.html", "name": "Windwalker\\Middleware\\Psr7Middleware", "doc": "&quot;The Psr7Middleware class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Middleware\\Psr7Middleware", "fromLink": "Windwalker/Middleware/Psr7Middleware.html", "link": "Windwalker/Middleware/Psr7Middleware.html#method___invoke", "name": "Windwalker\\Middleware\\Psr7Middleware::__invoke", "doc": "&quot;Middleware logic to be invoked.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Middleware\\Psr7Middleware", "fromLink": "Windwalker/Middleware/Psr7Middleware.html", "link": "Windwalker/Middleware/Psr7Middleware.html#method_execute", "name": "Windwalker\\Middleware\\Psr7Middleware::execute", "doc": "&quot;Call next middleware.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Profiler", "fromLink": "Windwalker/Profiler.html", "link": "Windwalker/Profiler/Benchmark.html", "name": "Windwalker\\Profiler\\Benchmark", "doc": "&quot;The Benchmark class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Profiler\\Benchmark", "fromLink": "Windwalker/Profiler/Benchmark.html", "link": "Windwalker/Profiler/Benchmark.html#method___construct", "name": "Windwalker\\Profiler\\Benchmark::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Benchmark", "fromLink": "Windwalker/Profiler/Benchmark.html", "link": "Windwalker/Profiler/Benchmark.html#method_setTimeFormat", "name": "Windwalker\\Profiler\\Benchmark::setTimeFormat", "doc": "&quot;setTimeFormat&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Benchmark", "fromLink": "Windwalker/Profiler/Benchmark.html", "link": "Windwalker/Profiler/Benchmark.html#method_addTask", "name": "Windwalker\\Profiler\\Benchmark::addTask", "doc": "&quot;addTask&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Benchmark", "fromLink": "Windwalker/Profiler/Benchmark.html", "link": "Windwalker/Profiler/Benchmark.html#method_execute", "name": "Windwalker\\Profiler\\Benchmark::execute", "doc": "&quot;run&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Benchmark", "fromLink": "Windwalker/Profiler/Benchmark.html", "link": "Windwalker/Profiler/Benchmark.html#method_getResults", "name": "Windwalker\\Profiler\\Benchmark::getResults", "doc": "&quot;Method to get property Results&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Benchmark", "fromLink": "Windwalker/Profiler/Benchmark.html", "link": "Windwalker/Profiler/Benchmark.html#method_getResult", "name": "Windwalker\\Profiler\\Benchmark::getResult", "doc": "&quot;Method to get property Results&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Benchmark", "fromLink": "Windwalker/Profiler/Benchmark.html", "link": "Windwalker/Profiler/Benchmark.html#method_renderOne", "name": "Windwalker\\Profiler\\Benchmark::renderOne", "doc": "&quot;renderResult&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Benchmark", "fromLink": "Windwalker/Profiler/Benchmark.html", "link": "Windwalker/Profiler/Benchmark.html#method_render", "name": "Windwalker\\Profiler\\Benchmark::render", "doc": "&quot;renderResult&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Benchmark", "fromLink": "Windwalker/Profiler/Benchmark.html", "link": "Windwalker/Profiler/Benchmark.html#method_getTimes", "name": "Windwalker\\Profiler\\Benchmark::getTimes", "doc": "&quot;Method to get property Times&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Benchmark", "fromLink": "Windwalker/Profiler/Benchmark.html", "link": "Windwalker/Profiler/Benchmark.html#method_setTimes", "name": "Windwalker\\Profiler\\Benchmark::setTimes", "doc": "&quot;Method to set property times&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Benchmark", "fromLink": "Windwalker/Profiler/Benchmark.html", "link": "Windwalker/Profiler/Benchmark.html#method_getRenderOneHandler", "name": "Windwalker\\Profiler\\Benchmark::getRenderOneHandler", "doc": "&quot;Method to get property RenderHandler&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Benchmark", "fromLink": "Windwalker/Profiler/Benchmark.html", "link": "Windwalker/Profiler/Benchmark.html#method_setRenderOneHandler", "name": "Windwalker\\Profiler\\Benchmark::setRenderOneHandler", "doc": "&quot;Method to set property renderHandler&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Profiler\\Point", "fromLink": "Windwalker/Profiler/Point.html", "link": "Windwalker/Profiler/Point/Collector.html", "name": "Windwalker\\Profiler\\Point\\Collector", "doc": "&quot;The Collector class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Profiler\\Point\\Collector", "fromLink": "Windwalker/Profiler/Point/Collector.html", "link": "Windwalker/Profiler/Point/Collector.html#method___construct", "name": "Windwalker\\Profiler\\Point\\Collector::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Point\\Collector", "fromLink": "Windwalker/Profiler/Point/Collector.html", "link": "Windwalker/Profiler/Point/Collector.html#method_get", "name": "Windwalker\\Profiler\\Point\\Collector::get", "doc": "&quot;Get a value.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Point\\Collector", "fromLink": "Windwalker/Profiler/Point/Collector.html", "link": "Windwalker/Profiler/Point/Collector.html#method_set", "name": "Windwalker\\Profiler\\Point\\Collector::set", "doc": "&quot;set&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Point\\Collector", "fromLink": "Windwalker/Profiler/Point/Collector.html", "link": "Windwalker/Profiler/Point/Collector.html#method_getData", "name": "Windwalker\\Profiler\\Point\\Collector::getData", "doc": "&quot;Get all data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Point\\Collector", "fromLink": "Windwalker/Profiler/Point/Collector.html", "link": "Windwalker/Profiler/Point/Collector.html#method_setData", "name": "Windwalker\\Profiler\\Point\\Collector::setData", "doc": "&quot;setData&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Point\\Collector", "fromLink": "Windwalker/Profiler/Point/Collector.html", "link": "Windwalker/Profiler/Point/Collector.html#method_count", "name": "Windwalker\\Profiler\\Point\\Collector::count", "doc": "&quot;Count the number of arguments.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Point\\Collector", "fromLink": "Windwalker/Profiler/Point/Collector.html", "link": "Windwalker/Profiler/Point/Collector.html#method_offsetExists", "name": "Windwalker\\Profiler\\Point\\Collector::offsetExists", "doc": "&quot;Tell if the given event argument exists.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Point\\Collector", "fromLink": "Windwalker/Profiler/Point/Collector.html", "link": "Windwalker/Profiler/Point/Collector.html#method_offsetGet", "name": "Windwalker\\Profiler\\Point\\Collector::offsetGet", "doc": "&quot;Get an event argument value.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Point\\Collector", "fromLink": "Windwalker/Profiler/Point/Collector.html", "link": "Windwalker/Profiler/Point/Collector.html#method_offsetSet", "name": "Windwalker\\Profiler\\Point\\Collector::offsetSet", "doc": "&quot;Set the value of an event argument.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Point\\Collector", "fromLink": "Windwalker/Profiler/Point/Collector.html", "link": "Windwalker/Profiler/Point/Collector.html#method_offsetUnset", "name": "Windwalker\\Profiler\\Point\\Collector::offsetUnset", "doc": "&quot;Remove an event argument.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Point\\Collector", "fromLink": "Windwalker/Profiler/Point/Collector.html", "link": "Windwalker/Profiler/Point/Collector.html#method_getIterator", "name": "Windwalker\\Profiler\\Point\\Collector::getIterator", "doc": "&quot;Retrieve an external iterator&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Profiler\\Point", "fromLink": "Windwalker/Profiler/Point.html", "link": "Windwalker/Profiler/Point/CollectorInterface.html", "name": "Windwalker\\Profiler\\Point\\CollectorInterface", "doc": "&quot;The CollectorInterface interface.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Profiler\\Point\\CollectorInterface", "fromLink": "Windwalker/Profiler/Point/CollectorInterface.html", "link": "Windwalker/Profiler/Point/CollectorInterface.html#method_get", "name": "Windwalker\\Profiler\\Point\\CollectorInterface::get", "doc": "&quot;Get a value.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Point\\CollectorInterface", "fromLink": "Windwalker/Profiler/Point/CollectorInterface.html", "link": "Windwalker/Profiler/Point/CollectorInterface.html#method_getData", "name": "Windwalker\\Profiler\\Point\\CollectorInterface::getData", "doc": "&quot;Get all data.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Profiler\\Point", "fromLink": "Windwalker/Profiler/Point.html", "link": "Windwalker/Profiler/Point/Point.html", "name": "Windwalker\\Profiler\\Point\\Point", "doc": "&quot;Class ProfilerItem&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Profiler\\Point\\Point", "fromLink": "Windwalker/Profiler/Point/Point.html", "link": "Windwalker/Profiler/Point/Point.html#method___construct", "name": "Windwalker\\Profiler\\Point\\Point::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Point\\Point", "fromLink": "Windwalker/Profiler/Point/Point.html", "link": "Windwalker/Profiler/Point/Point.html#method_current", "name": "Windwalker\\Profiler\\Point\\Point::current", "doc": "&quot;Create a point of current information.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Point\\Point", "fromLink": "Windwalker/Profiler/Point/Point.html", "link": "Windwalker/Profiler/Point/Point.html#method_getName", "name": "Windwalker\\Profiler\\Point\\Point::getName", "doc": "&quot;Get the name of this profile point.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Point\\Point", "fromLink": "Windwalker/Profiler/Point/Point.html", "link": "Windwalker/Profiler/Point/Point.html#method_getTime", "name": "Windwalker\\Profiler\\Point\\Point::getTime", "doc": "&quot;Get the elapsed time in seconds since the first\npoint in the profiler it belongs to was marked.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Point\\Point", "fromLink": "Windwalker/Profiler/Point/Point.html", "link": "Windwalker/Profiler/Point/Point.html#method_getMemory", "name": "Windwalker\\Profiler\\Point\\Point::getMemory", "doc": "&quot;Get the allocated amount of memory in bytes\nsince the first point in the profiler it belongs to was marked.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Point\\Point", "fromLink": "Windwalker/Profiler/Point/Point.html", "link": "Windwalker/Profiler/Point/Point.html#method_getData", "name": "Windwalker\\Profiler\\Point\\Point::getData", "doc": "&quot;Method to get property Data&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Point\\Point", "fromLink": "Windwalker/Profiler/Point/Point.html", "link": "Windwalker/Profiler/Point/Point.html#method_setData", "name": "Windwalker\\Profiler\\Point\\Point::setData", "doc": "&quot;Method to set property data&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Profiler\\Point", "fromLink": "Windwalker/Profiler/Point.html", "link": "Windwalker/Profiler/Point/PointInterface.html", "name": "Windwalker\\Profiler\\Point\\PointInterface", "doc": "&quot;Interface PointInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Profiler\\Point\\PointInterface", "fromLink": "Windwalker/Profiler/Point/PointInterface.html", "link": "Windwalker/Profiler/Point/PointInterface.html#method_getName", "name": "Windwalker\\Profiler\\Point\\PointInterface::getName", "doc": "&quot;Get the name of this profile point.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Point\\PointInterface", "fromLink": "Windwalker/Profiler/Point/PointInterface.html", "link": "Windwalker/Profiler/Point/PointInterface.html#method_getTime", "name": "Windwalker\\Profiler\\Point\\PointInterface::getTime", "doc": "&quot;Get the elapsed time in seconds since the first\npoint in the profiler it belongs to was marked.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Point\\PointInterface", "fromLink": "Windwalker/Profiler/Point/PointInterface.html", "link": "Windwalker/Profiler/Point/PointInterface.html#method_getMemory", "name": "Windwalker\\Profiler\\Point\\PointInterface::getMemory", "doc": "&quot;Get the allocated amount of memory in bytes\nsince the first point in the profiler it belongs to was marked.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Point\\PointInterface", "fromLink": "Windwalker/Profiler/Point/PointInterface.html", "link": "Windwalker/Profiler/Point/PointInterface.html#method_getData", "name": "Windwalker\\Profiler\\Point\\PointInterface::getData", "doc": "&quot;getData&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Profiler", "fromLink": "Windwalker/Profiler.html", "link": "Windwalker/Profiler/Profiler.html", "name": "Windwalker\\Profiler\\Profiler", "doc": "&quot;Class Profiler&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Profiler\\Profiler", "fromLink": "Windwalker/Profiler/Profiler.html", "link": "Windwalker/Profiler/Profiler.html#method___construct", "name": "Windwalker\\Profiler\\Profiler::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Profiler", "fromLink": "Windwalker/Profiler/Profiler.html", "link": "Windwalker/Profiler/Profiler.html#method_setPoint", "name": "Windwalker\\Profiler\\Profiler::setPoint", "doc": "&quot;set Point&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Profiler", "fromLink": "Windwalker/Profiler/Profiler.html", "link": "Windwalker/Profiler/Profiler.html#method_getName", "name": "Windwalker\\Profiler\\Profiler::getName", "doc": "&quot;Get the name of this profiler.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Profiler", "fromLink": "Windwalker/Profiler/Profiler.html", "link": "Windwalker/Profiler/Profiler.html#method_mark", "name": "Windwalker\\Profiler\\Profiler::mark", "doc": "&quot;Mark a profile point.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Profiler", "fromLink": "Windwalker/Profiler/Profiler.html", "link": "Windwalker/Profiler/Profiler.html#method_hasPoint", "name": "Windwalker\\Profiler\\Profiler::hasPoint", "doc": "&quot;Check if the profiler has marked the given point.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Profiler", "fromLink": "Windwalker/Profiler/Profiler.html", "link": "Windwalker/Profiler/Profiler.html#method_getPoint", "name": "Windwalker\\Profiler\\Profiler::getPoint", "doc": "&quot;Get the point identified by the given name.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Profiler", "fromLink": "Windwalker/Profiler/Profiler.html", "link": "Windwalker/Profiler/Profiler.html#method_getTimeBetween", "name": "Windwalker\\Profiler\\Profiler::getTimeBetween", "doc": "&quot;Get the elapsed time in seconds between the two points.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Profiler", "fromLink": "Windwalker/Profiler/Profiler.html", "link": "Windwalker/Profiler/Profiler.html#method_getMemoryBetween", "name": "Windwalker\\Profiler\\Profiler::getMemoryBetween", "doc": "&quot;Get the amount of allocated memory in bytes between the two points.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Profiler", "fromLink": "Windwalker/Profiler/Profiler.html", "link": "Windwalker/Profiler/Profiler.html#method_getMemoryPeakBytes", "name": "Windwalker\\Profiler\\Profiler::getMemoryPeakBytes", "doc": "&quot;Get the memory peak in bytes during the profiler run.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Profiler", "fromLink": "Windwalker/Profiler/Profiler.html", "link": "Windwalker/Profiler/Profiler.html#method_getMemoryRealUsage", "name": "Windwalker\\Profiler\\Profiler::getMemoryRealUsage", "doc": "&quot;Method to get property MemoryRealUsage&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Profiler", "fromLink": "Windwalker/Profiler/Profiler.html", "link": "Windwalker/Profiler/Profiler.html#method_getPoints", "name": "Windwalker\\Profiler\\Profiler::getPoints", "doc": "&quot;Get the points in this profiler (from the first to the last).&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Profiler", "fromLink": "Windwalker/Profiler/Profiler.html", "link": "Windwalker/Profiler/Profiler.html#method_setRenderer", "name": "Windwalker\\Profiler\\Profiler::setRenderer", "doc": "&quot;Set the renderer to render this profiler.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Profiler", "fromLink": "Windwalker/Profiler/Profiler.html", "link": "Windwalker/Profiler/Profiler.html#method_getRenderer", "name": "Windwalker\\Profiler\\Profiler::getRenderer", "doc": "&quot;Get the currently used renderer in this profiler.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Profiler", "fromLink": "Windwalker/Profiler/Profiler.html", "link": "Windwalker/Profiler/Profiler.html#method_render", "name": "Windwalker\\Profiler\\Profiler::render", "doc": "&quot;Render the profiler.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Profiler", "fromLink": "Windwalker/Profiler/Profiler.html", "link": "Windwalker/Profiler/Profiler.html#method___toString", "name": "Windwalker\\Profiler\\Profiler::__toString", "doc": "&quot;Cast the profiler to a string using the renderer.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Profiler", "fromLink": "Windwalker/Profiler/Profiler.html", "link": "Windwalker/Profiler/Profiler.html#method_getIterator", "name": "Windwalker\\Profiler\\Profiler::getIterator", "doc": "&quot;Get an iterator on the profiler points.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Profiler", "fromLink": "Windwalker/Profiler/Profiler.html", "link": "Windwalker/Profiler/Profiler.html#method_count", "name": "Windwalker\\Profiler\\Profiler::count", "doc": "&quot;Count the number of points in this profiler.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\Profiler", "fromLink": "Windwalker/Profiler/Profiler.html", "link": "Windwalker/Profiler/Profiler.html#method_useMemoryRealUsage", "name": "Windwalker\\Profiler\\Profiler::useMemoryRealUsage", "doc": "&quot;Method to set property memoryRealUsage&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Profiler", "fromLink": "Windwalker/Profiler.html", "link": "Windwalker/Profiler/ProfilerAwareInterface.html", "name": "Windwalker\\Profiler\\ProfilerAwareInterface", "doc": "&quot;The ProfilerAwareInterface interface.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Profiler\\ProfilerAwareInterface", "fromLink": "Windwalker/Profiler/ProfilerAwareInterface.html", "link": "Windwalker/Profiler/ProfilerAwareInterface.html#method_getProfiler", "name": "Windwalker\\Profiler\\ProfilerAwareInterface::getProfiler", "doc": "&quot;Get profiler.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\ProfilerAwareInterface", "fromLink": "Windwalker/Profiler/ProfilerAwareInterface.html", "link": "Windwalker/Profiler/ProfilerAwareInterface.html#method_setProfiler", "name": "Windwalker\\Profiler\\ProfilerAwareInterface::setProfiler", "doc": "&quot;Set Profiler.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Profiler", "fromLink": "Windwalker/Profiler.html", "link": "Windwalker/Profiler/ProfilerInterface.html", "name": "Windwalker\\Profiler\\ProfilerInterface", "doc": "&quot;Interface ProfilerInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Profiler\\ProfilerInterface", "fromLink": "Windwalker/Profiler/ProfilerInterface.html", "link": "Windwalker/Profiler/ProfilerInterface.html#method_getName", "name": "Windwalker\\Profiler\\ProfilerInterface::getName", "doc": "&quot;Get the name of this profiler.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\ProfilerInterface", "fromLink": "Windwalker/Profiler/ProfilerInterface.html", "link": "Windwalker/Profiler/ProfilerInterface.html#method_mark", "name": "Windwalker\\Profiler\\ProfilerInterface::mark", "doc": "&quot;Mark a profile point.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\ProfilerInterface", "fromLink": "Windwalker/Profiler/ProfilerInterface.html", "link": "Windwalker/Profiler/ProfilerInterface.html#method_hasPoint", "name": "Windwalker\\Profiler\\ProfilerInterface::hasPoint", "doc": "&quot;Check if the profiler has marked the given point.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\ProfilerInterface", "fromLink": "Windwalker/Profiler/ProfilerInterface.html", "link": "Windwalker/Profiler/ProfilerInterface.html#method_getPoint", "name": "Windwalker\\Profiler\\ProfilerInterface::getPoint", "doc": "&quot;Get the point identified by the given name.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\ProfilerInterface", "fromLink": "Windwalker/Profiler/ProfilerInterface.html", "link": "Windwalker/Profiler/ProfilerInterface.html#method_getTimeBetween", "name": "Windwalker\\Profiler\\ProfilerInterface::getTimeBetween", "doc": "&quot;Get the elapsed time in seconds between the two points.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\ProfilerInterface", "fromLink": "Windwalker/Profiler/ProfilerInterface.html", "link": "Windwalker/Profiler/ProfilerInterface.html#method_getMemoryBetween", "name": "Windwalker\\Profiler\\ProfilerInterface::getMemoryBetween", "doc": "&quot;Get the amount of allocated memory in bytes between the two points.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\ProfilerInterface", "fromLink": "Windwalker/Profiler/ProfilerInterface.html", "link": "Windwalker/Profiler/ProfilerInterface.html#method_getMemoryPeakBytes", "name": "Windwalker\\Profiler\\ProfilerInterface::getMemoryPeakBytes", "doc": "&quot;Get the memory peak in bytes during the profiler run.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\ProfilerInterface", "fromLink": "Windwalker/Profiler/ProfilerInterface.html", "link": "Windwalker/Profiler/ProfilerInterface.html#method_getPoints", "name": "Windwalker\\Profiler\\ProfilerInterface::getPoints", "doc": "&quot;Get the points in this profiler (from the first to the last).&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Profiler\\ProfilerInterface", "fromLink": "Windwalker/Profiler/ProfilerInterface.html", "link": "Windwalker/Profiler/ProfilerInterface.html#method_render", "name": "Windwalker\\Profiler\\ProfilerInterface::render", "doc": "&quot;Render the profiler.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Profiler\\Renderer", "fromLink": "Windwalker/Profiler/Renderer.html", "link": "Windwalker/Profiler/Renderer/DefaultRenderer.html", "name": "Windwalker\\Profiler\\Renderer\\DefaultRenderer", "doc": "&quot;Class DefaultRenderer&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Profiler\\Renderer\\DefaultRenderer", "fromLink": "Windwalker/Profiler/Renderer/DefaultRenderer.html", "link": "Windwalker/Profiler/Renderer/DefaultRenderer.html#method_render", "name": "Windwalker\\Profiler\\Renderer\\DefaultRenderer::render", "doc": "&quot;Render the profiler.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Profiler\\Renderer", "fromLink": "Windwalker/Profiler/Renderer.html", "link": "Windwalker/Profiler/Renderer/ProfilerRendererInterface.html", "name": "Windwalker\\Profiler\\Renderer\\ProfilerRendererInterface", "doc": "&quot;Interface ProfilerRendererInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Profiler\\Renderer\\ProfilerRendererInterface", "fromLink": "Windwalker/Profiler/Renderer/ProfilerRendererInterface.html", "link": "Windwalker/Profiler/Renderer/ProfilerRendererInterface.html#method_render", "name": "Windwalker\\Profiler\\Renderer\\ProfilerRendererInterface::render", "doc": "&quot;Render the profiler.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Query", "fromLink": "Windwalker/Query.html", "link": "Windwalker/Query/AbstractQueryGrammar.html", "name": "Windwalker\\Query\\AbstractQueryGrammar", "doc": "&quot;Class QueryGrammar&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Query\\AbstractQueryGrammar", "fromLink": "Windwalker/Query/AbstractQueryGrammar.html", "link": "Windwalker/Query/AbstractQueryGrammar.html#method_getInstance", "name": "Windwalker\\Query\\AbstractQueryGrammar::getInstance", "doc": "&quot;getInstance&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\AbstractQueryGrammar", "fromLink": "Windwalker/Query/AbstractQueryGrammar.html", "link": "Windwalker/Query/AbstractQueryGrammar.html#method_build", "name": "Windwalker\\Query\\AbstractQueryGrammar::build", "doc": "&quot;build&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\AbstractQueryGrammar", "fromLink": "Windwalker/Query/AbstractQueryGrammar.html", "link": "Windwalker/Query/AbstractQueryGrammar.html#method_getQuery", "name": "Windwalker\\Query\\AbstractQueryGrammar::getQuery", "doc": "&quot;getQuery&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Query", "fromLink": "Windwalker/Query.html", "link": "Windwalker/Query/ConnectionContainer.html", "name": "Windwalker\\Query\\ConnectionContainer", "doc": "&quot;The Connection Container class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Query\\ConnectionContainer", "fromLink": "Windwalker/Query/ConnectionContainer.html", "link": "Windwalker/Query/ConnectionContainer.html#method_getConnection", "name": "Windwalker\\Query\\ConnectionContainer::getConnection", "doc": "&quot;getConnection&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\ConnectionContainer", "fromLink": "Windwalker/Query/ConnectionContainer.html", "link": "Windwalker/Query/ConnectionContainer.html#method_setConnection", "name": "Windwalker\\Query\\ConnectionContainer::setConnection", "doc": "&quot;setConnection&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Query\\Cubrid", "fromLink": "Windwalker/Query/Cubrid.html", "link": "Windwalker/Query/Cubrid/CubridExpression.html", "name": "Windwalker\\Query\\Cubrid\\CubridExpression", "doc": "&quot;Class CubridExpression&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Query\\Cubrid\\CubridExpression", "fromLink": "Windwalker/Query/Cubrid/CubridExpression.html", "link": "Windwalker/Query/Cubrid/CubridExpression.html#method_concatenate", "name": "Windwalker\\Query\\Cubrid\\CubridExpression::concatenate", "doc": "&quot;Concatenates an array of column names or values.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Cubrid\\CubridExpression", "fromLink": "Windwalker/Query/Cubrid/CubridExpression.html", "link": "Windwalker/Query/Cubrid/CubridExpression.html#method_cast_as_char", "name": "Windwalker\\Query\\Cubrid\\CubridExpression::cast_as_char", "doc": "&quot;Casts a value to a char.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Query\\Cubrid", "fromLink": "Windwalker/Query/Cubrid.html", "link": "Windwalker/Query/Cubrid/CubridQuery.html", "name": "Windwalker\\Query\\Cubrid\\CubridQuery", "doc": "&quot;Class CubridQuery&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Query\\Mariadb", "fromLink": "Windwalker/Query/Mariadb.html", "link": "Windwalker/Query/Mariadb/MariadbExpression.html", "name": "Windwalker\\Query\\Mariadb\\MariadbExpression", "doc": "&quot;Class MariadbExpression&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Query\\Mariadb", "fromLink": "Windwalker/Query/Mariadb.html", "link": "Windwalker/Query/Mariadb/MariadbQuery.html", "name": "Windwalker\\Query\\Mariadb\\MariadbQuery", "doc": "&quot;Class Mariadb&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Query\\Mysql", "fromLink": "Windwalker/Query/Mysql.html", "link": "Windwalker/Query/Mysql/MysqlExpression.html", "name": "Windwalker\\Query\\Mysql\\MysqlExpression", "doc": "&quot;Class MysqlExpression&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Query\\Mysql\\MysqlExpression", "fromLink": "Windwalker/Query/Mysql/MysqlExpression.html", "link": "Windwalker/Query/Mysql/MysqlExpression.html#method_concatenate", "name": "Windwalker\\Query\\Mysql\\MysqlExpression::concatenate", "doc": "&quot;Concatenates an array of column names or values.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Query\\Mysql", "fromLink": "Windwalker/Query/Mysql.html", "link": "Windwalker/Query/Mysql/MysqlGrammar.html", "name": "Windwalker\\Query\\Mysql\\MysqlGrammar", "doc": "&quot;Class MysqlQueryGrammar&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Query\\Mysql\\MysqlGrammar", "fromLink": "Windwalker/Query/Mysql/MysqlGrammar.html", "link": "Windwalker/Query/Mysql/MysqlGrammar.html#method_listDatabases", "name": "Windwalker\\Query\\Mysql\\MysqlGrammar::listDatabases", "doc": "&quot;showDatabases&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Mysql\\MysqlGrammar", "fromLink": "Windwalker/Query/Mysql/MysqlGrammar.html", "link": "Windwalker/Query/Mysql/MysqlGrammar.html#method_createDatabase", "name": "Windwalker\\Query\\Mysql\\MysqlGrammar::createDatabase", "doc": "&quot;createDatabase&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Mysql\\MysqlGrammar", "fromLink": "Windwalker/Query/Mysql/MysqlGrammar.html", "link": "Windwalker/Query/Mysql/MysqlGrammar.html#method_dropDatabase", "name": "Windwalker\\Query\\Mysql\\MysqlGrammar::dropDatabase", "doc": "&quot;dropTable&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Mysql\\MysqlGrammar", "fromLink": "Windwalker/Query/Mysql/MysqlGrammar.html", "link": "Windwalker/Query/Mysql/MysqlGrammar.html#method_showTableColumns", "name": "Windwalker\\Query\\Mysql\\MysqlGrammar::showTableColumns", "doc": "&quot;showTableColumn&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Mysql\\MysqlGrammar", "fromLink": "Windwalker/Query/Mysql/MysqlGrammar.html", "link": "Windwalker/Query/Mysql/MysqlGrammar.html#method_showDbTables", "name": "Windwalker\\Query\\Mysql\\MysqlGrammar::showDbTables", "doc": "&quot;showDbTables&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Mysql\\MysqlGrammar", "fromLink": "Windwalker/Query/Mysql/MysqlGrammar.html", "link": "Windwalker/Query/Mysql/MysqlGrammar.html#method_createTable", "name": "Windwalker\\Query\\Mysql\\MysqlGrammar::createTable", "doc": "&quot;createTable&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Mysql\\MysqlGrammar", "fromLink": "Windwalker/Query/Mysql/MysqlGrammar.html", "link": "Windwalker/Query/Mysql/MysqlGrammar.html#method_dropTable", "name": "Windwalker\\Query\\Mysql\\MysqlGrammar::dropTable", "doc": "&quot;dropTable&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Mysql\\MysqlGrammar", "fromLink": "Windwalker/Query/Mysql/MysqlGrammar.html", "link": "Windwalker/Query/Mysql/MysqlGrammar.html#method_alterColumn", "name": "Windwalker\\Query\\Mysql\\MysqlGrammar::alterColumn", "doc": "&quot;alterColumn&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Mysql\\MysqlGrammar", "fromLink": "Windwalker/Query/Mysql/MysqlGrammar.html", "link": "Windwalker/Query/Mysql/MysqlGrammar.html#method_addColumn", "name": "Windwalker\\Query\\Mysql\\MysqlGrammar::addColumn", "doc": "&quot;Add column&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Mysql\\MysqlGrammar", "fromLink": "Windwalker/Query/Mysql/MysqlGrammar.html", "link": "Windwalker/Query/Mysql/MysqlGrammar.html#method_changeColumn", "name": "Windwalker\\Query\\Mysql\\MysqlGrammar::changeColumn", "doc": "&quot;changeColumn&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Mysql\\MysqlGrammar", "fromLink": "Windwalker/Query/Mysql/MysqlGrammar.html", "link": "Windwalker/Query/Mysql/MysqlGrammar.html#method_modifyColumn", "name": "Windwalker\\Query\\Mysql\\MysqlGrammar::modifyColumn", "doc": "&quot;modifyColumn&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Mysql\\MysqlGrammar", "fromLink": "Windwalker/Query/Mysql/MysqlGrammar.html", "link": "Windwalker/Query/Mysql/MysqlGrammar.html#method_dropColumn", "name": "Windwalker\\Query\\Mysql\\MysqlGrammar::dropColumn", "doc": "&quot;dropColumn&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Mysql\\MysqlGrammar", "fromLink": "Windwalker/Query/Mysql/MysqlGrammar.html", "link": "Windwalker/Query/Mysql/MysqlGrammar.html#method_addIndex", "name": "Windwalker\\Query\\Mysql\\MysqlGrammar::addIndex", "doc": "&quot;addIndex&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Mysql\\MysqlGrammar", "fromLink": "Windwalker/Query/Mysql/MysqlGrammar.html", "link": "Windwalker/Query/Mysql/MysqlGrammar.html#method_buildIndexDeclare", "name": "Windwalker\\Query\\Mysql\\MysqlGrammar::buildIndexDeclare", "doc": "&quot;buildIndexDeclare&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Mysql\\MysqlGrammar", "fromLink": "Windwalker/Query/Mysql/MysqlGrammar.html", "link": "Windwalker/Query/Mysql/MysqlGrammar.html#method_dropIndex", "name": "Windwalker\\Query\\Mysql\\MysqlGrammar::dropIndex", "doc": "&quot;dropIndex&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Mysql\\MysqlGrammar", "fromLink": "Windwalker/Query/Mysql/MysqlGrammar.html", "link": "Windwalker/Query/Mysql/MysqlGrammar.html#method_build", "name": "Windwalker\\Query\\Mysql\\MysqlGrammar::build", "doc": "&quot;build&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Mysql\\MysqlGrammar", "fromLink": "Windwalker/Query/Mysql/MysqlGrammar.html", "link": "Windwalker/Query/Mysql/MysqlGrammar.html#method_replace", "name": "Windwalker\\Query\\Mysql\\MysqlGrammar::replace", "doc": "&quot;replace&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Mysql\\MysqlGrammar", "fromLink": "Windwalker/Query/Mysql/MysqlGrammar.html", "link": "Windwalker/Query/Mysql/MysqlGrammar.html#method_getQuery", "name": "Windwalker\\Query\\Mysql\\MysqlGrammar::getQuery", "doc": "&quot;getQuery&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Query\\Mysql", "fromLink": "Windwalker/Query/Mysql.html", "link": "Windwalker/Query/Mysql/MysqlQuery.html", "name": "Windwalker\\Query\\Mysql\\MysqlQuery", "doc": "&quot;Class MysqlQuery&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Query\\Oracle", "fromLink": "Windwalker/Query/Oracle.html", "link": "Windwalker/Query/Oracle/OracleExpression.html", "name": "Windwalker\\Query\\Oracle\\OracleExpression", "doc": "&quot;Class OracleExpression&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Query\\Oracle", "fromLink": "Windwalker/Query/Oracle.html", "link": "Windwalker/Query/Oracle/OracleQuery.html", "name": "Windwalker\\Query\\Oracle\\OracleQuery", "doc": "&quot;Class OracleQuery&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Query\\Oracle\\OracleQuery", "fromLink": "Windwalker/Query/Oracle/OracleQuery.html", "link": "Windwalker/Query/Oracle/OracleQuery.html#method_escape", "name": "Windwalker\\Query\\Oracle\\OracleQuery::escape", "doc": "&quot;escape&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Oracle\\OracleQuery", "fromLink": "Windwalker/Query/Oracle/OracleQuery.html", "link": "Windwalker/Query/Oracle/OracleQuery.html#method_processLimit", "name": "Windwalker\\Query\\Oracle\\OracleQuery::processLimit", "doc": "&quot;Method to modify a query already in string format with the needed\nadditions to make the query limited to a particular number of\nresults, or start at a particular offset. This method is used\nautomatically by the __toString() method if it detects that the\nquery implements the LimitableInterface.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Oracle\\OracleQuery", "fromLink": "Windwalker/Query/Oracle/OracleQuery.html", "link": "Windwalker/Query/Oracle/OracleQuery.html#method_limit", "name": "Windwalker\\Query\\Oracle\\OracleQuery::limit", "doc": "&quot;Sets the offset and limit for the result set, if the database driver supports it.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Oracle\\OracleQuery", "fromLink": "Windwalker/Query/Oracle/OracleQuery.html", "link": "Windwalker/Query/Oracle/OracleQuery.html#method_getDateFormat", "name": "Windwalker\\Query\\Oracle\\OracleQuery::getDateFormat", "doc": "&quot;getDateFormat&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Oracle\\OracleQuery", "fromLink": "Windwalker/Query/Oracle/OracleQuery.html", "link": "Windwalker/Query/Oracle/OracleQuery.html#method_setDateFormat", "name": "Windwalker\\Query\\Oracle\\OracleQuery::setDateFormat", "doc": "&quot;setDateFormat&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Query\\Pdo", "fromLink": "Windwalker/Query/Pdo.html", "link": "Windwalker/Query/Pdo/PdoExpression.html", "name": "Windwalker\\Query\\Pdo\\PdoExpression", "doc": "&quot;Class PdoExpression&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Query\\Pdo", "fromLink": "Windwalker/Query/Pdo.html", "link": "Windwalker/Query/Pdo/PdoQuery.html", "name": "Windwalker\\Query\\Pdo\\PdoQuery", "doc": "&quot;Class PdoQuery&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Query\\Postgresql", "fromLink": "Windwalker/Query/Postgresql.html", "link": "Windwalker/Query/Postgresql/PostgresqlExpression.html", "name": "Windwalker\\Query\\Postgresql\\PostgresqlExpression", "doc": "&quot;Class PostgresqlExpression&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlExpression", "fromLink": "Windwalker/Query/Postgresql/PostgresqlExpression.html", "link": "Windwalker/Query/Postgresql/PostgresqlExpression.html#method_concatenate", "name": "Windwalker\\Query\\Postgresql\\PostgresqlExpression::concatenate", "doc": "&quot;Concatenates an array of column names or values.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlExpression", "fromLink": "Windwalker/Query/Postgresql/PostgresqlExpression.html", "link": "Windwalker/Query/Postgresql/PostgresqlExpression.html#method_current_timestamp", "name": "Windwalker\\Query\\Postgresql\\PostgresqlExpression::current_timestamp", "doc": "&quot;Gets the current date and time.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlExpression", "fromLink": "Windwalker/Query/Postgresql/PostgresqlExpression.html", "link": "Windwalker/Query/Postgresql/PostgresqlExpression.html#method_year", "name": "Windwalker\\Query\\Postgresql\\PostgresqlExpression::year", "doc": "&quot;Used to get a string to extract year from date column.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlExpression", "fromLink": "Windwalker/Query/Postgresql/PostgresqlExpression.html", "link": "Windwalker/Query/Postgresql/PostgresqlExpression.html#method_month", "name": "Windwalker\\Query\\Postgresql\\PostgresqlExpression::month", "doc": "&quot;Used to get a string to extract month from date column.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlExpression", "fromLink": "Windwalker/Query/Postgresql/PostgresqlExpression.html", "link": "Windwalker/Query/Postgresql/PostgresqlExpression.html#method_day", "name": "Windwalker\\Query\\Postgresql\\PostgresqlExpression::day", "doc": "&quot;Used to get a string to extract day from date column.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlExpression", "fromLink": "Windwalker/Query/Postgresql/PostgresqlExpression.html", "link": "Windwalker/Query/Postgresql/PostgresqlExpression.html#method_hour", "name": "Windwalker\\Query\\Postgresql\\PostgresqlExpression::hour", "doc": "&quot;Used to get a string to extract hour from date column.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlExpression", "fromLink": "Windwalker/Query/Postgresql/PostgresqlExpression.html", "link": "Windwalker/Query/Postgresql/PostgresqlExpression.html#method_minute", "name": "Windwalker\\Query\\Postgresql\\PostgresqlExpression::minute", "doc": "&quot;Used to get a string to extract minute from date column.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlExpression", "fromLink": "Windwalker/Query/Postgresql/PostgresqlExpression.html", "link": "Windwalker/Query/Postgresql/PostgresqlExpression.html#method_second", "name": "Windwalker\\Query\\Postgresql\\PostgresqlExpression::second", "doc": "&quot;Used to get a string to extract seconds from date column.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlExpression", "fromLink": "Windwalker/Query/Postgresql/PostgresqlExpression.html", "link": "Windwalker/Query/Postgresql/PostgresqlExpression.html#method_cast_as_char", "name": "Windwalker\\Query\\Postgresql\\PostgresqlExpression::cast_as_char", "doc": "&quot;Casts a value to a char.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Query\\Postgresql", "fromLink": "Windwalker/Query/Postgresql.html", "link": "Windwalker/Query/Postgresql/PostgresqlGrammar.html", "name": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar", "doc": "&quot;Class PostgresqlQueryGrammar&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar", "fromLink": "Windwalker/Query/Postgresql/PostgresqlGrammar.html", "link": "Windwalker/Query/Postgresql/PostgresqlGrammar.html#method_listDatabases", "name": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar::listDatabases", "doc": "&quot;showDatabases&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar", "fromLink": "Windwalker/Query/Postgresql/PostgresqlGrammar.html", "link": "Windwalker/Query/Postgresql/PostgresqlGrammar.html#method_createDatabase", "name": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar::createDatabase", "doc": "&quot;createDatabase&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar", "fromLink": "Windwalker/Query/Postgresql/PostgresqlGrammar.html", "link": "Windwalker/Query/Postgresql/PostgresqlGrammar.html#method_dropDatabase", "name": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar::dropDatabase", "doc": "&quot;dropTable&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar", "fromLink": "Windwalker/Query/Postgresql/PostgresqlGrammar.html", "link": "Windwalker/Query/Postgresql/PostgresqlGrammar.html#method_showTableColumns", "name": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar::showTableColumns", "doc": "&quot;showTableColumn&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar", "fromLink": "Windwalker/Query/Postgresql/PostgresqlGrammar.html", "link": "Windwalker/Query/Postgresql/PostgresqlGrammar.html#method_showDbTables", "name": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar::showDbTables", "doc": "&quot;showDbTables&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar", "fromLink": "Windwalker/Query/Postgresql/PostgresqlGrammar.html", "link": "Windwalker/Query/Postgresql/PostgresqlGrammar.html#method_createTable", "name": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar::createTable", "doc": "&quot;createTable&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar", "fromLink": "Windwalker/Query/Postgresql/PostgresqlGrammar.html", "link": "Windwalker/Query/Postgresql/PostgresqlGrammar.html#method_dropTable", "name": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar::dropTable", "doc": "&quot;dropTable&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar", "fromLink": "Windwalker/Query/Postgresql/PostgresqlGrammar.html", "link": "Windwalker/Query/Postgresql/PostgresqlGrammar.html#method_comment", "name": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar::comment", "doc": "&quot;comment&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar", "fromLink": "Windwalker/Query/Postgresql/PostgresqlGrammar.html", "link": "Windwalker/Query/Postgresql/PostgresqlGrammar.html#method_alterColumn", "name": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar::alterColumn", "doc": "&quot;alterColumn&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar", "fromLink": "Windwalker/Query/Postgresql/PostgresqlGrammar.html", "link": "Windwalker/Query/Postgresql/PostgresqlGrammar.html#method_addColumn", "name": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar::addColumn", "doc": "&quot;Add column&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar", "fromLink": "Windwalker/Query/Postgresql/PostgresqlGrammar.html", "link": "Windwalker/Query/Postgresql/PostgresqlGrammar.html#method_renameColumn", "name": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar::renameColumn", "doc": "&quot;changeColumn&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar", "fromLink": "Windwalker/Query/Postgresql/PostgresqlGrammar.html", "link": "Windwalker/Query/Postgresql/PostgresqlGrammar.html#method_dropColumn", "name": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar::dropColumn", "doc": "&quot;dropColumn&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar", "fromLink": "Windwalker/Query/Postgresql/PostgresqlGrammar.html", "link": "Windwalker/Query/Postgresql/PostgresqlGrammar.html#method_addIndex", "name": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar::addIndex", "doc": "&quot;addIndex&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar", "fromLink": "Windwalker/Query/Postgresql/PostgresqlGrammar.html", "link": "Windwalker/Query/Postgresql/PostgresqlGrammar.html#method_buildIndexDeclare", "name": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar::buildIndexDeclare", "doc": "&quot;buildIndexDeclare&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar", "fromLink": "Windwalker/Query/Postgresql/PostgresqlGrammar.html", "link": "Windwalker/Query/Postgresql/PostgresqlGrammar.html#method_dropIndex", "name": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar::dropIndex", "doc": "&quot;dropIndex&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar", "fromLink": "Windwalker/Query/Postgresql/PostgresqlGrammar.html", "link": "Windwalker/Query/Postgresql/PostgresqlGrammar.html#method_dropConstraint", "name": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar::dropConstraint", "doc": "&quot;dropConstraint&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar", "fromLink": "Windwalker/Query/Postgresql/PostgresqlGrammar.html", "link": "Windwalker/Query/Postgresql/PostgresqlGrammar.html#method_build", "name": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar::build", "doc": "&quot;build&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar", "fromLink": "Windwalker/Query/Postgresql/PostgresqlGrammar.html", "link": "Windwalker/Query/Postgresql/PostgresqlGrammar.html#method_getQuery", "name": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar::getQuery", "doc": "&quot;getQuery&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar", "fromLink": "Windwalker/Query/Postgresql/PostgresqlGrammar.html", "link": "Windwalker/Query/Postgresql/PostgresqlGrammar.html#method_changeColumn", "name": "Windwalker\\Query\\Postgresql\\PostgresqlGrammar::changeColumn", "doc": "&quot;changeColumn&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Query\\Postgresql", "fromLink": "Windwalker/Query/Postgresql.html", "link": "Windwalker/Query/Postgresql/PostgresqlQuery.html", "name": "Windwalker\\Query\\Postgresql\\PostgresqlQuery", "doc": "&quot;Class PostgresqlQuery&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlQuery", "fromLink": "Windwalker/Query/Postgresql/PostgresqlQuery.html", "link": "Windwalker/Query/Postgresql/PostgresqlQuery.html#method_toString", "name": "Windwalker\\Query\\Postgresql\\PostgresqlQuery::toString", "doc": "&quot;Magic function to convert the query to a string, only for PostgreSQL specific queries&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlQuery", "fromLink": "Windwalker/Query/Postgresql/PostgresqlQuery.html", "link": "Windwalker/Query/Postgresql/PostgresqlQuery.html#method_clear", "name": "Windwalker\\Query\\Postgresql\\PostgresqlQuery::clear", "doc": "&quot;Clear data from the query or a specific clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlQuery", "fromLink": "Windwalker/Query/Postgresql/PostgresqlQuery.html", "link": "Windwalker/Query/Postgresql/PostgresqlQuery.html#method_forUpdate", "name": "Windwalker\\Query\\Postgresql\\PostgresqlQuery::forUpdate", "doc": "&quot;Sets the FOR UPDATE lock on select&#039;s output row&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlQuery", "fromLink": "Windwalker/Query/Postgresql/PostgresqlQuery.html", "link": "Windwalker/Query/Postgresql/PostgresqlQuery.html#method_forShare", "name": "Windwalker\\Query\\Postgresql\\PostgresqlQuery::forShare", "doc": "&quot;Sets the FOR SHARE lock on select&#039;s output row&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlQuery", "fromLink": "Windwalker/Query/Postgresql/PostgresqlQuery.html", "link": "Windwalker/Query/Postgresql/PostgresqlQuery.html#method_noWait", "name": "Windwalker\\Query\\Postgresql\\PostgresqlQuery::noWait", "doc": "&quot;Sets the NOWAIT lock on select&#039;s output row&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlQuery", "fromLink": "Windwalker/Query/Postgresql/PostgresqlQuery.html", "link": "Windwalker/Query/Postgresql/PostgresqlQuery.html#method_limit", "name": "Windwalker\\Query\\Postgresql\\PostgresqlQuery::limit", "doc": "&quot;Set the LIMIT clause to the query&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlQuery", "fromLink": "Windwalker/Query/Postgresql/PostgresqlQuery.html", "link": "Windwalker/Query/Postgresql/PostgresqlQuery.html#method_offset", "name": "Windwalker\\Query\\Postgresql\\PostgresqlQuery::offset", "doc": "&quot;Set the OFFSET clause to the query&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlQuery", "fromLink": "Windwalker/Query/Postgresql/PostgresqlQuery.html", "link": "Windwalker/Query/Postgresql/PostgresqlQuery.html#method_returning", "name": "Windwalker\\Query\\Postgresql\\PostgresqlQuery::returning", "doc": "&quot;Add the RETURNING element to INSERT INTO statement.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Postgresql\\PostgresqlQuery", "fromLink": "Windwalker/Query/Postgresql/PostgresqlQuery.html", "link": "Windwalker/Query/Postgresql/PostgresqlQuery.html#method_processLimit", "name": "Windwalker\\Query\\Postgresql\\PostgresqlQuery::processLimit", "doc": "&quot;Method to modify a query already in string format with the needed\nadditions to make the query limited to a particular number of\nresults, or start at a particular offset.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Query", "fromLink": "Windwalker/Query.html", "link": "Windwalker/Query/Query.html", "name": "Windwalker\\Query\\Query", "doc": "&quot;Class AbstractQuery&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method___construct", "name": "Windwalker\\Query\\Query::__construct", "doc": "&quot;Class constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method___toString", "name": "Windwalker\\Query\\Query::__toString", "doc": "&quot;Magic function to convert the query to a string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_toString", "name": "Windwalker\\Query\\Query::toString", "doc": "&quot;Convert the query to a string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_get", "name": "Windwalker\\Query\\Query::get", "doc": "&quot;Get clause  value.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method___get", "name": "Windwalker\\Query\\Query::__get", "doc": "&quot;Magic function to get protected variable value&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_call", "name": "Windwalker\\Query\\Query::call", "doc": "&quot;Add a single column, or array of columns to the CALL clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_clear", "name": "Windwalker\\Query\\Query::clear", "doc": "&quot;Clear data from the query or a specific clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_columns", "name": "Windwalker\\Query\\Query::columns", "doc": "&quot;Adds a column, or array of column names that would be used for an INSERT INTO statement.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_dateFormat", "name": "Windwalker\\Query\\Query::dateFormat", "doc": "&quot;Returns a PHP date() function compliant date format for the database driver.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_dump", "name": "Windwalker\\Query\\Query::dump", "doc": "&quot;Creates a formatted dump of the query for debugging purposes.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_delete", "name": "Windwalker\\Query\\Query::delete", "doc": "&quot;Add a table name to the DELETE clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_escape", "name": "Windwalker\\Query\\Query::escape", "doc": "&quot;Method to escape a string for usage in an SQL statement.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_e", "name": "Windwalker\\Query\\Query::e", "doc": "&quot;Proxy of escape.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_exec", "name": "Windwalker\\Query\\Query::exec", "doc": "&quot;Add a single column, or array of columns to the EXEC clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_from", "name": "Windwalker\\Query\\Query::from", "doc": "&quot;Add a table to the FROM clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_expression", "name": "Windwalker\\Query\\Query::expression", "doc": "&quot;expression&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_expr", "name": "Windwalker\\Query\\Query::expr", "doc": "&quot;Alias of expression()&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_element", "name": "Windwalker\\Query\\Query::element", "doc": "&quot;element&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_ele", "name": "Windwalker\\Query\\Query::ele", "doc": "&quot;ele&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_group", "name": "Windwalker\\Query\\Query::group", "doc": "&quot;Add a grouping column to the GROUP clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_having", "name": "Windwalker\\Query\\Query::having", "doc": "&quot;A conditions to the HAVING clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_orHaving", "name": "Windwalker\\Query\\Query::orHaving", "doc": "&quot;Add a single condition, or an array of conditions to the HAVING clause and wrap with OR elements.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_innerJoin", "name": "Windwalker\\Query\\Query::innerJoin", "doc": "&quot;Add an INNER JOIN clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_insert", "name": "Windwalker\\Query\\Query::insert", "doc": "&quot;Add a table name to the INSERT clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_join", "name": "Windwalker\\Query\\Query::join", "doc": "&quot;Add a JOIN clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_leftJoin", "name": "Windwalker\\Query\\Query::leftJoin", "doc": "&quot;Add a LEFT JOIN clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_nullDate", "name": "Windwalker\\Query\\Query::nullDate", "doc": "&quot;Get the null or zero representation of a timestamp for the database driver.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_order", "name": "Windwalker\\Query\\Query::order", "doc": "&quot;Add a ordering column to the ORDER clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_limit", "name": "Windwalker\\Query\\Query::limit", "doc": "&quot;Sets the offset and limit for the result set, if the database driver supports it.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_processLimit", "name": "Windwalker\\Query\\Query::processLimit", "doc": "&quot;Method to modify a query already in string format with the needed\nadditions to make the query limited to a particular number of\nresults, or start at a particular offset.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_outerJoin", "name": "Windwalker\\Query\\Query::outerJoin", "doc": "&quot;Add an OUTER JOIN clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_quote", "name": "Windwalker\\Query\\Query::quote", "doc": "&quot;Method to quote and optionally escape a string to database requirements for insertion into the database.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_q", "name": "Windwalker\\Query\\Query::q", "doc": "&quot;Proxy of quote().&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_quoteName", "name": "Windwalker\\Query\\Query::quoteName", "doc": "&quot;Wrap an SQL statement identifier name such as column, table or database names in quotes to prevent injection\nrisks and reserved word conflicts.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_qn", "name": "Windwalker\\Query\\Query::qn", "doc": "&quot;Proxy of quoteName().&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_rightJoin", "name": "Windwalker\\Query\\Query::rightJoin", "doc": "&quot;Add a RIGHT JOIN clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_select", "name": "Windwalker\\Query\\Query::select", "doc": "&quot;Add a single column, or array of columns to the SELECT clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_set", "name": "Windwalker\\Query\\Query::set", "doc": "&quot;Add a single condition string, or an array of strings to the SET clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_setQuery", "name": "Windwalker\\Query\\Query::setQuery", "doc": "&quot;Allows a direct query to be provided to the database driver&#039;s setQuery() method, but still allow queries\nto have bounded variables.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_update", "name": "Windwalker\\Query\\Query::update", "doc": "&quot;Add a table name to the UPDATE clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_values", "name": "Windwalker\\Query\\Query::values", "doc": "&quot;Adds a tuple, or array of tuples that would be used as values for an INSERT INTO statement.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_where", "name": "Windwalker\\Query\\Query::where", "doc": "&quot;Add a single condition, or an array of conditions to the WHERE clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_orWhere", "name": "Windwalker\\Query\\Query::orWhere", "doc": "&quot;Add a single condition, or an array of conditions to the WHERE clause and wrap with OR elements.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method___clone", "name": "Windwalker\\Query\\Query::__clone", "doc": "&quot;Method to provide deep copy support to nested objects and arrays when cloning.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_union", "name": "Windwalker\\Query\\Query::union", "doc": "&quot;Add a query to UNION with the current query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_unionDistinct", "name": "Windwalker\\Query\\Query::unionDistinct", "doc": "&quot;Add a query to UNION DISTINCT with the current query. Simply a proxy to Union with the Distinct clause.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_unionAll", "name": "Windwalker\\Query\\Query::unionAll", "doc": "&quot;Add a query to UNION ALL with the current query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_format", "name": "Windwalker\\Query\\Query::format", "doc": "&quot;Find and replace sprintf-like tokens in a format string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_getName", "name": "Windwalker\\Query\\Query::getName", "doc": "&quot;getName&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_getExpression", "name": "Windwalker\\Query\\Query::getExpression", "doc": "&quot;getExpression&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_setExpression", "name": "Windwalker\\Query\\Query::setExpression", "doc": "&quot;setExpression&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_getConnection", "name": "Windwalker\\Query\\Query::getConnection", "doc": "&quot;Method to get property Connection&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_setConnection", "name": "Windwalker\\Query\\Query::setConnection", "doc": "&quot;Method to set property connection&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_bind", "name": "Windwalker\\Query\\Query::bind", "doc": "&quot;Method to add a variable to an internal array that will be bound to a prepared SQL statement before query execution. Also\nremoves a variable that has been bounded from the internal bounded array when the passed in value is null.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_getBounded", "name": "Windwalker\\Query\\Query::getBounded", "doc": "&quot;Retrieves the bound parameters array when key is null and returns it by reference. If a key is provided then that item is\nreturned.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_getDateFormat", "name": "Windwalker\\Query\\Query::getDateFormat", "doc": "&quot;Method to get property DateFormat&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_setDateFormat", "name": "Windwalker\\Query\\Query::setDateFormat", "doc": "&quot;Method to set property dateFormat&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_getNullDate", "name": "Windwalker\\Query\\Query::getNullDate", "doc": "&quot;Method to get property NullDate&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_setNullDate", "name": "Windwalker\\Query\\Query::setNullDate", "doc": "&quot;Method to set property nullDate&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_validValue", "name": "Windwalker\\Query\\Query::validValue", "doc": "&quot;getValidValue&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_validDatetime", "name": "Windwalker\\Query\\Query::validDatetime", "doc": "&quot;getValidDatetime&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method_getGrammar", "name": "Windwalker\\Query\\Query::getGrammar", "doc": "&quot;getBuilder&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method___sleep", "name": "Windwalker\\Query\\Query::__sleep", "doc": "&quot;Unsetting PDO connection before going to sleep (this is needed if the query gets serialized)&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query.html#method___wakeup", "name": "Windwalker\\Query\\Query::__wakeup", "doc": "&quot;Trying to re-retrieve the pdo connection after waking up&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Query", "fromLink": "Windwalker/Query.html", "link": "Windwalker/Query/QueryElement.html", "name": "Windwalker\\Query\\QueryElement", "doc": "&quot;Query Element Class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Query\\QueryElement", "fromLink": "Windwalker/Query/QueryElement.html", "link": "Windwalker/Query/QueryElement.html#method___construct", "name": "Windwalker\\Query\\QueryElement::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryElement", "fromLink": "Windwalker/Query/QueryElement.html", "link": "Windwalker/Query/QueryElement.html#method___toString", "name": "Windwalker\\Query\\QueryElement::__toString", "doc": "&quot;Magic function to convert the query element to a string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryElement", "fromLink": "Windwalker/Query/QueryElement.html", "link": "Windwalker/Query/QueryElement.html#method_toString", "name": "Windwalker\\Query\\QueryElement::toString", "doc": "&quot;toString&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryElement", "fromLink": "Windwalker/Query/QueryElement.html", "link": "Windwalker/Query/QueryElement.html#method_append", "name": "Windwalker\\Query\\QueryElement::append", "doc": "&quot;Appends element parts to the internal list.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryElement", "fromLink": "Windwalker/Query/QueryElement.html", "link": "Windwalker/Query/QueryElement.html#method_getElements", "name": "Windwalker\\Query\\QueryElement::getElements", "doc": "&quot;Gets the elements of this element.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryElement", "fromLink": "Windwalker/Query/QueryElement.html", "link": "Windwalker/Query/QueryElement.html#method___clone", "name": "Windwalker\\Query\\QueryElement::__clone", "doc": "&quot;Method to provide deep copy support to nested objects and arrays\nwhen cloning.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryElement", "fromLink": "Windwalker/Query/QueryElement.html", "link": "Windwalker/Query/QueryElement.html#method_getGlue", "name": "Windwalker\\Query\\QueryElement::getGlue", "doc": "&quot;Method to get property Glue&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryElement", "fromLink": "Windwalker/Query/QueryElement.html", "link": "Windwalker/Query/QueryElement.html#method_setGlue", "name": "Windwalker\\Query\\QueryElement::setGlue", "doc": "&quot;Method to set property glue&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryElement", "fromLink": "Windwalker/Query/QueryElement.html", "link": "Windwalker/Query/QueryElement.html#method_getName", "name": "Windwalker\\Query\\QueryElement::getName", "doc": "&quot;Method to get property Name&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryElement", "fromLink": "Windwalker/Query/QueryElement.html", "link": "Windwalker/Query/QueryElement.html#method_setName", "name": "Windwalker\\Query\\QueryElement::setName", "doc": "&quot;Method to set property name&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Query", "fromLink": "Windwalker/Query.html", "link": "Windwalker/Query/QueryExpression.html", "name": "Windwalker\\Query\\QueryExpression", "doc": "&quot;Class QueryExpression&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Query\\QueryExpression", "fromLink": "Windwalker/Query/QueryExpression.html", "link": "Windwalker/Query/QueryExpression.html#method___construct", "name": "Windwalker\\Query\\QueryExpression::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryExpression", "fromLink": "Windwalker/Query/QueryExpression.html", "link": "Windwalker/Query/QueryExpression.html#method_isExpression", "name": "Windwalker\\Query\\QueryExpression::isExpression", "doc": "&quot;isExpression&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryExpression", "fromLink": "Windwalker/Query/QueryExpression.html", "link": "Windwalker/Query/QueryExpression.html#method_buildExpression", "name": "Windwalker\\Query\\QueryExpression::buildExpression", "doc": "&quot;buildExpression&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryExpression", "fromLink": "Windwalker/Query/QueryExpression.html", "link": "Windwalker/Query/QueryExpression.html#method_getQuery", "name": "Windwalker\\Query\\QueryExpression::getQuery", "doc": "&quot;getQuery&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryExpression", "fromLink": "Windwalker/Query/QueryExpression.html", "link": "Windwalker/Query/QueryExpression.html#method_setQuery", "name": "Windwalker\\Query\\QueryExpression::setQuery", "doc": "&quot;setQuery&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryExpression", "fromLink": "Windwalker/Query/QueryExpression.html", "link": "Windwalker/Query/QueryExpression.html#method_concatenate", "name": "Windwalker\\Query\\QueryExpression::concatenate", "doc": "&quot;Concatenates an array of column names or values.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryExpression", "fromLink": "Windwalker/Query/QueryExpression.html", "link": "Windwalker/Query/QueryExpression.html#method_concat", "name": "Windwalker\\Query\\QueryExpression::concat", "doc": "&quot;Concatenates an array of column names or values.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryExpression", "fromLink": "Windwalker/Query/QueryExpression.html", "link": "Windwalker/Query/QueryExpression.html#method_current_timestamp", "name": "Windwalker\\Query\\QueryExpression::current_timestamp", "doc": "&quot;Gets the current date and time.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryExpression", "fromLink": "Windwalker/Query/QueryExpression.html", "link": "Windwalker/Query/QueryExpression.html#method_year", "name": "Windwalker\\Query\\QueryExpression::year", "doc": "&quot;Used to get a string to extract year from date column.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryExpression", "fromLink": "Windwalker/Query/QueryExpression.html", "link": "Windwalker/Query/QueryExpression.html#method_month", "name": "Windwalker\\Query\\QueryExpression::month", "doc": "&quot;Used to get a string to extract month from date column.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryExpression", "fromLink": "Windwalker/Query/QueryExpression.html", "link": "Windwalker/Query/QueryExpression.html#method_day", "name": "Windwalker\\Query\\QueryExpression::day", "doc": "&quot;Used to get a string to extract day from date column.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryExpression", "fromLink": "Windwalker/Query/QueryExpression.html", "link": "Windwalker/Query/QueryExpression.html#method_hour", "name": "Windwalker\\Query\\QueryExpression::hour", "doc": "&quot;Used to get a string to extract hour from date column.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryExpression", "fromLink": "Windwalker/Query/QueryExpression.html", "link": "Windwalker/Query/QueryExpression.html#method_minute", "name": "Windwalker\\Query\\QueryExpression::minute", "doc": "&quot;Used to get a string to extract minute from date column.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryExpression", "fromLink": "Windwalker/Query/QueryExpression.html", "link": "Windwalker/Query/QueryExpression.html#method_second", "name": "Windwalker\\Query\\QueryExpression::second", "doc": "&quot;Used to get a string to extract seconds from date column.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryExpression", "fromLink": "Windwalker/Query/QueryExpression.html", "link": "Windwalker/Query/QueryExpression.html#method_length", "name": "Windwalker\\Query\\QueryExpression::length", "doc": "&quot;Get the length of a string in bytes.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryExpression", "fromLink": "Windwalker/Query/QueryExpression.html", "link": "Windwalker/Query/QueryExpression.html#method_char_length", "name": "Windwalker\\Query\\QueryExpression::char_length", "doc": "&quot;Gets the number of characters in a string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryExpression", "fromLink": "Windwalker/Query/QueryExpression.html", "link": "Windwalker/Query/QueryExpression.html#method_cast_as_char", "name": "Windwalker\\Query\\QueryExpression::cast_as_char", "doc": "&quot;Casts a value to a char.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryExpression", "fromLink": "Windwalker/Query/QueryExpression.html", "link": "Windwalker/Query/QueryExpression.html#method_caseCondition", "name": "Windwalker\\Query\\QueryExpression::caseCondition", "doc": "&quot;caseCondition&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Query", "fromLink": "Windwalker/Query.html", "link": "Windwalker/Query/QueryGrammarInterface.html", "name": "Windwalker\\Query\\QueryGrammarInterface", "doc": "&quot;QueryGrammar interface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Query\\QueryGrammarInterface", "fromLink": "Windwalker/Query/QueryGrammarInterface.html", "link": "Windwalker/Query/QueryGrammarInterface.html#method_listDatabases", "name": "Windwalker\\Query\\QueryGrammarInterface::listDatabases", "doc": "&quot;showDatabases&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryGrammarInterface", "fromLink": "Windwalker/Query/QueryGrammarInterface.html", "link": "Windwalker/Query/QueryGrammarInterface.html#method_createDatabase", "name": "Windwalker\\Query\\QueryGrammarInterface::createDatabase", "doc": "&quot;createDatabase&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryGrammarInterface", "fromLink": "Windwalker/Query/QueryGrammarInterface.html", "link": "Windwalker/Query/QueryGrammarInterface.html#method_dropDatabase", "name": "Windwalker\\Query\\QueryGrammarInterface::dropDatabase", "doc": "&quot;dropTable&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryGrammarInterface", "fromLink": "Windwalker/Query/QueryGrammarInterface.html", "link": "Windwalker/Query/QueryGrammarInterface.html#method_showTableColumns", "name": "Windwalker\\Query\\QueryGrammarInterface::showTableColumns", "doc": "&quot;showTableColumn&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryGrammarInterface", "fromLink": "Windwalker/Query/QueryGrammarInterface.html", "link": "Windwalker/Query/QueryGrammarInterface.html#method_showDbTables", "name": "Windwalker\\Query\\QueryGrammarInterface::showDbTables", "doc": "&quot;showDbTables&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryGrammarInterface", "fromLink": "Windwalker/Query/QueryGrammarInterface.html", "link": "Windwalker/Query/QueryGrammarInterface.html#method_createTable", "name": "Windwalker\\Query\\QueryGrammarInterface::createTable", "doc": "&quot;createTable&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryGrammarInterface", "fromLink": "Windwalker/Query/QueryGrammarInterface.html", "link": "Windwalker/Query/QueryGrammarInterface.html#method_dropTable", "name": "Windwalker\\Query\\QueryGrammarInterface::dropTable", "doc": "&quot;dropTable&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryGrammarInterface", "fromLink": "Windwalker/Query/QueryGrammarInterface.html", "link": "Windwalker/Query/QueryGrammarInterface.html#method_addColumn", "name": "Windwalker\\Query\\QueryGrammarInterface::addColumn", "doc": "&quot;Add column&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryGrammarInterface", "fromLink": "Windwalker/Query/QueryGrammarInterface.html", "link": "Windwalker/Query/QueryGrammarInterface.html#method_changeColumn", "name": "Windwalker\\Query\\QueryGrammarInterface::changeColumn", "doc": "&quot;changeColumn&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryGrammarInterface", "fromLink": "Windwalker/Query/QueryGrammarInterface.html", "link": "Windwalker/Query/QueryGrammarInterface.html#method_dropColumn", "name": "Windwalker\\Query\\QueryGrammarInterface::dropColumn", "doc": "&quot;dropColumn&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryGrammarInterface", "fromLink": "Windwalker/Query/QueryGrammarInterface.html", "link": "Windwalker/Query/QueryGrammarInterface.html#method_addIndex", "name": "Windwalker\\Query\\QueryGrammarInterface::addIndex", "doc": "&quot;addIndex&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryGrammarInterface", "fromLink": "Windwalker/Query/QueryGrammarInterface.html", "link": "Windwalker/Query/QueryGrammarInterface.html#method_build", "name": "Windwalker\\Query\\QueryGrammarInterface::build", "doc": "&quot;build&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryGrammarInterface", "fromLink": "Windwalker/Query/QueryGrammarInterface.html", "link": "Windwalker/Query/QueryGrammarInterface.html#method_getQuery", "name": "Windwalker\\Query\\QueryGrammarInterface::getQuery", "doc": "&quot;getQuery&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Query", "fromLink": "Windwalker/Query.html", "link": "Windwalker/Query/QueryInterface.html", "name": "Windwalker\\Query\\QueryInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method___toString", "name": "Windwalker\\Query\\QueryInterface::__toString", "doc": "&quot;Magic function to convert the query to a string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_get", "name": "Windwalker\\Query\\QueryInterface::get", "doc": "&quot;Get clause  value.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_call", "name": "Windwalker\\Query\\QueryInterface::call", "doc": "&quot;Add a single column, or array of columns to the CALL clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_columns", "name": "Windwalker\\Query\\QueryInterface::columns", "doc": "&quot;Adds a column, or array of column names that would be used for an INSERT INTO statement.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_dateFormat", "name": "Windwalker\\Query\\QueryInterface::dateFormat", "doc": "&quot;Returns a PHP date() function compliant date format for the database driver.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_delete", "name": "Windwalker\\Query\\QueryInterface::delete", "doc": "&quot;Add a table name to the DELETE clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_escape", "name": "Windwalker\\Query\\QueryInterface::escape", "doc": "&quot;Method to escape a string for usage in an SQL statement.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_exec", "name": "Windwalker\\Query\\QueryInterface::exec", "doc": "&quot;Add a single column, or array of columns to the EXEC clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_from", "name": "Windwalker\\Query\\QueryInterface::from", "doc": "&quot;Add a table to the FROM clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_expression", "name": "Windwalker\\Query\\QueryInterface::expression", "doc": "&quot;expression&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_group", "name": "Windwalker\\Query\\QueryInterface::group", "doc": "&quot;Add a grouping column to the GROUP clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_having", "name": "Windwalker\\Query\\QueryInterface::having", "doc": "&quot;A conditions to the HAVING clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_orHaving", "name": "Windwalker\\Query\\QueryInterface::orHaving", "doc": "&quot;Add a single condition, or an array of conditions to the HAVING clause and wrap with OR elements.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_innerJoin", "name": "Windwalker\\Query\\QueryInterface::innerJoin", "doc": "&quot;Add an INNER JOIN clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_insert", "name": "Windwalker\\Query\\QueryInterface::insert", "doc": "&quot;Add a table name to the INSERT clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_join", "name": "Windwalker\\Query\\QueryInterface::join", "doc": "&quot;Add a JOIN clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_leftJoin", "name": "Windwalker\\Query\\QueryInterface::leftJoin", "doc": "&quot;Add a LEFT JOIN clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_nullDate", "name": "Windwalker\\Query\\QueryInterface::nullDate", "doc": "&quot;Get the null or zero representation of a timestamp for the database driver.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_order", "name": "Windwalker\\Query\\QueryInterface::order", "doc": "&quot;Add a ordering column to the ORDER clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_limit", "name": "Windwalker\\Query\\QueryInterface::limit", "doc": "&quot;Sets the offset and limit for the result set, if the database driver supports it.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_outerJoin", "name": "Windwalker\\Query\\QueryInterface::outerJoin", "doc": "&quot;Add an OUTER JOIN clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_quote", "name": "Windwalker\\Query\\QueryInterface::quote", "doc": "&quot;Method to quote and optionally escape a string to database requirements for insertion into the database.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_quoteName", "name": "Windwalker\\Query\\QueryInterface::quoteName", "doc": "&quot;Wrap an SQL statement identifier name such as column, table or database names in quotes to prevent injection\nrisks and reserved word conflicts.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_rightJoin", "name": "Windwalker\\Query\\QueryInterface::rightJoin", "doc": "&quot;Add a RIGHT JOIN clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_select", "name": "Windwalker\\Query\\QueryInterface::select", "doc": "&quot;Add a single column, or array of columns to the SELECT clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_set", "name": "Windwalker\\Query\\QueryInterface::set", "doc": "&quot;Add a single condition string, or an array of strings to the SET clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_setQuery", "name": "Windwalker\\Query\\QueryInterface::setQuery", "doc": "&quot;Allows a direct query to be provided to the database driver&#039;s setQuery() method, but still allow queries\nto have bounded variables.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_update", "name": "Windwalker\\Query\\QueryInterface::update", "doc": "&quot;Add a table name to the UPDATE clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_values", "name": "Windwalker\\Query\\QueryInterface::values", "doc": "&quot;Adds a tuple, or array of tuples that would be used as values for an INSERT INTO statement.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_where", "name": "Windwalker\\Query\\QueryInterface::where", "doc": "&quot;Add a single condition, or an array of conditions to the WHERE clause of the query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_orWhere", "name": "Windwalker\\Query\\QueryInterface::orWhere", "doc": "&quot;Add a single condition, or an array of conditions to the WHERE clause and wrap with OR elements.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_union", "name": "Windwalker\\Query\\QueryInterface::union", "doc": "&quot;Add a query to UNION with the current query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_unionDistinct", "name": "Windwalker\\Query\\QueryInterface::unionDistinct", "doc": "&quot;Add a query to UNION DISTINCT with the current query. Simply a proxy to Union with the Distinct clause.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_unionAll", "name": "Windwalker\\Query\\QueryInterface::unionAll", "doc": "&quot;Add a query to UNION ALL with the current query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\QueryInterface", "fromLink": "Windwalker/Query/QueryInterface.html", "link": "Windwalker/Query/QueryInterface.html#method_format", "name": "Windwalker\\Query\\QueryInterface::format", "doc": "&quot;Find and replace sprintf-like tokens in a format string.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query/LimitableInterface.html", "name": "Windwalker\\Query\\Query\\LimitableInterface", "doc": "&quot;Windwalker Query LimitableInterface.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Query\\Query\\LimitableInterface", "fromLink": "Windwalker/Query/Query/LimitableInterface.html", "link": "Windwalker/Query/Query/LimitableInterface.html#method_processLimit", "name": "Windwalker\\Query\\Query\\LimitableInterface::processLimit", "doc": "&quot;Method to modify a query already in string format with the needed\nadditions to make the query limited to a particular number of\nresults, or start at a particular offset. This method is used\nautomatically by the __toString() method if it detects that the\nquery implements the LimitableInterface.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query\\LimitableInterface", "fromLink": "Windwalker/Query/Query/LimitableInterface.html", "link": "Windwalker/Query/Query/LimitableInterface.html#method_setLimit", "name": "Windwalker\\Query\\Query\\LimitableInterface::setLimit", "doc": "&quot;Sets the offset and limit for the result set, if the database driver supports it.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query/PreparableInterface.html", "name": "Windwalker\\Query\\Query\\PreparableInterface", "doc": "&quot;Windwalker Query Preparable Interface.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Query\\Query\\PreparableInterface", "fromLink": "Windwalker/Query/Query/PreparableInterface.html", "link": "Windwalker/Query/Query/PreparableInterface.html#method_bind", "name": "Windwalker\\Query\\Query\\PreparableInterface::bind", "doc": "&quot;Method to add a variable to an internal array that will be bound to a prepared SQL statement before query execution. Also\nremoves a variable that has been bounded from the internal bounded array when the passed in value is null.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query\\PreparableInterface", "fromLink": "Windwalker/Query/Query/PreparableInterface.html", "link": "Windwalker/Query/Query/PreparableInterface.html#method_getBounded", "name": "Windwalker\\Query\\Query\\PreparableInterface::getBounded", "doc": "&quot;Retrieves the bound parameters array when key is null and returns it by reference. If a key is provided then that item is\nreturned.&quot;"},
            
            {"type": "Trait", "fromName": "Windwalker\\Query\\Query", "fromLink": "Windwalker/Query/Query.html", "link": "Windwalker/Query/Query/PreparableTrait.html", "name": "Windwalker\\Query\\Query\\PreparableTrait", "doc": "&quot;Class PreparableTrait&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Query\\Query\\PreparableTrait", "fromLink": "Windwalker/Query/Query/PreparableTrait.html", "link": "Windwalker/Query/Query/PreparableTrait.html#method_bind", "name": "Windwalker\\Query\\Query\\PreparableTrait::bind", "doc": "&quot;Method to add a variable to an internal array that will be bound to a prepared SQL statement before query execution. Also\nremoves a variable that has been bounded from the internal bounded array when the passed in value is null.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Query\\PreparableTrait", "fromLink": "Windwalker/Query/Query/PreparableTrait.html", "link": "Windwalker/Query/Query/PreparableTrait.html#method_getBounded", "name": "Windwalker\\Query\\Query\\PreparableTrait::getBounded", "doc": "&quot;Retrieves the bound parameters array when key is null and returns it by reference. If a key is provided then that item is\nreturned.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Query\\Sqlite", "fromLink": "Windwalker/Query/Sqlite.html", "link": "Windwalker/Query/Sqlite/SqliteExpression.html", "name": "Windwalker\\Query\\Sqlite\\SqliteExpression", "doc": "&quot;Class SqliteExpression&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Query\\Sqlite\\SqliteExpression", "fromLink": "Windwalker/Query/Sqlite/SqliteExpression.html", "link": "Windwalker/Query/Sqlite/SqliteExpression.html#method_concatenate", "name": "Windwalker\\Query\\Sqlite\\SqliteExpression::concatenate", "doc": "&quot;Concatenates an array of column names or values.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Sqlite\\SqliteExpression", "fromLink": "Windwalker/Query/Sqlite/SqliteExpression.html", "link": "Windwalker/Query/Sqlite/SqliteExpression.html#method_char_length", "name": "Windwalker\\Query\\Sqlite\\SqliteExpression::char_length", "doc": "&quot;Gets the number of characters in a string.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Query\\Sqlite", "fromLink": "Windwalker/Query/Sqlite.html", "link": "Windwalker/Query/Sqlite/SqliteQuery.html", "name": "Windwalker\\Query\\Sqlite\\SqliteQuery", "doc": "&quot;Class SqliteQuery&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Query\\Sqlite\\SqliteQuery", "fromLink": "Windwalker/Query/Sqlite/SqliteQuery.html", "link": "Windwalker/Query/Sqlite/SqliteQuery.html#method_bind", "name": "Windwalker\\Query\\Sqlite\\SqliteQuery::bind", "doc": "&quot;Method to add a variable to an internal array that will be bound to a prepared SQL statement before query execution. Also\nremoves a variable that has been bounded from the internal bounded array when the passed in value is null.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Sqlite\\SqliteQuery", "fromLink": "Windwalker/Query/Sqlite/SqliteQuery.html", "link": "Windwalker/Query/Sqlite/SqliteQuery.html#method_getBounded", "name": "Windwalker\\Query\\Sqlite\\SqliteQuery::getBounded", "doc": "&quot;Retrieves the bound parameters array when key is null and returns it by reference. If a key is provided then that item is\nreturned.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Sqlite\\SqliteQuery", "fromLink": "Windwalker/Query/Sqlite/SqliteQuery.html", "link": "Windwalker/Query/Sqlite/SqliteQuery.html#method_escape", "name": "Windwalker\\Query\\Sqlite\\SqliteQuery::escape", "doc": "&quot;Method to escape a string for usage in an SQLite statement.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Sqlite\\SqliteQuery", "fromLink": "Windwalker/Query/Sqlite/SqliteQuery.html", "link": "Windwalker/Query/Sqlite/SqliteQuery.html#method_clear", "name": "Windwalker\\Query\\Sqlite\\SqliteQuery::clear", "doc": "&quot;Clear data from the query or a specific clause of the query.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Query\\Sqlserv", "fromLink": "Windwalker/Query/Sqlserv.html", "link": "Windwalker/Query/Sqlserv/SqlservExpression.html", "name": "Windwalker\\Query\\Sqlserv\\SqlservExpression", "doc": "&quot;Class SqlservExpression&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Query\\Sqlserv\\SqlservExpression", "fromLink": "Windwalker/Query/Sqlserv/SqlservExpression.html", "link": "Windwalker/Query/Sqlserv/SqlservExpression.html#method_char_length", "name": "Windwalker\\Query\\Sqlserv\\SqlservExpression::char_length", "doc": "&quot;Gets the function to determine the length of a character string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Sqlserv\\SqlservExpression", "fromLink": "Windwalker/Query/Sqlserv/SqlservExpression.html", "link": "Windwalker/Query/Sqlserv/SqlservExpression.html#method_concatenate", "name": "Windwalker\\Query\\Sqlserv\\SqlservExpression::concatenate", "doc": "&quot;Concatenates an array of column names or values.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Sqlserv\\SqlservExpression", "fromLink": "Windwalker/Query/Sqlserv/SqlservExpression.html", "link": "Windwalker/Query/Sqlserv/SqlservExpression.html#method_current_timestamp", "name": "Windwalker\\Query\\Sqlserv\\SqlservExpression::current_timestamp", "doc": "&quot;Gets the current date and time.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Sqlserv\\SqlservExpression", "fromLink": "Windwalker/Query/Sqlserv/SqlservExpression.html", "link": "Windwalker/Query/Sqlserv/SqlservExpression.html#method_length", "name": "Windwalker\\Query\\Sqlserv\\SqlservExpression::length", "doc": "&quot;Get the length of a string in bytes.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Sqlserv\\SqlservExpression", "fromLink": "Windwalker/Query/Sqlserv/SqlservExpression.html", "link": "Windwalker/Query/Sqlserv/SqlservExpression.html#method_cast_as_char", "name": "Windwalker\\Query\\Sqlserv\\SqlservExpression::cast_as_char", "doc": "&quot;Casts a value to a char.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Query\\Sqlserv", "fromLink": "Windwalker/Query/Sqlserv.html", "link": "Windwalker/Query/Sqlserv/SqlservQuery.html", "name": "Windwalker\\Query\\Sqlserv\\SqlservQuery", "doc": "&quot;Class SqlservQuery&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Query\\Sqlserv\\SqlservQuery", "fromLink": "Windwalker/Query/Sqlserv/SqlservQuery.html", "link": "Windwalker/Query/Sqlserv/SqlservQuery.html#method_escape", "name": "Windwalker\\Query\\Sqlserv\\SqlservQuery::escape", "doc": "&quot;Method to escape a string for usage in an SQL statement.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Query\\Sqlserv\\SqlservQuery", "fromLink": "Windwalker/Query/Sqlserv/SqlservQuery.html", "link": "Windwalker/Query/Sqlserv/SqlservQuery.html#method___toString", "name": "Windwalker\\Query\\Sqlserv\\SqlservQuery::__toString", "doc": "&quot;Magic function to convert the query to a string.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Record\\Exception", "fromLink": "Windwalker/Record/Exception.html", "link": "Windwalker/Record/Exception/NoResultException.html", "name": "Windwalker\\Record\\Exception\\NoResultException", "doc": "&quot;The NoResultException class.&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Record", "fromLink": "Windwalker/Record.html", "link": "Windwalker/Record/NestedRecord.html", "name": "Windwalker\\Record\\NestedRecord", "doc": "&quot;The NestedRecord class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Record\\NestedRecord", "fromLink": "Windwalker/Record/NestedRecord.html", "link": "Windwalker/Record/NestedRecord.html#method_getPath", "name": "Windwalker\\Record\\NestedRecord::getPath", "doc": "&quot;Method to get an array of nodes from a given node to its root.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\NestedRecord", "fromLink": "Windwalker/Record/NestedRecord.html", "link": "Windwalker/Record/NestedRecord.html#method_getTree", "name": "Windwalker\\Record\\NestedRecord::getTree", "doc": "&quot;Method to get a node and all its child nodes.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\NestedRecord", "fromLink": "Windwalker/Record/NestedRecord.html", "link": "Windwalker/Record/NestedRecord.html#method_isLeaf", "name": "Windwalker\\Record\\NestedRecord::isLeaf", "doc": "&quot;Method to determine if a node is a leaf node in the tree (has no children).&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\NestedRecord", "fromLink": "Windwalker/Record/NestedRecord.html", "link": "Windwalker/Record/NestedRecord.html#method_validate", "name": "Windwalker\\Record\\NestedRecord::validate", "doc": "&quot;Checks that the object is valid and able to be stored.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\NestedRecord", "fromLink": "Windwalker/Record/NestedRecord.html", "link": "Windwalker/Record/NestedRecord.html#method_setLocation", "name": "Windwalker\\Record\\NestedRecord::setLocation", "doc": "&quot;Method to set the location of a node in the tree object.  This method does not\nsave the new location to the database, but will set it in the object so\nthat when the node is stored it will be stored in the new location.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\NestedRecord", "fromLink": "Windwalker/Record/NestedRecord.html", "link": "Windwalker/Record/NestedRecord.html#method_store", "name": "Windwalker\\Record\\NestedRecord::store", "doc": "&quot;Method to store a node in the database table.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\NestedRecord", "fromLink": "Windwalker/Record/NestedRecord.html", "link": "Windwalker/Record/NestedRecord.html#method_move", "name": "Windwalker\\Record\\NestedRecord::move", "doc": "&quot;Method to move a row in the ordering sequence of a group of rows defined by an SQL WHERE clause.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\NestedRecord", "fromLink": "Windwalker/Record/NestedRecord.html", "link": "Windwalker/Record/NestedRecord.html#method_moveByReference", "name": "Windwalker\\Record\\NestedRecord::moveByReference", "doc": "&quot;Method to move a node and its children to a new location in the tree.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\NestedRecord", "fromLink": "Windwalker/Record/NestedRecord.html", "link": "Windwalker/Record/NestedRecord.html#method_delete", "name": "Windwalker\\Record\\NestedRecord::delete", "doc": "&quot;Method to delete a node and, optionally, its child nodes from the table.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\NestedRecord", "fromLink": "Windwalker/Record/NestedRecord.html", "link": "Windwalker/Record/NestedRecord.html#method_getRootId", "name": "Windwalker\\Record\\NestedRecord::getRootId", "doc": "&quot;Gets the ID of the root item in the tree&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\NestedRecord", "fromLink": "Windwalker/Record/NestedRecord.html", "link": "Windwalker/Record/NestedRecord.html#method_rebuild", "name": "Windwalker\\Record\\NestedRecord::rebuild", "doc": "&quot;Method to recursively rebuild the whole nested set tree.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\NestedRecord", "fromLink": "Windwalker/Record/NestedRecord.html", "link": "Windwalker/Record/NestedRecord.html#method_rebuildPath", "name": "Windwalker\\Record\\NestedRecord::rebuildPath", "doc": "&quot;Method to rebuild the node&#039;s path field from the alias values of the\nnodes from the current node to the root node of the tree.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\NestedRecord", "fromLink": "Windwalker/Record/NestedRecord.html", "link": "Windwalker/Record/NestedRecord.html#method_createRoot", "name": "Windwalker\\Record\\NestedRecord::createRoot", "doc": "&quot;createRoot&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\NestedRecord", "fromLink": "Windwalker/Record/NestedRecord.html", "link": "Windwalker/Record/NestedRecord.html#method_reset", "name": "Windwalker\\Record\\NestedRecord::reset", "doc": "&quot;Method to reset class properties to the defaults set in the class\ndefinition. It will ignore the primary key as well as any private class\nproperties (except $_errors).&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Record", "fromLink": "Windwalker/Record.html", "link": "Windwalker/Record/Record.html", "name": "Windwalker\\Record\\Record", "doc": "&quot;Class Record&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Record\\Record", "fromLink": "Windwalker/Record/Record.html", "link": "Windwalker/Record/Record.html#method___construct", "name": "Windwalker\\Record\\Record::__construct", "doc": "&quot;Object constructor to set table and key fields.  In most cases this will\nbe overridden by child classes to explicitly set the table and key fields\nfor a particular database table.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\Record", "fromLink": "Windwalker/Record/Record.html", "link": "Windwalker/Record/Record.html#method_save", "name": "Windwalker\\Record\\Record::save", "doc": "&quot;Method to provide a shortcut to binding, checking and storing a AbstractTable\ninstance to the database table.  The method will check a row in once the\ndata has been stored and if an ordering filter is present will attempt to\nreorder the table rows based on the filter.  The ordering filter is an instance\nproperty name.  The rows that will be reordered are those whose value matches\nthe AbstractTable instance for the property specified.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\Record", "fromLink": "Windwalker/Record/Record.html", "link": "Windwalker/Record/Record.html#method_bind", "name": "Windwalker\\Record\\Record::bind", "doc": "&quot;Method to bind an associative array or object to the AbstractTable instance.  This\nmethod only binds properties that are publicly accessible and optionally\ntakes an array of properties to ignore when binding.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\Record", "fromLink": "Windwalker/Record/Record.html", "link": "Windwalker/Record/Record.html#method_load", "name": "Windwalker\\Record\\Record::load", "doc": "&quot;Method to load a row from the database by primary key and bind the fields\nto the AbstractTable instance properties.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\Record", "fromLink": "Windwalker/Record/Record.html", "link": "Windwalker/Record/Record.html#method_delete", "name": "Windwalker\\Record\\Record::delete", "doc": "&quot;Method to delete a row from the database table by primary key value.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\Record", "fromLink": "Windwalker/Record/Record.html", "link": "Windwalker/Record/Record.html#method_validate", "name": "Windwalker\\Record\\Record::validate", "doc": "&quot;Method to perform sanity checks on the AbstractTable instance properties to ensure\nthey are safe to store in the database.  Child classes should override this\nmethod to make sure the data they are storing in the database is safe and\nas expected before storage.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\Record", "fromLink": "Windwalker/Record/Record.html", "link": "Windwalker/Record/Record.html#method_store", "name": "Windwalker\\Record\\Record::store", "doc": "&quot;Method to store a row in the database from the AbstractTable instance properties.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\Record", "fromLink": "Windwalker/Record/Record.html", "link": "Windwalker/Record/Record.html#method_create", "name": "Windwalker\\Record\\Record::create", "doc": "&quot;create&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\Record", "fromLink": "Windwalker/Record/Record.html", "link": "Windwalker/Record/Record.html#method_update", "name": "Windwalker\\Record\\Record::update", "doc": "&quot;update&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\Record", "fromLink": "Windwalker/Record/Record.html", "link": "Windwalker/Record/Record.html#method_getTableName", "name": "Windwalker\\Record\\Record::getTableName", "doc": "&quot;Get the table name.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\Record", "fromLink": "Windwalker/Record/Record.html", "link": "Windwalker/Record/Record.html#method_setTableName", "name": "Windwalker\\Record\\Record::setTableName", "doc": "&quot;Method to set property table&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\Record", "fromLink": "Windwalker/Record/Record.html", "link": "Windwalker/Record/Record.html#method_getFields", "name": "Windwalker\\Record\\Record::getFields", "doc": "&quot;loadFields&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\Record", "fromLink": "Windwalker/Record/Record.html", "link": "Windwalker/Record/Record.html#method_getKeyName", "name": "Windwalker\\Record\\Record::getKeyName", "doc": "&quot;Method to get the primary key field name for the table.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\Record", "fromLink": "Windwalker/Record/Record.html", "link": "Windwalker/Record/Record.html#method_hasPrimaryKey", "name": "Windwalker\\Record\\Record::hasPrimaryKey", "doc": "&quot;Validate that the primary key has been set.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\Record", "fromLink": "Windwalker/Record/Record.html", "link": "Windwalker/Record/Record.html#method_valueExists", "name": "Windwalker\\Record\\Record::valueExists", "doc": "&quot;Check a field value exists in database or not, to keep a field unique.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\Record", "fromLink": "Windwalker/Record/Record.html", "link": "Windwalker/Record/Record.html#method_triggerEvent", "name": "Windwalker\\Record\\Record::triggerEvent", "doc": "&quot;triggerEvent&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\Record", "fromLink": "Windwalker/Record/Record.html", "link": "Windwalker/Record/Record.html#method_getDispatcher", "name": "Windwalker\\Record\\Record::getDispatcher", "doc": "&quot;Method to get property Dispatcher&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\Record", "fromLink": "Windwalker/Record/Record.html", "link": "Windwalker/Record/Record.html#method_setDispatcher", "name": "Windwalker\\Record\\Record::setDispatcher", "doc": "&quot;Method to set property dispatcher&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\Record", "fromLink": "Windwalker/Record/Record.html", "link": "Windwalker/Record/Record.html#method_reset", "name": "Windwalker\\Record\\Record::reset", "doc": "&quot;Method to reset class properties to the defaults set in the class\ndefinition. It will ignore the primary key as well as any private class\nproperties.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\Record", "fromLink": "Windwalker/Record/Record.html", "link": "Windwalker/Record/Record.html#method_loadDefault", "name": "Windwalker\\Record\\Record::loadDefault", "doc": "&quot;loadDefault&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\Record", "fromLink": "Windwalker/Record/Record.html", "link": "Windwalker/Record/Record.html#method_getDataMapper", "name": "Windwalker\\Record\\Record::getDataMapper", "doc": "&quot;Method to get property Mapper&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Record\\Record", "fromLink": "Windwalker/Record/Record.html", "link": "Windwalker/Record/Record.html#method_setDataMapper", "name": "Windwalker\\Record\\Record::setDataMapper", "doc": "&quot;Method to set property mapper&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Renderer", "fromLink": "Windwalker/Renderer.html", "link": "Windwalker/Renderer/AbstractEngineRenderer.html", "name": "Windwalker\\Renderer\\AbstractEngineRenderer", "doc": "&quot;The AbstractEngineRenderer class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Renderer\\AbstractEngineRenderer", "fromLink": "Windwalker/Renderer/AbstractEngineRenderer.html", "link": "Windwalker/Renderer/AbstractEngineRenderer.html#method_getEngine", "name": "Windwalker\\Renderer\\AbstractEngineRenderer::getEngine", "doc": "&quot;Method to get property Engine&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\AbstractEngineRenderer", "fromLink": "Windwalker/Renderer/AbstractEngineRenderer.html", "link": "Windwalker/Renderer/AbstractEngineRenderer.html#method_setEngine", "name": "Windwalker\\Renderer\\AbstractEngineRenderer::setEngine", "doc": "&quot;Method to set property engine&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Renderer", "fromLink": "Windwalker/Renderer.html", "link": "Windwalker/Renderer/AbstractRenderer.html", "name": "Windwalker\\Renderer\\AbstractRenderer", "doc": "&quot;Class AbstractRenderer&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Renderer\\AbstractRenderer", "fromLink": "Windwalker/Renderer/AbstractRenderer.html", "link": "Windwalker/Renderer/AbstractRenderer.html#method___construct", "name": "Windwalker\\Renderer\\AbstractRenderer::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\AbstractRenderer", "fromLink": "Windwalker/Renderer/AbstractRenderer.html", "link": "Windwalker/Renderer/AbstractRenderer.html#method_escape", "name": "Windwalker\\Renderer\\AbstractRenderer::escape", "doc": "&quot;Method to escape output.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\AbstractRenderer", "fromLink": "Windwalker/Renderer/AbstractRenderer.html", "link": "Windwalker/Renderer/AbstractRenderer.html#method_findFile", "name": "Windwalker\\Renderer\\AbstractRenderer::findFile", "doc": "&quot;finFile&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\AbstractRenderer", "fromLink": "Windwalker/Renderer/AbstractRenderer.html", "link": "Windwalker/Renderer/AbstractRenderer.html#method_getPaths", "name": "Windwalker\\Renderer\\AbstractRenderer::getPaths", "doc": "&quot;getPaths&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\AbstractRenderer", "fromLink": "Windwalker/Renderer/AbstractRenderer.html", "link": "Windwalker/Renderer/AbstractRenderer.html#method_setPaths", "name": "Windwalker\\Renderer\\AbstractRenderer::setPaths", "doc": "&quot;setPaths&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\AbstractRenderer", "fromLink": "Windwalker/Renderer/AbstractRenderer.html", "link": "Windwalker/Renderer/AbstractRenderer.html#method_addPath", "name": "Windwalker\\Renderer\\AbstractRenderer::addPath", "doc": "&quot;addPath&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\AbstractRenderer", "fromLink": "Windwalker/Renderer/AbstractRenderer.html", "link": "Windwalker/Renderer/AbstractRenderer.html#method_dumpPaths", "name": "Windwalker\\Renderer\\AbstractRenderer::dumpPaths", "doc": "&quot;dumpPaths&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\AbstractRenderer", "fromLink": "Windwalker/Renderer/AbstractRenderer.html", "link": "Windwalker/Renderer/AbstractRenderer.html#method___get", "name": "Windwalker\\Renderer\\AbstractRenderer::__get", "doc": "&quot;__get&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Renderer", "fromLink": "Windwalker/Renderer.html", "link": "Windwalker/Renderer/BladeRenderer.html", "name": "Windwalker\\Renderer\\BladeRenderer", "doc": "&quot;The BladeRenderer class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Renderer\\BladeRenderer", "fromLink": "Windwalker/Renderer/BladeRenderer.html", "link": "Windwalker/Renderer/BladeRenderer.html#method_render", "name": "Windwalker\\Renderer\\BladeRenderer::render", "doc": "&quot;render&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\BladeRenderer", "fromLink": "Windwalker/Renderer/BladeRenderer.html", "link": "Windwalker/Renderer/BladeRenderer.html#method_getEngine", "name": "Windwalker\\Renderer\\BladeRenderer::getEngine", "doc": "&quot;Method to get property Blade&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\BladeRenderer", "fromLink": "Windwalker/Renderer/BladeRenderer.html", "link": "Windwalker/Renderer/BladeRenderer.html#method_setEngine", "name": "Windwalker\\Renderer\\BladeRenderer::setEngine", "doc": "&quot;Method to set property blade&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\BladeRenderer", "fromLink": "Windwalker/Renderer/BladeRenderer.html", "link": "Windwalker/Renderer/BladeRenderer.html#method_getFilesystem", "name": "Windwalker\\Renderer\\BladeRenderer::getFilesystem", "doc": "&quot;Method to get property Filesystem&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\BladeRenderer", "fromLink": "Windwalker/Renderer/BladeRenderer.html", "link": "Windwalker/Renderer/BladeRenderer.html#method_setFilesystem", "name": "Windwalker\\Renderer\\BladeRenderer::setFilesystem", "doc": "&quot;Method to set property filesystem&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\BladeRenderer", "fromLink": "Windwalker/Renderer/BladeRenderer.html", "link": "Windwalker/Renderer/BladeRenderer.html#method_getFinder", "name": "Windwalker\\Renderer\\BladeRenderer::getFinder", "doc": "&quot;Method to get property Finder&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\BladeRenderer", "fromLink": "Windwalker/Renderer/BladeRenderer.html", "link": "Windwalker/Renderer/BladeRenderer.html#method_setFinder", "name": "Windwalker\\Renderer\\BladeRenderer::setFinder", "doc": "&quot;Method to set property finder&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\BladeRenderer", "fromLink": "Windwalker/Renderer/BladeRenderer.html", "link": "Windwalker/Renderer/BladeRenderer.html#method_getResolver", "name": "Windwalker\\Renderer\\BladeRenderer::getResolver", "doc": "&quot;Method to get property Resolver&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\BladeRenderer", "fromLink": "Windwalker/Renderer/BladeRenderer.html", "link": "Windwalker/Renderer/BladeRenderer.html#method_setResolver", "name": "Windwalker\\Renderer\\BladeRenderer::setResolver", "doc": "&quot;Method to set property resolver&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\BladeRenderer", "fromLink": "Windwalker/Renderer/BladeRenderer.html", "link": "Windwalker/Renderer/BladeRenderer.html#method_getDispatcher", "name": "Windwalker\\Renderer\\BladeRenderer::getDispatcher", "doc": "&quot;Method to get property Dispatcher&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\BladeRenderer", "fromLink": "Windwalker/Renderer/BladeRenderer.html", "link": "Windwalker/Renderer/BladeRenderer.html#method_setDispatcher", "name": "Windwalker\\Renderer\\BladeRenderer::setDispatcher", "doc": "&quot;Method to set property dispatcher&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\BladeRenderer", "fromLink": "Windwalker/Renderer/BladeRenderer.html", "link": "Windwalker/Renderer/BladeRenderer.html#method_getCompiler", "name": "Windwalker\\Renderer\\BladeRenderer::getCompiler", "doc": "&quot;Method to get property Compiler&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\BladeRenderer", "fromLink": "Windwalker/Renderer/BladeRenderer.html", "link": "Windwalker/Renderer/BladeRenderer.html#method_setCompiler", "name": "Windwalker\\Renderer\\BladeRenderer::setCompiler", "doc": "&quot;Method to set property compiler&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\BladeRenderer", "fromLink": "Windwalker/Renderer/BladeRenderer.html", "link": "Windwalker/Renderer/BladeRenderer.html#method_addCustomCompiler", "name": "Windwalker\\Renderer\\BladeRenderer::addCustomCompiler", "doc": "&quot;addCustomCompiler&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\BladeRenderer", "fromLink": "Windwalker/Renderer/BladeRenderer.html", "link": "Windwalker/Renderer/BladeRenderer.html#method_getCustomCompilers", "name": "Windwalker\\Renderer\\BladeRenderer::getCustomCompilers", "doc": "&quot;Method to get property CustomCompiler&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\BladeRenderer", "fromLink": "Windwalker/Renderer/BladeRenderer.html", "link": "Windwalker/Renderer/BladeRenderer.html#method_setCustomCompilers", "name": "Windwalker\\Renderer\\BladeRenderer::setCustomCompilers", "doc": "&quot;Method to set property customCompiler&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Renderer\\Blade", "fromLink": "Windwalker/Renderer/Blade.html", "link": "Windwalker/Renderer/Blade/BladeExtending.html", "name": "Windwalker\\Renderer\\Blade\\BladeExtending", "doc": "&quot;The Extending class to support both Blade 4.* and 5.*.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Renderer\\Blade\\BladeExtending", "fromLink": "Windwalker/Renderer/Blade/BladeExtending.html", "link": "Windwalker/Renderer/Blade/BladeExtending.html#method_extend", "name": "Windwalker\\Renderer\\Blade\\BladeExtending::extend", "doc": "&quot;extend&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Renderer\\Blade", "fromLink": "Windwalker/Renderer/Blade.html", "link": "Windwalker/Renderer/Blade/GlobalContainer.html", "name": "Windwalker\\Renderer\\Blade\\GlobalContainer", "doc": "&quot;The GlobalContainer class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Renderer\\Blade\\GlobalContainer", "fromLink": "Windwalker/Renderer/Blade/GlobalContainer.html", "link": "Windwalker/Renderer/Blade/GlobalContainer.html#method_addCompiler", "name": "Windwalker\\Renderer\\Blade\\GlobalContainer::addCompiler", "doc": "&quot;addCompiler&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Blade\\GlobalContainer", "fromLink": "Windwalker/Renderer/Blade/GlobalContainer.html", "link": "Windwalker/Renderer/Blade/GlobalContainer.html#method_getCompiler", "name": "Windwalker\\Renderer\\Blade\\GlobalContainer::getCompiler", "doc": "&quot;getCompiler&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Blade\\GlobalContainer", "fromLink": "Windwalker/Renderer/Blade/GlobalContainer.html", "link": "Windwalker/Renderer/Blade/GlobalContainer.html#method_removeCompiler", "name": "Windwalker\\Renderer\\Blade\\GlobalContainer::removeCompiler", "doc": "&quot;removeCompiler&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Blade\\GlobalContainer", "fromLink": "Windwalker/Renderer/Blade/GlobalContainer.html", "link": "Windwalker/Renderer/Blade/GlobalContainer.html#method_getCompilers", "name": "Windwalker\\Renderer\\Blade\\GlobalContainer::getCompilers", "doc": "&quot;Method to get property Compilers&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Blade\\GlobalContainer", "fromLink": "Windwalker/Renderer/Blade/GlobalContainer.html", "link": "Windwalker/Renderer/Blade/GlobalContainer.html#method_setCompilers", "name": "Windwalker\\Renderer\\Blade\\GlobalContainer::setCompilers", "doc": "&quot;Method to set property extensions&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Blade\\GlobalContainer", "fromLink": "Windwalker/Renderer/Blade/GlobalContainer.html", "link": "Windwalker/Renderer/Blade/GlobalContainer.html#method_addExtension", "name": "Windwalker\\Renderer\\Blade\\GlobalContainer::addExtension", "doc": "&quot;addExtension&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Blade\\GlobalContainer", "fromLink": "Windwalker/Renderer/Blade/GlobalContainer.html", "link": "Windwalker/Renderer/Blade/GlobalContainer.html#method_getExtension", "name": "Windwalker\\Renderer\\Blade\\GlobalContainer::getExtension", "doc": "&quot;getExtension&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Blade\\GlobalContainer", "fromLink": "Windwalker/Renderer/Blade/GlobalContainer.html", "link": "Windwalker/Renderer/Blade/GlobalContainer.html#method_removeExtension", "name": "Windwalker\\Renderer\\Blade\\GlobalContainer::removeExtension", "doc": "&quot;removeExtension&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Blade\\GlobalContainer", "fromLink": "Windwalker/Renderer/Blade/GlobalContainer.html", "link": "Windwalker/Renderer/Blade/GlobalContainer.html#method_getExtensions", "name": "Windwalker\\Renderer\\Blade\\GlobalContainer::getExtensions", "doc": "&quot;Method to get property Extensions&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Blade\\GlobalContainer", "fromLink": "Windwalker/Renderer/Blade/GlobalContainer.html", "link": "Windwalker/Renderer/Blade/GlobalContainer.html#method_setExtensions", "name": "Windwalker\\Renderer\\Blade\\GlobalContainer::setExtensions", "doc": "&quot;Method to set property extensions&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Blade\\GlobalContainer", "fromLink": "Windwalker/Renderer/Blade/GlobalContainer.html", "link": "Windwalker/Renderer/Blade/GlobalContainer.html#method_getCachePath", "name": "Windwalker\\Renderer\\Blade\\GlobalContainer::getCachePath", "doc": "&quot;Method to get property CachePath&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Blade\\GlobalContainer", "fromLink": "Windwalker/Renderer/Blade/GlobalContainer.html", "link": "Windwalker/Renderer/Blade/GlobalContainer.html#method_setCachePath", "name": "Windwalker\\Renderer\\Blade\\GlobalContainer::setCachePath", "doc": "&quot;Method to set property cachePath&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Blade\\GlobalContainer", "fromLink": "Windwalker/Renderer/Blade/GlobalContainer.html", "link": "Windwalker/Renderer/Blade/GlobalContainer.html#method_getRawTags", "name": "Windwalker\\Renderer\\Blade\\GlobalContainer::getRawTags", "doc": "&quot;Method to get property RawTags&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Blade\\GlobalContainer", "fromLink": "Windwalker/Renderer/Blade/GlobalContainer.html", "link": "Windwalker/Renderer/Blade/GlobalContainer.html#method_setRawTags", "name": "Windwalker\\Renderer\\Blade\\GlobalContainer::setRawTags", "doc": "&quot;Method to set property rawTags&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Blade\\GlobalContainer", "fromLink": "Windwalker/Renderer/Blade/GlobalContainer.html", "link": "Windwalker/Renderer/Blade/GlobalContainer.html#method_getContentTags", "name": "Windwalker\\Renderer\\Blade\\GlobalContainer::getContentTags", "doc": "&quot;Method to get property ContentTags&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Blade\\GlobalContainer", "fromLink": "Windwalker/Renderer/Blade/GlobalContainer.html", "link": "Windwalker/Renderer/Blade/GlobalContainer.html#method_setContentTags", "name": "Windwalker\\Renderer\\Blade\\GlobalContainer::setContentTags", "doc": "&quot;Method to set property contentTags&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Blade\\GlobalContainer", "fromLink": "Windwalker/Renderer/Blade/GlobalContainer.html", "link": "Windwalker/Renderer/Blade/GlobalContainer.html#method_getEscapedTags", "name": "Windwalker\\Renderer\\Blade\\GlobalContainer::getEscapedTags", "doc": "&quot;Method to get property EscapedTags&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Blade\\GlobalContainer", "fromLink": "Windwalker/Renderer/Blade/GlobalContainer.html", "link": "Windwalker/Renderer/Blade/GlobalContainer.html#method_setEscapedTags", "name": "Windwalker\\Renderer\\Blade\\GlobalContainer::setEscapedTags", "doc": "&quot;Method to set property escapedTags&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Renderer", "fromLink": "Windwalker/Renderer.html", "link": "Windwalker/Renderer/EdgeRenderer.html", "name": "Windwalker\\Renderer\\EdgeRenderer", "doc": "&quot;The EdgeRenderer class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Renderer\\EdgeRenderer", "fromLink": "Windwalker/Renderer/EdgeRenderer.html", "link": "Windwalker/Renderer/EdgeRenderer.html#method_getEngine", "name": "Windwalker\\Renderer\\EdgeRenderer::getEngine", "doc": "&quot;Method to get property Engine&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\EdgeRenderer", "fromLink": "Windwalker/Renderer/EdgeRenderer.html", "link": "Windwalker/Renderer/EdgeRenderer.html#method_setEngine", "name": "Windwalker\\Renderer\\EdgeRenderer::setEngine", "doc": "&quot;Method to set property engine&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\EdgeRenderer", "fromLink": "Windwalker/Renderer/EdgeRenderer.html", "link": "Windwalker/Renderer/EdgeRenderer.html#method_render", "name": "Windwalker\\Renderer\\EdgeRenderer::render", "doc": "&quot;render&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\EdgeRenderer", "fromLink": "Windwalker/Renderer/EdgeRenderer.html", "link": "Windwalker/Renderer/EdgeRenderer.html#method_getCompiler", "name": "Windwalker\\Renderer\\EdgeRenderer::getCompiler", "doc": "&quot;Method to get property Compiler&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\EdgeRenderer", "fromLink": "Windwalker/Renderer/EdgeRenderer.html", "link": "Windwalker/Renderer/EdgeRenderer.html#method_setCompiler", "name": "Windwalker\\Renderer\\EdgeRenderer::setCompiler", "doc": "&quot;Method to set property compiler&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\EdgeRenderer", "fromLink": "Windwalker/Renderer/EdgeRenderer.html", "link": "Windwalker/Renderer/EdgeRenderer.html#method_getLoader", "name": "Windwalker\\Renderer\\EdgeRenderer::getLoader", "doc": "&quot;Method to get property Loader&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\EdgeRenderer", "fromLink": "Windwalker/Renderer/EdgeRenderer.html", "link": "Windwalker/Renderer/EdgeRenderer.html#method_setLoader", "name": "Windwalker\\Renderer\\EdgeRenderer::setLoader", "doc": "&quot;Method to set property loader&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\EdgeRenderer", "fromLink": "Windwalker/Renderer/EdgeRenderer.html", "link": "Windwalker/Renderer/EdgeRenderer.html#method_getCache", "name": "Windwalker\\Renderer\\EdgeRenderer::getCache", "doc": "&quot;Method to get property Cache&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\EdgeRenderer", "fromLink": "Windwalker/Renderer/EdgeRenderer.html", "link": "Windwalker/Renderer/EdgeRenderer.html#method_setCache", "name": "Windwalker\\Renderer\\EdgeRenderer::setCache", "doc": "&quot;Method to set property cache&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\EdgeRenderer", "fromLink": "Windwalker/Renderer/EdgeRenderer.html", "link": "Windwalker/Renderer/EdgeRenderer.html#method_getExtensions", "name": "Windwalker\\Renderer\\EdgeRenderer::getExtensions", "doc": "&quot;Method to get property Extensions&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\EdgeRenderer", "fromLink": "Windwalker/Renderer/EdgeRenderer.html", "link": "Windwalker/Renderer/EdgeRenderer.html#method_setExtensions", "name": "Windwalker\\Renderer\\EdgeRenderer::setExtensions", "doc": "&quot;Method to set property extensions&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\EdgeRenderer", "fromLink": "Windwalker/Renderer/EdgeRenderer.html", "link": "Windwalker/Renderer/EdgeRenderer.html#method_addExtension", "name": "Windwalker\\Renderer\\EdgeRenderer::addExtension", "doc": "&quot;addExtension&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Renderer\\Edge", "fromLink": "Windwalker/Renderer/Edge.html", "link": "Windwalker/Renderer/Edge/GlobalContainer.html", "name": "Windwalker\\Renderer\\Edge\\GlobalContainer", "doc": "&quot;The GlobalContainer class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Renderer\\Edge\\GlobalContainer", "fromLink": "Windwalker/Renderer/Edge/GlobalContainer.html", "link": "Windwalker/Renderer/Edge/GlobalContainer.html#method_addExtension", "name": "Windwalker\\Renderer\\Edge\\GlobalContainer::addExtension", "doc": "&quot;addExtension&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Edge\\GlobalContainer", "fromLink": "Windwalker/Renderer/Edge/GlobalContainer.html", "link": "Windwalker/Renderer/Edge/GlobalContainer.html#method_getExtension", "name": "Windwalker\\Renderer\\Edge\\GlobalContainer::getExtension", "doc": "&quot;getExtension&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Edge\\GlobalContainer", "fromLink": "Windwalker/Renderer/Edge/GlobalContainer.html", "link": "Windwalker/Renderer/Edge/GlobalContainer.html#method_removeExtension", "name": "Windwalker\\Renderer\\Edge\\GlobalContainer::removeExtension", "doc": "&quot;removeExtension&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Edge\\GlobalContainer", "fromLink": "Windwalker/Renderer/Edge/GlobalContainer.html", "link": "Windwalker/Renderer/Edge/GlobalContainer.html#method_getExtensions", "name": "Windwalker\\Renderer\\Edge\\GlobalContainer::getExtensions", "doc": "&quot;Method to get property Extensions&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Edge\\GlobalContainer", "fromLink": "Windwalker/Renderer/Edge/GlobalContainer.html", "link": "Windwalker/Renderer/Edge/GlobalContainer.html#method_setExtensions", "name": "Windwalker\\Renderer\\Edge\\GlobalContainer::setExtensions", "doc": "&quot;Method to set property extensions&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Edge\\GlobalContainer", "fromLink": "Windwalker/Renderer/Edge/GlobalContainer.html", "link": "Windwalker/Renderer/Edge/GlobalContainer.html#method_addGlobal", "name": "Windwalker\\Renderer\\Edge\\GlobalContainer::addGlobal", "doc": "&quot;setGlobal&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Edge\\GlobalContainer", "fromLink": "Windwalker/Renderer/Edge/GlobalContainer.html", "link": "Windwalker/Renderer/Edge/GlobalContainer.html#method_getGlobal", "name": "Windwalker\\Renderer\\Edge\\GlobalContainer::getGlobal", "doc": "&quot;getGlobal&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Edge\\GlobalContainer", "fromLink": "Windwalker/Renderer/Edge/GlobalContainer.html", "link": "Windwalker/Renderer/Edge/GlobalContainer.html#method_removeGlobal", "name": "Windwalker\\Renderer\\Edge\\GlobalContainer::removeGlobal", "doc": "&quot;removeGlobal&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Edge\\GlobalContainer", "fromLink": "Windwalker/Renderer/Edge/GlobalContainer.html", "link": "Windwalker/Renderer/Edge/GlobalContainer.html#method_getGlobals", "name": "Windwalker\\Renderer\\Edge\\GlobalContainer::getGlobals", "doc": "&quot;Method to get property Globals&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Edge\\GlobalContainer", "fromLink": "Windwalker/Renderer/Edge/GlobalContainer.html", "link": "Windwalker/Renderer/Edge/GlobalContainer.html#method_setGlobals", "name": "Windwalker\\Renderer\\Edge\\GlobalContainer::setGlobals", "doc": "&quot;Method to set property globals&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Edge\\GlobalContainer", "fromLink": "Windwalker/Renderer/Edge/GlobalContainer.html", "link": "Windwalker/Renderer/Edge/GlobalContainer.html#method_getRawTags", "name": "Windwalker\\Renderer\\Edge\\GlobalContainer::getRawTags", "doc": "&quot;Method to get property RawTags&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Edge\\GlobalContainer", "fromLink": "Windwalker/Renderer/Edge/GlobalContainer.html", "link": "Windwalker/Renderer/Edge/GlobalContainer.html#method_setRawTags", "name": "Windwalker\\Renderer\\Edge\\GlobalContainer::setRawTags", "doc": "&quot;Method to set property rawTags&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Edge\\GlobalContainer", "fromLink": "Windwalker/Renderer/Edge/GlobalContainer.html", "link": "Windwalker/Renderer/Edge/GlobalContainer.html#method_getContentTags", "name": "Windwalker\\Renderer\\Edge\\GlobalContainer::getContentTags", "doc": "&quot;Method to get property ContentTags&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Edge\\GlobalContainer", "fromLink": "Windwalker/Renderer/Edge/GlobalContainer.html", "link": "Windwalker/Renderer/Edge/GlobalContainer.html#method_setContentTags", "name": "Windwalker\\Renderer\\Edge\\GlobalContainer::setContentTags", "doc": "&quot;Method to set property contentTags&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Edge\\GlobalContainer", "fromLink": "Windwalker/Renderer/Edge/GlobalContainer.html", "link": "Windwalker/Renderer/Edge/GlobalContainer.html#method_getEscapedTags", "name": "Windwalker\\Renderer\\Edge\\GlobalContainer::getEscapedTags", "doc": "&quot;Method to get property EscapedTags&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Edge\\GlobalContainer", "fromLink": "Windwalker/Renderer/Edge/GlobalContainer.html", "link": "Windwalker/Renderer/Edge/GlobalContainer.html#method_setEscapedTags", "name": "Windwalker\\Renderer\\Edge\\GlobalContainer::setEscapedTags", "doc": "&quot;Method to set property escapedTags&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Renderer", "fromLink": "Windwalker/Renderer.html", "link": "Windwalker/Renderer/MustacheRenderer.html", "name": "Windwalker\\Renderer\\MustacheRenderer", "doc": "&quot;The MustacheRenderer class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Renderer\\MustacheRenderer", "fromLink": "Windwalker/Renderer/MustacheRenderer.html", "link": "Windwalker/Renderer/MustacheRenderer.html#method_render", "name": "Windwalker\\Renderer\\MustacheRenderer::render", "doc": "&quot;render&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\MustacheRenderer", "fromLink": "Windwalker/Renderer/MustacheRenderer.html", "link": "Windwalker/Renderer/MustacheRenderer.html#method_findFile", "name": "Windwalker\\Renderer\\MustacheRenderer::findFile", "doc": "&quot;findFile&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\MustacheRenderer", "fromLink": "Windwalker/Renderer/MustacheRenderer.html", "link": "Windwalker/Renderer/MustacheRenderer.html#method_getEngine", "name": "Windwalker\\Renderer\\MustacheRenderer::getEngine", "doc": "&quot;Method to get property Engine&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\MustacheRenderer", "fromLink": "Windwalker/Renderer/MustacheRenderer.html", "link": "Windwalker/Renderer/MustacheRenderer.html#method_setEngine", "name": "Windwalker\\Renderer\\MustacheRenderer::setEngine", "doc": "&quot;Method to set property engine&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\MustacheRenderer", "fromLink": "Windwalker/Renderer/MustacheRenderer.html", "link": "Windwalker/Renderer/MustacheRenderer.html#method_getLoader", "name": "Windwalker\\Renderer\\MustacheRenderer::getLoader", "doc": "&quot;Method to get property Loader&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\MustacheRenderer", "fromLink": "Windwalker/Renderer/MustacheRenderer.html", "link": "Windwalker/Renderer/MustacheRenderer.html#method_setLoader", "name": "Windwalker\\Renderer\\MustacheRenderer::setLoader", "doc": "&quot;Method to set property loader&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Renderer", "fromLink": "Windwalker/Renderer.html", "link": "Windwalker/Renderer/PhpRenderer.html", "name": "Windwalker\\Renderer\\PhpRenderer", "doc": "&quot;Class PhpRenderer&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Renderer\\PhpRenderer", "fromLink": "Windwalker/Renderer/PhpRenderer.html", "link": "Windwalker/Renderer/PhpRenderer.html#method_render", "name": "Windwalker\\Renderer\\PhpRenderer::render", "doc": "&quot;render&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\PhpRenderer", "fromLink": "Windwalker/Renderer/PhpRenderer.html", "link": "Windwalker/Renderer/PhpRenderer.html#method_findFile", "name": "Windwalker\\Renderer\\PhpRenderer::findFile", "doc": "&quot;finFile&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\PhpRenderer", "fromLink": "Windwalker/Renderer/PhpRenderer.html", "link": "Windwalker/Renderer/PhpRenderer.html#method_load", "name": "Windwalker\\Renderer\\PhpRenderer::load", "doc": "&quot;load&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\PhpRenderer", "fromLink": "Windwalker/Renderer/PhpRenderer.html", "link": "Windwalker/Renderer/PhpRenderer.html#method_parent", "name": "Windwalker\\Renderer\\PhpRenderer::parent", "doc": "&quot;getParent&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\PhpRenderer", "fromLink": "Windwalker/Renderer/PhpRenderer.html", "link": "Windwalker/Renderer/PhpRenderer.html#method_extend", "name": "Windwalker\\Renderer\\PhpRenderer::extend", "doc": "&quot;extend&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\PhpRenderer", "fromLink": "Windwalker/Renderer/PhpRenderer.html", "link": "Windwalker/Renderer/PhpRenderer.html#method_getBlock", "name": "Windwalker\\Renderer\\PhpRenderer::getBlock", "doc": "&quot;getBlock&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\PhpRenderer", "fromLink": "Windwalker/Renderer/PhpRenderer.html", "link": "Windwalker/Renderer/PhpRenderer.html#method_setBlock", "name": "Windwalker\\Renderer\\PhpRenderer::setBlock", "doc": "&quot;setBlock&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\PhpRenderer", "fromLink": "Windwalker/Renderer/PhpRenderer.html", "link": "Windwalker/Renderer/PhpRenderer.html#method_block", "name": "Windwalker\\Renderer\\PhpRenderer::block", "doc": "&quot;setBlock&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\PhpRenderer", "fromLink": "Windwalker/Renderer/PhpRenderer.html", "link": "Windwalker/Renderer/PhpRenderer.html#method_endblock", "name": "Windwalker\\Renderer\\PhpRenderer::endblock", "doc": "&quot;endblock&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\PhpRenderer", "fromLink": "Windwalker/Renderer/PhpRenderer.html", "link": "Windwalker/Renderer/PhpRenderer.html#method_getBlockQueue", "name": "Windwalker\\Renderer\\PhpRenderer::getBlockQueue", "doc": "&quot;getBlockQueue&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\PhpRenderer", "fromLink": "Windwalker/Renderer/PhpRenderer.html", "link": "Windwalker/Renderer/PhpRenderer.html#method_reset", "name": "Windwalker\\Renderer\\PhpRenderer::reset", "doc": "&quot;reset&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Renderer", "fromLink": "Windwalker/Renderer.html", "link": "Windwalker/Renderer/PlatesRenderer.html", "name": "Windwalker\\Renderer\\PlatesRenderer", "doc": "&quot;The PlatesRenderer class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Renderer\\PlatesRenderer", "fromLink": "Windwalker/Renderer/PlatesRenderer.html", "link": "Windwalker/Renderer/PlatesRenderer.html#method_getEngine", "name": "Windwalker\\Renderer\\PlatesRenderer::getEngine", "doc": "&quot;Method to get property Engine&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\PlatesRenderer", "fromLink": "Windwalker/Renderer/PlatesRenderer.html", "link": "Windwalker/Renderer/PlatesRenderer.html#method_setEngine", "name": "Windwalker\\Renderer\\PlatesRenderer::setEngine", "doc": "&quot;Method to set property engine&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\PlatesRenderer", "fromLink": "Windwalker/Renderer/PlatesRenderer.html", "link": "Windwalker/Renderer/PlatesRenderer.html#method_render", "name": "Windwalker\\Renderer\\PlatesRenderer::render", "doc": "&quot;render&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\PlatesRenderer", "fromLink": "Windwalker/Renderer/PlatesRenderer.html", "link": "Windwalker/Renderer/PlatesRenderer.html#method_findFile", "name": "Windwalker\\Renderer\\PlatesRenderer::findFile", "doc": "&quot;findFile&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\PlatesRenderer", "fromLink": "Windwalker/Renderer/PlatesRenderer.html", "link": "Windwalker/Renderer/PlatesRenderer.html#method_addExtension", "name": "Windwalker\\Renderer\\PlatesRenderer::addExtension", "doc": "&quot;addExtension&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\PlatesRenderer", "fromLink": "Windwalker/Renderer/PlatesRenderer.html", "link": "Windwalker/Renderer/PlatesRenderer.html#method_addFolder", "name": "Windwalker\\Renderer\\PlatesRenderer::addFolder", "doc": "&quot;addFolder&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Renderer", "fromLink": "Windwalker/Renderer.html", "link": "Windwalker/Renderer/RendererInterface.html", "name": "Windwalker\\Renderer\\RendererInterface", "doc": "&quot;Interface RendererInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Renderer\\RendererInterface", "fromLink": "Windwalker/Renderer/RendererInterface.html", "link": "Windwalker/Renderer/RendererInterface.html#method_render", "name": "Windwalker\\Renderer\\RendererInterface::render", "doc": "&quot;render&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\RendererInterface", "fromLink": "Windwalker/Renderer/RendererInterface.html", "link": "Windwalker/Renderer/RendererInterface.html#method_escape", "name": "Windwalker\\Renderer\\RendererInterface::escape", "doc": "&quot;Method to escape output.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Renderer", "fromLink": "Windwalker/Renderer.html", "link": "Windwalker/Renderer/TwigRenderer.html", "name": "Windwalker\\Renderer\\TwigRenderer", "doc": "&quot;Class PhpRenderer&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Renderer\\TwigRenderer", "fromLink": "Windwalker/Renderer/TwigRenderer.html", "link": "Windwalker/Renderer/TwigRenderer.html#method_render", "name": "Windwalker\\Renderer\\TwigRenderer::render", "doc": "&quot;render&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\TwigRenderer", "fromLink": "Windwalker/Renderer/TwigRenderer.html", "link": "Windwalker/Renderer/TwigRenderer.html#method_getLoader", "name": "Windwalker\\Renderer\\TwigRenderer::getLoader", "doc": "&quot;getLoader&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\TwigRenderer", "fromLink": "Windwalker/Renderer/TwigRenderer.html", "link": "Windwalker/Renderer/TwigRenderer.html#method_setLoader", "name": "Windwalker\\Renderer\\TwigRenderer::setLoader", "doc": "&quot;setLoader&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\TwigRenderer", "fromLink": "Windwalker/Renderer/TwigRenderer.html", "link": "Windwalker/Renderer/TwigRenderer.html#method_addExtension", "name": "Windwalker\\Renderer\\TwigRenderer::addExtension", "doc": "&quot;addExtension&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\TwigRenderer", "fromLink": "Windwalker/Renderer/TwigRenderer.html", "link": "Windwalker/Renderer/TwigRenderer.html#method_getEngine", "name": "Windwalker\\Renderer\\TwigRenderer::getEngine", "doc": "&quot;getTwig&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\TwigRenderer", "fromLink": "Windwalker/Renderer/TwigRenderer.html", "link": "Windwalker/Renderer/TwigRenderer.html#method_setEngine", "name": "Windwalker\\Renderer\\TwigRenderer::setEngine", "doc": "&quot;setTwig&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\TwigRenderer", "fromLink": "Windwalker/Renderer/TwigRenderer.html", "link": "Windwalker/Renderer/TwigRenderer.html#method_getDebugExtension", "name": "Windwalker\\Renderer\\TwigRenderer::getDebugExtension", "doc": "&quot;Method to get property DebugExtension&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\TwigRenderer", "fromLink": "Windwalker/Renderer/TwigRenderer.html", "link": "Windwalker/Renderer/TwigRenderer.html#method_setDebugExtension", "name": "Windwalker\\Renderer\\TwigRenderer::setDebugExtension", "doc": "&quot;Method to set property debugExtension&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\TwigRenderer", "fromLink": "Windwalker/Renderer/TwigRenderer.html", "link": "Windwalker/Renderer/TwigRenderer.html#method_getExtensions", "name": "Windwalker\\Renderer\\TwigRenderer::getExtensions", "doc": "&quot;Method to get property Extensions&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\TwigRenderer", "fromLink": "Windwalker/Renderer/TwigRenderer.html", "link": "Windwalker/Renderer/TwigRenderer.html#method_setExtensions", "name": "Windwalker\\Renderer\\TwigRenderer::setExtensions", "doc": "&quot;Method to set property extensions&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Renderer\\Twig", "fromLink": "Windwalker/Renderer/Twig.html", "link": "Windwalker/Renderer/Twig/GlobalContainer.html", "name": "Windwalker\\Renderer\\Twig\\GlobalContainer", "doc": "&quot;The GlobalContainer class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Renderer\\Twig\\GlobalContainer", "fromLink": "Windwalker/Renderer/Twig/GlobalContainer.html", "link": "Windwalker/Renderer/Twig/GlobalContainer.html#method_addExtension", "name": "Windwalker\\Renderer\\Twig\\GlobalContainer::addExtension", "doc": "&quot;addExtension&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Twig\\GlobalContainer", "fromLink": "Windwalker/Renderer/Twig/GlobalContainer.html", "link": "Windwalker/Renderer/Twig/GlobalContainer.html#method_getExtension", "name": "Windwalker\\Renderer\\Twig\\GlobalContainer::getExtension", "doc": "&quot;getExtension&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Twig\\GlobalContainer", "fromLink": "Windwalker/Renderer/Twig/GlobalContainer.html", "link": "Windwalker/Renderer/Twig/GlobalContainer.html#method_removeExtension", "name": "Windwalker\\Renderer\\Twig\\GlobalContainer::removeExtension", "doc": "&quot;removeExtension&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Twig\\GlobalContainer", "fromLink": "Windwalker/Renderer/Twig/GlobalContainer.html", "link": "Windwalker/Renderer/Twig/GlobalContainer.html#method_getExtensions", "name": "Windwalker\\Renderer\\Twig\\GlobalContainer::getExtensions", "doc": "&quot;Method to get property Extensions&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Twig\\GlobalContainer", "fromLink": "Windwalker/Renderer/Twig/GlobalContainer.html", "link": "Windwalker/Renderer/Twig/GlobalContainer.html#method_setExtensions", "name": "Windwalker\\Renderer\\Twig\\GlobalContainer::setExtensions", "doc": "&quot;Method to set property extensions&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Twig\\GlobalContainer", "fromLink": "Windwalker/Renderer/Twig/GlobalContainer.html", "link": "Windwalker/Renderer/Twig/GlobalContainer.html#method_addGlobal", "name": "Windwalker\\Renderer\\Twig\\GlobalContainer::addGlobal", "doc": "&quot;setGlobal&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Twig\\GlobalContainer", "fromLink": "Windwalker/Renderer/Twig/GlobalContainer.html", "link": "Windwalker/Renderer/Twig/GlobalContainer.html#method_getGlobal", "name": "Windwalker\\Renderer\\Twig\\GlobalContainer::getGlobal", "doc": "&quot;getGlobal&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Twig\\GlobalContainer", "fromLink": "Windwalker/Renderer/Twig/GlobalContainer.html", "link": "Windwalker/Renderer/Twig/GlobalContainer.html#method_removeGlobal", "name": "Windwalker\\Renderer\\Twig\\GlobalContainer::removeGlobal", "doc": "&quot;removeGlobal&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Twig\\GlobalContainer", "fromLink": "Windwalker/Renderer/Twig/GlobalContainer.html", "link": "Windwalker/Renderer/Twig/GlobalContainer.html#method_getGlobals", "name": "Windwalker\\Renderer\\Twig\\GlobalContainer::getGlobals", "doc": "&quot;Method to get property Globals&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Twig\\GlobalContainer", "fromLink": "Windwalker/Renderer/Twig/GlobalContainer.html", "link": "Windwalker/Renderer/Twig/GlobalContainer.html#method_setGlobals", "name": "Windwalker\\Renderer\\Twig\\GlobalContainer::setGlobals", "doc": "&quot;Method to set property globals&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Renderer\\Twig", "fromLink": "Windwalker/Renderer/Twig.html", "link": "Windwalker/Renderer/Twig/TwigFilesystemLoader.html", "name": "Windwalker\\Renderer\\Twig\\TwigFilesystemLoader", "doc": "&quot;The TwigFilesystemLoader class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Renderer\\Twig\\TwigFilesystemLoader", "fromLink": "Windwalker/Renderer/Twig/TwigFilesystemLoader.html", "link": "Windwalker/Renderer/Twig/TwigFilesystemLoader.html#method___construct", "name": "Windwalker\\Renderer\\Twig\\TwigFilesystemLoader::__construct", "doc": "&quot;TwigFilesystemLoader constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Twig\\TwigFilesystemLoader", "fromLink": "Windwalker/Renderer/Twig/TwigFilesystemLoader.html", "link": "Windwalker/Renderer/Twig/TwigFilesystemLoader.html#method_getSeparator", "name": "Windwalker\\Renderer\\Twig\\TwigFilesystemLoader::getSeparator", "doc": "&quot;Method to get property Separator&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Twig\\TwigFilesystemLoader", "fromLink": "Windwalker/Renderer/Twig/TwigFilesystemLoader.html", "link": "Windwalker/Renderer/Twig/TwigFilesystemLoader.html#method_setSeparator", "name": "Windwalker\\Renderer\\Twig\\TwigFilesystemLoader::setSeparator", "doc": "&quot;Method to set property separator&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Renderer\\Twig\\TwigFilesystemLoader", "fromLink": "Windwalker/Renderer/Twig/TwigFilesystemLoader.html", "link": "Windwalker/Renderer/Twig/TwigFilesystemLoader.html#method_addPath", "name": "Windwalker\\Renderer\\Twig\\TwigFilesystemLoader::addPath", "doc": "&quot;Adds a path where templates are stored.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Router\\Compiler", "fromLink": "Windwalker/Router/Compiler.html", "link": "Windwalker/Router/Compiler/BasicCompiler.html", "name": "Windwalker\\Router\\Compiler\\BasicCompiler", "doc": "&quot;The Compiler class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Router\\Compiler\\BasicCompiler", "fromLink": "Windwalker/Router/Compiler/BasicCompiler.html", "link": "Windwalker/Router/Compiler/BasicCompiler.html#method_compile", "name": "Windwalker\\Router\\Compiler\\BasicCompiler::compile", "doc": "&quot;compile&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Router\\Compiler", "fromLink": "Windwalker/Router/Compiler.html", "link": "Windwalker/Router/Compiler/BasicGenerator.html", "name": "Windwalker\\Router\\Compiler\\BasicGenerator", "doc": "&quot;The BasicGenerator class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Router\\Compiler\\BasicGenerator", "fromLink": "Windwalker/Router/Compiler/BasicGenerator.html", "link": "Windwalker/Router/Compiler/BasicGenerator.html#method_generate", "name": "Windwalker\\Router\\Compiler\\BasicGenerator::generate", "doc": "&quot;generate&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Router\\Compiler", "fromLink": "Windwalker/Router/Compiler.html", "link": "Windwalker/Router/Compiler/TrieCompiler.html", "name": "Windwalker\\Router\\Compiler\\TrieCompiler", "doc": "&quot;The TrieCompiler class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Router\\Compiler\\TrieCompiler", "fromLink": "Windwalker/Router/Compiler/TrieCompiler.html", "link": "Windwalker/Router/Compiler/TrieCompiler.html#method_compile", "name": "Windwalker\\Router\\Compiler\\TrieCompiler::compile", "doc": "&quot;compile&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Router\\Compiler", "fromLink": "Windwalker/Router/Compiler.html", "link": "Windwalker/Router/Compiler/TrieGenerator.html", "name": "Windwalker\\Router\\Compiler\\TrieGenerator", "doc": "&quot;The TrieGenerator class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Router\\Compiler\\TrieGenerator", "fromLink": "Windwalker/Router/Compiler/TrieGenerator.html", "link": "Windwalker/Router/Compiler/TrieGenerator.html#method_generate", "name": "Windwalker\\Router\\Compiler\\TrieGenerator::generate", "doc": "&quot;generate&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Router\\Exception", "fromLink": "Windwalker/Router/Exception.html", "link": "Windwalker/Router/Exception/RouteNotFoundException.html", "name": "Windwalker\\Router\\Exception\\RouteNotFoundException", "doc": "&quot;The RouteNotFoundException class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Router\\Exception\\RouteNotFoundException", "fromLink": "Windwalker/Router/Exception/RouteNotFoundException.html", "link": "Windwalker/Router/Exception/RouteNotFoundException.html#method___construct", "name": "Windwalker\\Router\\Exception\\RouteNotFoundException::__construct", "doc": "&quot;RouteNotFoundException constructor.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Router\\Matcher", "fromLink": "Windwalker/Router/Matcher.html", "link": "Windwalker/Router/Matcher/AbstractMatcher.html", "name": "Windwalker\\Router\\Matcher\\AbstractMatcher", "doc": "&quot;The AbstractMatcher class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Router\\Matcher\\AbstractMatcher", "fromLink": "Windwalker/Router/Matcher/AbstractMatcher.html", "link": "Windwalker/Router/Matcher/AbstractMatcher.html#method_build", "name": "Windwalker\\Router\\Matcher\\AbstractMatcher::build", "doc": "&quot;build&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Matcher\\AbstractMatcher", "fromLink": "Windwalker/Router/Matcher/AbstractMatcher.html", "link": "Windwalker/Router/Matcher/AbstractMatcher.html#method_match", "name": "Windwalker\\Router\\Matcher\\AbstractMatcher::match", "doc": "&quot;Match routes.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Matcher\\AbstractMatcher", "fromLink": "Windwalker/Router/Matcher/AbstractMatcher.html", "link": "Windwalker/Router/Matcher/AbstractMatcher.html#method_matchRoute", "name": "Windwalker\\Router\\Matcher\\AbstractMatcher::matchRoute", "doc": "&quot;Match routes.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Matcher\\AbstractMatcher", "fromLink": "Windwalker/Router/Matcher/AbstractMatcher.html", "link": "Windwalker/Router/Matcher/AbstractMatcher.html#method_setRoutes", "name": "Windwalker\\Router\\Matcher\\AbstractMatcher::setRoutes", "doc": "&quot;Set Routes&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Matcher\\AbstractMatcher", "fromLink": "Windwalker/Router/Matcher/AbstractMatcher.html", "link": "Windwalker/Router/Matcher/AbstractMatcher.html#method_getRouteMaps", "name": "Windwalker\\Router\\Matcher\\AbstractMatcher::getRouteMaps", "doc": "&quot;Method to get property RouteMaps&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Matcher\\AbstractMatcher", "fromLink": "Windwalker/Router/Matcher/AbstractMatcher.html", "link": "Windwalker/Router/Matcher/AbstractMatcher.html#method_setRouteMaps", "name": "Windwalker\\Router\\Matcher\\AbstractMatcher::setRouteMaps", "doc": "&quot;Method to set property routeMaps&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Matcher\\AbstractMatcher", "fromLink": "Windwalker/Router/Matcher/AbstractMatcher.html", "link": "Windwalker/Router/Matcher/AbstractMatcher.html#method_getCount", "name": "Windwalker\\Router\\Matcher\\AbstractMatcher::getCount", "doc": "&quot;Method to get property Count&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Matcher\\AbstractMatcher", "fromLink": "Windwalker/Router/Matcher/AbstractMatcher.html", "link": "Windwalker/Router/Matcher/AbstractMatcher.html#method_getDebug", "name": "Windwalker\\Router\\Matcher\\AbstractMatcher::getDebug", "doc": "&quot;Method to get property Debug&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Matcher\\AbstractMatcher", "fromLink": "Windwalker/Router/Matcher/AbstractMatcher.html", "link": "Windwalker/Router/Matcher/AbstractMatcher.html#method_setDebug", "name": "Windwalker\\Router\\Matcher\\AbstractMatcher::setDebug", "doc": "&quot;Method to set property debug&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Router\\Matcher", "fromLink": "Windwalker/Router/Matcher.html", "link": "Windwalker/Router/Matcher/BinaryMatcher.html", "name": "Windwalker\\Router\\Matcher\\BinaryMatcher", "doc": "&quot;The BinaryMatcher class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Router\\Matcher\\BinaryMatcher", "fromLink": "Windwalker/Router/Matcher/BinaryMatcher.html", "link": "Windwalker/Router/Matcher/BinaryMatcher.html#method_match", "name": "Windwalker\\Router\\Matcher\\BinaryMatcher::match", "doc": "&quot;Match routes.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Router\\Matcher", "fromLink": "Windwalker/Router/Matcher.html", "link": "Windwalker/Router/Matcher/MatcherInterface.html", "name": "Windwalker\\Router\\Matcher\\MatcherInterface", "doc": "&quot;Interface MatcherInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Router\\Matcher\\MatcherInterface", "fromLink": "Windwalker/Router/Matcher/MatcherInterface.html", "link": "Windwalker/Router/Matcher/MatcherInterface.html#method_match", "name": "Windwalker\\Router\\Matcher\\MatcherInterface::match", "doc": "&quot;Match routes.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Matcher\\MatcherInterface", "fromLink": "Windwalker/Router/Matcher/MatcherInterface.html", "link": "Windwalker/Router/Matcher/MatcherInterface.html#method_build", "name": "Windwalker\\Router\\Matcher\\MatcherInterface::build", "doc": "&quot;build&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Matcher\\MatcherInterface", "fromLink": "Windwalker/Router/Matcher/MatcherInterface.html", "link": "Windwalker/Router/Matcher/MatcherInterface.html#method_setRoutes", "name": "Windwalker\\Router\\Matcher\\MatcherInterface::setRoutes", "doc": "&quot;Set Routes&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Router\\Matcher", "fromLink": "Windwalker/Router/Matcher.html", "link": "Windwalker/Router/Matcher/SequentialMatcher.html", "name": "Windwalker\\Router\\Matcher\\SequentialMatcher", "doc": "&quot;The SequentialMatcher class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Router\\Matcher\\SequentialMatcher", "fromLink": "Windwalker/Router/Matcher/SequentialMatcher.html", "link": "Windwalker/Router/Matcher/SequentialMatcher.html#method_match", "name": "Windwalker\\Router\\Matcher\\SequentialMatcher::match", "doc": "&quot;Match routes.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Router\\Matcher", "fromLink": "Windwalker/Router/Matcher.html", "link": "Windwalker/Router/Matcher/TrieMatcher.html", "name": "Windwalker\\Router\\Matcher\\TrieMatcher", "doc": "&quot;The TrieMatcher class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Router\\Matcher\\TrieMatcher", "fromLink": "Windwalker/Router/Matcher/TrieMatcher.html", "link": "Windwalker/Router/Matcher/TrieMatcher.html#method_match", "name": "Windwalker\\Router\\Matcher\\TrieMatcher::match", "doc": "&quot;Match routes.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Matcher\\TrieMatcher", "fromLink": "Windwalker/Router/Matcher/TrieMatcher.html", "link": "Windwalker/Router/Matcher/TrieMatcher.html#method_clear", "name": "Windwalker\\Router\\Matcher\\TrieMatcher::clear", "doc": "&quot;clear&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Matcher\\TrieMatcher", "fromLink": "Windwalker/Router/Matcher/TrieMatcher.html", "link": "Windwalker/Router/Matcher/TrieMatcher.html#method_getTree", "name": "Windwalker\\Router\\Matcher\\TrieMatcher::getTree", "doc": "&quot;Method to get property Tree&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Matcher\\TrieMatcher", "fromLink": "Windwalker/Router/Matcher/TrieMatcher.html", "link": "Windwalker/Router/Matcher/TrieMatcher.html#method_setTree", "name": "Windwalker\\Router\\Matcher\\TrieMatcher::setTree", "doc": "&quot;Method to set property tree&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Router", "fromLink": "Windwalker/Router.html", "link": "Windwalker/Router/RestRouter.html", "name": "Windwalker\\Router\\RestRouter", "doc": "&quot;RESTful Web application router class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Router\\RestRouter", "fromLink": "Windwalker/Router/RestRouter.html", "link": "Windwalker/Router/RestRouter.html#method_isAllowCustomMethod", "name": "Windwalker\\Router\\RestRouter::isAllowCustomMethod", "doc": "&quot;Get the property to allow or not method in POST request&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\RestRouter", "fromLink": "Windwalker/Router/RestRouter.html", "link": "Windwalker/Router/RestRouter.html#method_setHttpMethodSuffix", "name": "Windwalker\\Router\\RestRouter::setHttpMethodSuffix", "doc": "&quot;Set a controller class suffix for a given HTTP method.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\RestRouter", "fromLink": "Windwalker/Router/RestRouter.html", "link": "Windwalker/Router/RestRouter.html#method_allowCustomMethod", "name": "Windwalker\\Router\\RestRouter::allowCustomMethod", "doc": "&quot;Set to allow or not method in POST request&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\RestRouter", "fromLink": "Windwalker/Router/RestRouter.html", "link": "Windwalker/Router/RestRouter.html#method_getCustomMethod", "name": "Windwalker\\Router\\RestRouter::getCustomMethod", "doc": "&quot;getCustomMethod&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\RestRouter", "fromLink": "Windwalker/Router/RestRouter.html", "link": "Windwalker/Router/RestRouter.html#method_setCustomMethod", "name": "Windwalker\\Router\\RestRouter::setCustomMethod", "doc": "&quot;setCustomMethod&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\RestRouter", "fromLink": "Windwalker/Router/RestRouter.html", "link": "Windwalker/Router/RestRouter.html#method_match", "name": "Windwalker\\Router\\RestRouter::match", "doc": "&quot;Parse the given route and return the name of a controller mapped to the given route.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Router", "fromLink": "Windwalker/Router.html", "link": "Windwalker/Router/Route.html", "name": "Windwalker\\Router\\Route", "doc": "&quot;Class Route&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method___construct", "name": "Windwalker\\Router\\Route::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method_getPattern", "name": "Windwalker\\Router\\Route::getPattern", "doc": "&quot;getPattern&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method_setPattern", "name": "Windwalker\\Router\\Route::setPattern", "doc": "&quot;setPattern&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method_getRegex", "name": "Windwalker\\Router\\Route::getRegex", "doc": "&quot;getRegex&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method_setRegex", "name": "Windwalker\\Router\\Route::setRegex", "doc": "&quot;setRegex&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method_getAllowMethods", "name": "Windwalker\\Router\\Route::getAllowMethods", "doc": "&quot;getMethod&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method_setAllowMethods", "name": "Windwalker\\Router\\Route::setAllowMethods", "doc": "&quot;setMethod&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method_getVariables", "name": "Windwalker\\Router\\Route::getVariables", "doc": "&quot;getVariables&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method_setVariables", "name": "Windwalker\\Router\\Route::setVariables", "doc": "&quot;setVariables&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method_getName", "name": "Windwalker\\Router\\Route::getName", "doc": "&quot;getName&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method_setName", "name": "Windwalker\\Router\\Route::setName", "doc": "&quot;setName&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method_getOptions", "name": "Windwalker\\Router\\Route::getOptions", "doc": "&quot;Method to get property Options&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method_setOptions", "name": "Windwalker\\Router\\Route::setOptions", "doc": "&quot;Method to set property options&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method_prepareOptions", "name": "Windwalker\\Router\\Route::prepareOptions", "doc": "&quot;prepareOptions&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method_getOption", "name": "Windwalker\\Router\\Route::getOption", "doc": "&quot;Method to get property Options&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method_setOption", "name": "Windwalker\\Router\\Route::setOption", "doc": "&quot;Method to set property options&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method_getSslPort", "name": "Windwalker\\Router\\Route::getSslPort", "doc": "&quot;Method to get property SslPort&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method_setSslPort", "name": "Windwalker\\Router\\Route::setSslPort", "doc": "&quot;Method to set property sslPort&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method_getPort", "name": "Windwalker\\Router\\Route::getPort", "doc": "&quot;Method to get property Port&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method_setPort", "name": "Windwalker\\Router\\Route::setPort", "doc": "&quot;Method to set property port&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method_getScheme", "name": "Windwalker\\Router\\Route::getScheme", "doc": "&quot;Method to get property Scheme&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method_setScheme", "name": "Windwalker\\Router\\Route::setScheme", "doc": "&quot;Method to set property scheme&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method_getHost", "name": "Windwalker\\Router\\Route::getHost", "doc": "&quot;Method to get property Host&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method_setHost", "name": "Windwalker\\Router\\Route::setHost", "doc": "&quot;Method to set property host&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method_getRequirements", "name": "Windwalker\\Router\\Route::getRequirements", "doc": "&quot;Method to get property Requirements&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method_setRequirements", "name": "Windwalker\\Router\\Route::setRequirements", "doc": "&quot;Method to set property requirements&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method_getSSL", "name": "Windwalker\\Router\\Route::getSSL", "doc": "&quot;Method to get property Ssl&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method_setSSL", "name": "Windwalker\\Router\\Route::setSSL", "doc": "&quot;Method to set property ssl&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method_getExtraValues", "name": "Windwalker\\Router\\Route::getExtraValues", "doc": "&quot;Method to get property Extra&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method_setExtraValues", "name": "Windwalker\\Router\\Route::setExtraValues", "doc": "&quot;Method to set property extra&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method_getExtra", "name": "Windwalker\\Router\\Route::getExtra", "doc": "&quot;getExtra&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method_setExtra", "name": "Windwalker\\Router\\Route::setExtra", "doc": "&quot;setExtra&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method_getIterator", "name": "Windwalker\\Router\\Route::getIterator", "doc": "&quot;Retrieve an external iterator&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Route", "fromLink": "Windwalker/Router/Route.html", "link": "Windwalker/Router/Route.html#method_getAllData", "name": "Windwalker\\Router\\Route::getAllData", "doc": "&quot;getAllData&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Router", "fromLink": "Windwalker/Router.html", "link": "Windwalker/Router/RouteHelper.html", "name": "Windwalker\\Router\\RouteHelper", "doc": "&quot;The RouteHelper class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Router\\RouteHelper", "fromLink": "Windwalker/Router/RouteHelper.html", "link": "Windwalker/Router/RouteHelper.html#method_sanitize", "name": "Windwalker\\Router\\RouteHelper::sanitize", "doc": "&quot;Sanitize and explode the pattern.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\RouteHelper", "fromLink": "Windwalker/Router/RouteHelper.html", "link": "Windwalker/Router/RouteHelper.html#method_normalise", "name": "Windwalker\\Router\\RouteHelper::normalise", "doc": "&quot;normalise&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\RouteHelper", "fromLink": "Windwalker/Router/RouteHelper.html", "link": "Windwalker/Router/RouteHelper.html#method_getVariables", "name": "Windwalker\\Router\\RouteHelper::getVariables", "doc": "&quot;Get variables from regex matched result.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\RouteHelper", "fromLink": "Windwalker/Router/RouteHelper.html", "link": "Windwalker/Router/RouteHelper.html#method_getEnvironment", "name": "Windwalker\\Router\\RouteHelper::getEnvironment", "doc": "&quot;getEnvironment&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Router", "fromLink": "Windwalker/Router.html", "link": "Windwalker/Router/Router.html", "name": "Windwalker\\Router\\Router", "doc": "&quot;A path router.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Router\\Router", "fromLink": "Windwalker/Router/Router.html", "link": "Windwalker/Router/Router.html#method___construct", "name": "Windwalker\\Router\\Router::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Router", "fromLink": "Windwalker/Router/Router.html", "link": "Windwalker/Router/Router.html#method_addMap", "name": "Windwalker\\Router\\Router::addMap", "doc": "&quot;addMap&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Router", "fromLink": "Windwalker/Router/Router.html", "link": "Windwalker/Router/Router.html#method_addMaps", "name": "Windwalker\\Router\\Router::addMaps", "doc": "&quot;addMaps&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Router", "fromLink": "Windwalker/Router/Router.html", "link": "Windwalker/Router/Router.html#method_addRoute", "name": "Windwalker\\Router\\Router::addRoute", "doc": "&quot;Add Route&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Router", "fromLink": "Windwalker/Router/Router.html", "link": "Windwalker/Router/Router.html#method_hasRoute", "name": "Windwalker\\Router\\Router::hasRoute", "doc": "&quot;hasRoute&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Router", "fromLink": "Windwalker/Router/Router.html", "link": "Windwalker/Router/Router.html#method_getRoute", "name": "Windwalker\\Router\\Router::getRoute", "doc": "&quot;getRoute&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Router", "fromLink": "Windwalker/Router/Router.html", "link": "Windwalker/Router/Router.html#method_addRoutes", "name": "Windwalker\\Router\\Router::addRoutes", "doc": "&quot;addRoutes&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Router", "fromLink": "Windwalker/Router/Router.html", "link": "Windwalker/Router/Router.html#method_group", "name": "Windwalker\\Router\\Router::group", "doc": "&quot;group&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Router", "fromLink": "Windwalker/Router/Router.html", "link": "Windwalker/Router/Router.html#method_match", "name": "Windwalker\\Router\\Router::match", "doc": "&quot;parseRoute&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Router", "fromLink": "Windwalker/Router/Router.html", "link": "Windwalker/Router/Router.html#method_build", "name": "Windwalker\\Router\\Router::build", "doc": "&quot;buildRoute&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Router", "fromLink": "Windwalker/Router/Router.html", "link": "Windwalker/Router/Router.html#method_getMatcher", "name": "Windwalker\\Router\\Router::getMatcher", "doc": "&quot;Method to get property Matcher&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Router", "fromLink": "Windwalker/Router/Router.html", "link": "Windwalker/Router/Router.html#method_setMatcher", "name": "Windwalker\\Router\\Router::setMatcher", "doc": "&quot;Method to set property matcher&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Router", "fromLink": "Windwalker/Router/Router.html", "link": "Windwalker/Router/Router.html#method_getRoutes", "name": "Windwalker\\Router\\Router::getRoutes", "doc": "&quot;Method to get property Routes&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\Router", "fromLink": "Windwalker/Router/Router.html", "link": "Windwalker/Router/Router.html#method_setRoutes", "name": "Windwalker\\Router\\Router::setRoutes", "doc": "&quot;Method to set property routes&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Router", "fromLink": "Windwalker/Router.html", "link": "Windwalker/Router/RouterInterface.html", "name": "Windwalker\\Router\\RouterInterface", "doc": "&quot;Interface RouterInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Router\\RouterInterface", "fromLink": "Windwalker/Router/RouterInterface.html", "link": "Windwalker/Router/RouterInterface.html#method_match", "name": "Windwalker\\Router\\RouterInterface::match", "doc": "&quot;match&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Router", "fromLink": "Windwalker/Router.html", "link": "Windwalker/Router/SingleActionRouter.html", "name": "Windwalker\\Router\\SingleActionRouter", "doc": "&quot;Class SingleActionRouter&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Router\\SingleActionRouter", "fromLink": "Windwalker/Router/SingleActionRouter.html", "link": "Windwalker/Router/SingleActionRouter.html#method___construct", "name": "Windwalker\\Router\\SingleActionRouter::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\SingleActionRouter", "fromLink": "Windwalker/Router/SingleActionRouter.html", "link": "Windwalker/Router/SingleActionRouter.html#method_addMap", "name": "Windwalker\\Router\\SingleActionRouter::addMap", "doc": "&quot;addRoute&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\SingleActionRouter", "fromLink": "Windwalker/Router/SingleActionRouter.html", "link": "Windwalker/Router/SingleActionRouter.html#method_match", "name": "Windwalker\\Router\\SingleActionRouter::match", "doc": "&quot;parseRoute&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\SingleActionRouter", "fromLink": "Windwalker/Router/SingleActionRouter.html", "link": "Windwalker/Router/SingleActionRouter.html#method_getVariables", "name": "Windwalker\\Router\\SingleActionRouter::getVariables", "doc": "&quot;getRequests&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Router\\SingleActionRouter", "fromLink": "Windwalker/Router/SingleActionRouter.html", "link": "Windwalker/Router/SingleActionRouter.html#method_setVariables", "name": "Windwalker\\Router\\SingleActionRouter::setVariables", "doc": "&quot;setRequests&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Session\\Bag", "fromLink": "Windwalker/Session/Bag.html", "link": "Windwalker/Session/Bag/ArrayBag.html", "name": "Windwalker\\Session\\Bag\\ArrayBag", "doc": "&quot;The ArrayBag class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\ArrayBag", "fromLink": "Windwalker/Session/Bag/ArrayBag.html", "link": "Windwalker/Session/Bag/ArrayBag.html#method_setData", "name": "Windwalker\\Session\\Bag\\ArrayBag::setData", "doc": "&quot;setData&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Session\\Bag", "fromLink": "Windwalker/Session/Bag.html", "link": "Windwalker/Session/Bag/AutoExpiredFlashBag.html", "name": "Windwalker\\Session\\Bag\\AutoExpiredFlashBag", "doc": "&quot;Class FlashBag&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\AutoExpiredFlashBag", "fromLink": "Windwalker/Session/Bag/AutoExpiredFlashBag.html", "link": "Windwalker/Session/Bag/AutoExpiredFlashBag.html#method_setData", "name": "Windwalker\\Session\\Bag\\AutoExpiredFlashBag::setData", "doc": "&quot;setData&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\AutoExpiredFlashBag", "fromLink": "Windwalker/Session/Bag/AutoExpiredFlashBag.html", "link": "Windwalker/Session/Bag/AutoExpiredFlashBag.html#method_add", "name": "Windwalker\\Session\\Bag\\AutoExpiredFlashBag::add", "doc": "&quot;add&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\AutoExpiredFlashBag", "fromLink": "Windwalker/Session/Bag/AutoExpiredFlashBag.html", "link": "Windwalker/Session/Bag/AutoExpiredFlashBag.html#method_takeAll", "name": "Windwalker\\Session\\Bag\\AutoExpiredFlashBag::takeAll", "doc": "&quot;Take all and clean.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\AutoExpiredFlashBag", "fromLink": "Windwalker/Session/Bag/AutoExpiredFlashBag.html", "link": "Windwalker/Session/Bag/AutoExpiredFlashBag.html#method_all", "name": "Windwalker\\Session\\Bag\\AutoExpiredFlashBag::all", "doc": "&quot;all&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\AutoExpiredFlashBag", "fromLink": "Windwalker/Session/Bag/AutoExpiredFlashBag.html", "link": "Windwalker/Session/Bag/AutoExpiredFlashBag.html#method_clear", "name": "Windwalker\\Session\\Bag\\AutoExpiredFlashBag::clear", "doc": "&quot;clean&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\AutoExpiredFlashBag", "fromLink": "Windwalker/Session/Bag/AutoExpiredFlashBag.html", "link": "Windwalker/Session/Bag/AutoExpiredFlashBag.html#method_getType", "name": "Windwalker\\Session\\Bag\\AutoExpiredFlashBag::getType", "doc": "&quot;getType&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Session\\Bag", "fromLink": "Windwalker/Session/Bag.html", "link": "Windwalker/Session/Bag/FlashBag.html", "name": "Windwalker\\Session\\Bag\\FlashBag", "doc": "&quot;Class FlashBag&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\FlashBag", "fromLink": "Windwalker/Session/Bag/FlashBag.html", "link": "Windwalker/Session/Bag/FlashBag.html#method_add", "name": "Windwalker\\Session\\Bag\\FlashBag::add", "doc": "&quot;add&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\FlashBag", "fromLink": "Windwalker/Session/Bag/FlashBag.html", "link": "Windwalker/Session/Bag/FlashBag.html#method_takeAll", "name": "Windwalker\\Session\\Bag\\FlashBag::takeAll", "doc": "&quot;Take all and clean.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\FlashBag", "fromLink": "Windwalker/Session/Bag/FlashBag.html", "link": "Windwalker/Session/Bag/FlashBag.html#method_getType", "name": "Windwalker\\Session\\Bag\\FlashBag::getType", "doc": "&quot;getType&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Session\\Bag", "fromLink": "Windwalker/Session/Bag.html", "link": "Windwalker/Session/Bag/FlashBagInterface.html", "name": "Windwalker\\Session\\Bag\\FlashBagInterface", "doc": "&quot;Interface FlasgBagInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\FlashBagInterface", "fromLink": "Windwalker/Session/Bag/FlashBagInterface.html", "link": "Windwalker/Session/Bag/FlashBagInterface.html#method_add", "name": "Windwalker\\Session\\Bag\\FlashBagInterface::add", "doc": "&quot;add&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\FlashBagInterface", "fromLink": "Windwalker/Session/Bag/FlashBagInterface.html", "link": "Windwalker/Session/Bag/FlashBagInterface.html#method_takeAll", "name": "Windwalker\\Session\\Bag\\FlashBagInterface::takeAll", "doc": "&quot;Take all and clean.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\FlashBagInterface", "fromLink": "Windwalker/Session/Bag/FlashBagInterface.html", "link": "Windwalker/Session/Bag/FlashBagInterface.html#method_getType", "name": "Windwalker\\Session\\Bag\\FlashBagInterface::getType", "doc": "&quot;getType&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Session\\Bag", "fromLink": "Windwalker/Session/Bag.html", "link": "Windwalker/Session/Bag/SessionBag.html", "name": "Windwalker\\Session\\Bag\\SessionBag", "doc": "&quot;Class AbstractSessionBag&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\SessionBag", "fromLink": "Windwalker/Session/Bag/SessionBag.html", "link": "Windwalker/Session/Bag/SessionBag.html#method_setData", "name": "Windwalker\\Session\\Bag\\SessionBag::setData", "doc": "&quot;setData&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\SessionBag", "fromLink": "Windwalker/Session/Bag/SessionBag.html", "link": "Windwalker/Session/Bag/SessionBag.html#method_get", "name": "Windwalker\\Session\\Bag\\SessionBag::get", "doc": "&quot;get&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\SessionBag", "fromLink": "Windwalker/Session/Bag/SessionBag.html", "link": "Windwalker/Session/Bag/SessionBag.html#method_set", "name": "Windwalker\\Session\\Bag\\SessionBag::set", "doc": "&quot;set&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\SessionBag", "fromLink": "Windwalker/Session/Bag/SessionBag.html", "link": "Windwalker/Session/Bag/SessionBag.html#method_has", "name": "Windwalker\\Session\\Bag\\SessionBag::has", "doc": "&quot;has&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\SessionBag", "fromLink": "Windwalker/Session/Bag/SessionBag.html", "link": "Windwalker/Session/Bag/SessionBag.html#method_all", "name": "Windwalker\\Session\\Bag\\SessionBag::all", "doc": "&quot;all&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\SessionBag", "fromLink": "Windwalker/Session/Bag/SessionBag.html", "link": "Windwalker/Session/Bag/SessionBag.html#method_clear", "name": "Windwalker\\Session\\Bag\\SessionBag::clear", "doc": "&quot;clean&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Session\\Bag", "fromLink": "Windwalker/Session/Bag.html", "link": "Windwalker/Session/Bag/SessionBagInterface.html", "name": "Windwalker\\Session\\Bag\\SessionBagInterface", "doc": "&quot;Interface SessionBagInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\SessionBagInterface", "fromLink": "Windwalker/Session/Bag/SessionBagInterface.html", "link": "Windwalker/Session/Bag/SessionBagInterface.html#method_setData", "name": "Windwalker\\Session\\Bag\\SessionBagInterface::setData", "doc": "&quot;setData&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\SessionBagInterface", "fromLink": "Windwalker/Session/Bag/SessionBagInterface.html", "link": "Windwalker/Session/Bag/SessionBagInterface.html#method_get", "name": "Windwalker\\Session\\Bag\\SessionBagInterface::get", "doc": "&quot;get&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\SessionBagInterface", "fromLink": "Windwalker/Session/Bag/SessionBagInterface.html", "link": "Windwalker/Session/Bag/SessionBagInterface.html#method_set", "name": "Windwalker\\Session\\Bag\\SessionBagInterface::set", "doc": "&quot;set&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\SessionBagInterface", "fromLink": "Windwalker/Session/Bag/SessionBagInterface.html", "link": "Windwalker/Session/Bag/SessionBagInterface.html#method_has", "name": "Windwalker\\Session\\Bag\\SessionBagInterface::has", "doc": "&quot;has&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\SessionBagInterface", "fromLink": "Windwalker/Session/Bag/SessionBagInterface.html", "link": "Windwalker/Session/Bag/SessionBagInterface.html#method_all", "name": "Windwalker\\Session\\Bag\\SessionBagInterface::all", "doc": "&quot;all&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bag\\SessionBagInterface", "fromLink": "Windwalker/Session/Bag/SessionBagInterface.html", "link": "Windwalker/Session/Bag/SessionBagInterface.html#method_clear", "name": "Windwalker\\Session\\Bag\\SessionBagInterface::clear", "doc": "&quot;clean&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Session\\Bridge", "fromLink": "Windwalker/Session/Bridge.html", "link": "Windwalker/Session/Bridge/NativeBridge.html", "name": "Windwalker\\Session\\Bridge\\NativeBridge", "doc": "&quot;The SessionBridge class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\NativeBridge", "fromLink": "Windwalker/Session/Bridge/NativeBridge.html", "link": "Windwalker/Session/Bridge/NativeBridge.html#method___construct", "name": "Windwalker\\Session\\Bridge\\NativeBridge::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\NativeBridge", "fromLink": "Windwalker/Session/Bridge/NativeBridge.html", "link": "Windwalker/Session/Bridge/NativeBridge.html#method_start", "name": "Windwalker\\Session\\Bridge\\NativeBridge::start", "doc": "&quot;Starts the session.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\NativeBridge", "fromLink": "Windwalker/Session/Bridge/NativeBridge.html", "link": "Windwalker/Session/Bridge/NativeBridge.html#method_isStarted", "name": "Windwalker\\Session\\Bridge\\NativeBridge::isStarted", "doc": "&quot;Checks if the session is started.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\NativeBridge", "fromLink": "Windwalker/Session/Bridge/NativeBridge.html", "link": "Windwalker/Session/Bridge/NativeBridge.html#method_getId", "name": "Windwalker\\Session\\Bridge\\NativeBridge::getId", "doc": "&quot;Returns the session ID&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\NativeBridge", "fromLink": "Windwalker/Session/Bridge/NativeBridge.html", "link": "Windwalker/Session/Bridge/NativeBridge.html#method_setId", "name": "Windwalker\\Session\\Bridge\\NativeBridge::setId", "doc": "&quot;Sets the session ID&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\NativeBridge", "fromLink": "Windwalker/Session/Bridge/NativeBridge.html", "link": "Windwalker/Session/Bridge/NativeBridge.html#method_getName", "name": "Windwalker\\Session\\Bridge\\NativeBridge::getName", "doc": "&quot;Returns the session name&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\NativeBridge", "fromLink": "Windwalker/Session/Bridge/NativeBridge.html", "link": "Windwalker/Session/Bridge/NativeBridge.html#method_setName", "name": "Windwalker\\Session\\Bridge\\NativeBridge::setName", "doc": "&quot;Sets the session name&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\NativeBridge", "fromLink": "Windwalker/Session/Bridge/NativeBridge.html", "link": "Windwalker/Session/Bridge/NativeBridge.html#method_restart", "name": "Windwalker\\Session\\Bridge\\NativeBridge::restart", "doc": "&quot;Regenerates id that represents this storage.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\NativeBridge", "fromLink": "Windwalker/Session/Bridge/NativeBridge.html", "link": "Windwalker/Session/Bridge/NativeBridge.html#method_regenerate", "name": "Windwalker\\Session\\Bridge\\NativeBridge::regenerate", "doc": "&quot;regenerate&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\NativeBridge", "fromLink": "Windwalker/Session/Bridge/NativeBridge.html", "link": "Windwalker/Session/Bridge/NativeBridge.html#method_save", "name": "Windwalker\\Session\\Bridge\\NativeBridge::save", "doc": "&quot;Force the session to be saved and closed.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\NativeBridge", "fromLink": "Windwalker/Session/Bridge/NativeBridge.html", "link": "Windwalker/Session/Bridge/NativeBridge.html#method_destroy", "name": "Windwalker\\Session\\Bridge\\NativeBridge::destroy", "doc": "&quot;Clear all session data in memory.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\NativeBridge", "fromLink": "Windwalker/Session/Bridge/NativeBridge.html", "link": "Windwalker/Session/Bridge/NativeBridge.html#method_getCookieParams", "name": "Windwalker\\Session\\Bridge\\NativeBridge::getCookieParams", "doc": "&quot;getCookieParams&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\NativeBridge", "fromLink": "Windwalker/Session/Bridge/NativeBridge.html", "link": "Windwalker/Session/Bridge/NativeBridge.html#method_setCookieParams", "name": "Windwalker\\Session\\Bridge\\NativeBridge::setCookieParams", "doc": "&quot;Set session cookie parameters, this method should call before session started.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\NativeBridge", "fromLink": "Windwalker/Session/Bridge/NativeBridge.html", "link": "Windwalker/Session/Bridge/NativeBridge.html#method_getStorage", "name": "Windwalker\\Session\\Bridge\\NativeBridge::getStorage", "doc": "&quot;getStorage&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Session\\Bridge", "fromLink": "Windwalker/Session/Bridge.html", "link": "Windwalker/Session/Bridge/SessionBridgeInterface.html", "name": "Windwalker\\Session\\Bridge\\SessionBridgeInterface", "doc": "&quot;Interface SessionBridgeInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\SessionBridgeInterface", "fromLink": "Windwalker/Session/Bridge/SessionBridgeInterface.html", "link": "Windwalker/Session/Bridge/SessionBridgeInterface.html#method_start", "name": "Windwalker\\Session\\Bridge\\SessionBridgeInterface::start", "doc": "&quot;Starts the session.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\SessionBridgeInterface", "fromLink": "Windwalker/Session/Bridge/SessionBridgeInterface.html", "link": "Windwalker/Session/Bridge/SessionBridgeInterface.html#method_isStarted", "name": "Windwalker\\Session\\Bridge\\SessionBridgeInterface::isStarted", "doc": "&quot;Checks if the session is started.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\SessionBridgeInterface", "fromLink": "Windwalker/Session/Bridge/SessionBridgeInterface.html", "link": "Windwalker/Session/Bridge/SessionBridgeInterface.html#method_getId", "name": "Windwalker\\Session\\Bridge\\SessionBridgeInterface::getId", "doc": "&quot;Returns the session ID&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\SessionBridgeInterface", "fromLink": "Windwalker/Session/Bridge/SessionBridgeInterface.html", "link": "Windwalker/Session/Bridge/SessionBridgeInterface.html#method_setId", "name": "Windwalker\\Session\\Bridge\\SessionBridgeInterface::setId", "doc": "&quot;Sets the session ID&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\SessionBridgeInterface", "fromLink": "Windwalker/Session/Bridge/SessionBridgeInterface.html", "link": "Windwalker/Session/Bridge/SessionBridgeInterface.html#method_getName", "name": "Windwalker\\Session\\Bridge\\SessionBridgeInterface::getName", "doc": "&quot;Returns the session name&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\SessionBridgeInterface", "fromLink": "Windwalker/Session/Bridge/SessionBridgeInterface.html", "link": "Windwalker/Session/Bridge/SessionBridgeInterface.html#method_setName", "name": "Windwalker\\Session\\Bridge\\SessionBridgeInterface::setName", "doc": "&quot;Sets the session name&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\SessionBridgeInterface", "fromLink": "Windwalker/Session/Bridge/SessionBridgeInterface.html", "link": "Windwalker/Session/Bridge/SessionBridgeInterface.html#method_restart", "name": "Windwalker\\Session\\Bridge\\SessionBridgeInterface::restart", "doc": "&quot;Regenerates id that represents this storage.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\SessionBridgeInterface", "fromLink": "Windwalker/Session/Bridge/SessionBridgeInterface.html", "link": "Windwalker/Session/Bridge/SessionBridgeInterface.html#method_regenerate", "name": "Windwalker\\Session\\Bridge\\SessionBridgeInterface::regenerate", "doc": "&quot;regenerate&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\SessionBridgeInterface", "fromLink": "Windwalker/Session/Bridge/SessionBridgeInterface.html", "link": "Windwalker/Session/Bridge/SessionBridgeInterface.html#method_save", "name": "Windwalker\\Session\\Bridge\\SessionBridgeInterface::save", "doc": "&quot;Force the session to be saved and closed.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\SessionBridgeInterface", "fromLink": "Windwalker/Session/Bridge/SessionBridgeInterface.html", "link": "Windwalker/Session/Bridge/SessionBridgeInterface.html#method_destroy", "name": "Windwalker\\Session\\Bridge\\SessionBridgeInterface::destroy", "doc": "&quot;Clear all session data in memory.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\SessionBridgeInterface", "fromLink": "Windwalker/Session/Bridge/SessionBridgeInterface.html", "link": "Windwalker/Session/Bridge/SessionBridgeInterface.html#method_getCookieParams", "name": "Windwalker\\Session\\Bridge\\SessionBridgeInterface::getCookieParams", "doc": "&quot;getCookieParams&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\SessionBridgeInterface", "fromLink": "Windwalker/Session/Bridge/SessionBridgeInterface.html", "link": "Windwalker/Session/Bridge/SessionBridgeInterface.html#method_setCookieParams", "name": "Windwalker\\Session\\Bridge\\SessionBridgeInterface::setCookieParams", "doc": "&quot;Set session cookie parameters, this method should call before session started.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Bridge\\SessionBridgeInterface", "fromLink": "Windwalker/Session/Bridge/SessionBridgeInterface.html", "link": "Windwalker/Session/Bridge/SessionBridgeInterface.html#method_getStorage", "name": "Windwalker\\Session\\Bridge\\SessionBridgeInterface::getStorage", "doc": "&quot;getStorage&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Session\\Database", "fromLink": "Windwalker/Session/Database.html", "link": "Windwalker/Session/Database/AbstractDatabaseAdapter.html", "name": "Windwalker\\Session\\Database\\AbstractDatabaseAdapter", "doc": "&quot;Class AbstractDatabaseAdapter&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Session\\Database\\AbstractDatabaseAdapter", "fromLink": "Windwalker/Session/Database/AbstractDatabaseAdapter.html", "link": "Windwalker/Session/Database/AbstractDatabaseAdapter.html#method___construct", "name": "Windwalker\\Session\\Database\\AbstractDatabaseAdapter::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Database\\AbstractDatabaseAdapter", "fromLink": "Windwalker/Session/Database/AbstractDatabaseAdapter.html", "link": "Windwalker/Session/Database/AbstractDatabaseAdapter.html#method_read", "name": "Windwalker\\Session\\Database\\AbstractDatabaseAdapter::read", "doc": "&quot;read&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Database\\AbstractDatabaseAdapter", "fromLink": "Windwalker/Session/Database/AbstractDatabaseAdapter.html", "link": "Windwalker/Session/Database/AbstractDatabaseAdapter.html#method_write", "name": "Windwalker\\Session\\Database\\AbstractDatabaseAdapter::write", "doc": "&quot;write&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Database\\AbstractDatabaseAdapter", "fromLink": "Windwalker/Session/Database/AbstractDatabaseAdapter.html", "link": "Windwalker/Session/Database/AbstractDatabaseAdapter.html#method_destroy", "name": "Windwalker\\Session\\Database\\AbstractDatabaseAdapter::destroy", "doc": "&quot;destroy&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Database\\AbstractDatabaseAdapter", "fromLink": "Windwalker/Session/Database/AbstractDatabaseAdapter.html", "link": "Windwalker/Session/Database/AbstractDatabaseAdapter.html#method_gc", "name": "Windwalker\\Session\\Database\\AbstractDatabaseAdapter::gc", "doc": "&quot;gc&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Database\\AbstractDatabaseAdapter", "fromLink": "Windwalker/Session/Database/AbstractDatabaseAdapter.html", "link": "Windwalker/Session/Database/AbstractDatabaseAdapter.html#method_getDb", "name": "Windwalker\\Session\\Database\\AbstractDatabaseAdapter::getDb", "doc": "&quot;getDb&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Database\\AbstractDatabaseAdapter", "fromLink": "Windwalker/Session/Database/AbstractDatabaseAdapter.html", "link": "Windwalker/Session/Database/AbstractDatabaseAdapter.html#method_setDb", "name": "Windwalker\\Session\\Database\\AbstractDatabaseAdapter::setDb", "doc": "&quot;setDb&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Session\\Database", "fromLink": "Windwalker/Session/Database.html", "link": "Windwalker/Session/Database/JoomlaAdapter.html", "name": "Windwalker\\Session\\Database\\JoomlaAdapter", "doc": "&quot;Class DatabaseAdapter&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Session\\Database\\JoomlaAdapter", "fromLink": "Windwalker/Session/Database/JoomlaAdapter.html", "link": "Windwalker/Session/Database/JoomlaAdapter.html#method___construct", "name": "Windwalker\\Session\\Database\\JoomlaAdapter::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Database\\JoomlaAdapter", "fromLink": "Windwalker/Session/Database/JoomlaAdapter.html", "link": "Windwalker/Session/Database/JoomlaAdapter.html#method_read", "name": "Windwalker\\Session\\Database\\JoomlaAdapter::read", "doc": "&quot;read&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Database\\JoomlaAdapter", "fromLink": "Windwalker/Session/Database/JoomlaAdapter.html", "link": "Windwalker/Session/Database/JoomlaAdapter.html#method_write", "name": "Windwalker\\Session\\Database\\JoomlaAdapter::write", "doc": "&quot;write&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Database\\JoomlaAdapter", "fromLink": "Windwalker/Session/Database/JoomlaAdapter.html", "link": "Windwalker/Session/Database/JoomlaAdapter.html#method_destroy", "name": "Windwalker\\Session\\Database\\JoomlaAdapter::destroy", "doc": "&quot;destroy&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Database\\JoomlaAdapter", "fromLink": "Windwalker/Session/Database/JoomlaAdapter.html", "link": "Windwalker/Session/Database/JoomlaAdapter.html#method_gc", "name": "Windwalker\\Session\\Database\\JoomlaAdapter::gc", "doc": "&quot;gc&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Session\\Database", "fromLink": "Windwalker/Session/Database.html", "link": "Windwalker/Session/Database/PdoAdapter.html", "name": "Windwalker\\Session\\Database\\PdoAdapter", "doc": "&quot;Class PdoAdapter&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Session\\Database\\PdoAdapter", "fromLink": "Windwalker/Session/Database/PdoAdapter.html", "link": "Windwalker/Session/Database/PdoAdapter.html#method___construct", "name": "Windwalker\\Session\\Database\\PdoAdapter::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Database\\PdoAdapter", "fromLink": "Windwalker/Session/Database/PdoAdapter.html", "link": "Windwalker/Session/Database/PdoAdapter.html#method_destroy", "name": "Windwalker\\Session\\Database\\PdoAdapter::destroy", "doc": "&quot;destroy&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Database\\PdoAdapter", "fromLink": "Windwalker/Session/Database/PdoAdapter.html", "link": "Windwalker/Session/Database/PdoAdapter.html#method_gc", "name": "Windwalker\\Session\\Database\\PdoAdapter::gc", "doc": "&quot;gc&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Database\\PdoAdapter", "fromLink": "Windwalker/Session/Database/PdoAdapter.html", "link": "Windwalker/Session/Database/PdoAdapter.html#method_read", "name": "Windwalker\\Session\\Database\\PdoAdapter::read", "doc": "&quot;read&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Database\\PdoAdapter", "fromLink": "Windwalker/Session/Database/PdoAdapter.html", "link": "Windwalker/Session/Database/PdoAdapter.html#method_write", "name": "Windwalker\\Session\\Database\\PdoAdapter::write", "doc": "&quot;write&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Session\\Database", "fromLink": "Windwalker/Session/Database.html", "link": "Windwalker/Session/Database/WindwalkerAdapter.html", "name": "Windwalker\\Session\\Database\\WindwalkerAdapter", "doc": "&quot;The WindwalkerAdapter class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Session\\Database\\WindwalkerAdapter", "fromLink": "Windwalker/Session/Database/WindwalkerAdapter.html", "link": "Windwalker/Session/Database/WindwalkerAdapter.html#method___construct", "name": "Windwalker\\Session\\Database\\WindwalkerAdapter::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Database\\WindwalkerAdapter", "fromLink": "Windwalker/Session/Database/WindwalkerAdapter.html", "link": "Windwalker/Session/Database/WindwalkerAdapter.html#method_read", "name": "Windwalker\\Session\\Database\\WindwalkerAdapter::read", "doc": "&quot;read&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Database\\WindwalkerAdapter", "fromLink": "Windwalker/Session/Database/WindwalkerAdapter.html", "link": "Windwalker/Session/Database/WindwalkerAdapter.html#method_write", "name": "Windwalker\\Session\\Database\\WindwalkerAdapter::write", "doc": "&quot;write&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Database\\WindwalkerAdapter", "fromLink": "Windwalker/Session/Database/WindwalkerAdapter.html", "link": "Windwalker/Session/Database/WindwalkerAdapter.html#method_destroy", "name": "Windwalker\\Session\\Database\\WindwalkerAdapter::destroy", "doc": "&quot;destroy&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Database\\WindwalkerAdapter", "fromLink": "Windwalker/Session/Database/WindwalkerAdapter.html", "link": "Windwalker/Session/Database/WindwalkerAdapter.html#method_gc", "name": "Windwalker\\Session\\Database\\WindwalkerAdapter::gc", "doc": "&quot;gc&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Session\\Handler", "fromLink": "Windwalker/Session/Handler.html", "link": "Windwalker/Session/Handler/AbstractHandler.html", "name": "Windwalker\\Session\\Handler\\AbstractHandler", "doc": "&quot;Class AbstractHandler&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\AbstractHandler", "fromLink": "Windwalker/Session/Handler/AbstractHandler.html", "link": "Windwalker/Session/Handler/AbstractHandler.html#method___construct", "name": "Windwalker\\Session\\Handler\\AbstractHandler::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\AbstractHandler", "fromLink": "Windwalker/Session/Handler/AbstractHandler.html", "link": "Windwalker/Session/Handler/AbstractHandler.html#method_register", "name": "Windwalker\\Session\\Handler\\AbstractHandler::register", "doc": "&quot;register&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Session\\Handler", "fromLink": "Windwalker/Session/Handler.html", "link": "Windwalker/Session/Handler/ApcHandler.html", "name": "Windwalker\\Session\\Handler\\ApcHandler", "doc": "&quot;APC session storage handler for PHP&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\ApcHandler", "fromLink": "Windwalker/Session/Handler/ApcHandler.html", "link": "Windwalker/Session/Handler/ApcHandler.html#method___construct", "name": "Windwalker\\Session\\Handler\\ApcHandler::__construct", "doc": "&quot;Constructor&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\ApcHandler", "fromLink": "Windwalker/Session/Handler/ApcHandler.html", "link": "Windwalker/Session/Handler/ApcHandler.html#method_isSupported", "name": "Windwalker\\Session\\Handler\\ApcHandler::isSupported", "doc": "&quot;Test to see if the SessionHandler is available.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\ApcHandler", "fromLink": "Windwalker/Session/Handler/ApcHandler.html", "link": "Windwalker/Session/Handler/ApcHandler.html#method_read", "name": "Windwalker\\Session\\Handler\\ApcHandler::read", "doc": "&quot;Read the data for a particular session identifier from the\nSessionHandler backend.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\ApcHandler", "fromLink": "Windwalker/Session/Handler/ApcHandler.html", "link": "Windwalker/Session/Handler/ApcHandler.html#method_write", "name": "Windwalker\\Session\\Handler\\ApcHandler::write", "doc": "&quot;Write session data to the SessionHandler backend.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\ApcHandler", "fromLink": "Windwalker/Session/Handler/ApcHandler.html", "link": "Windwalker/Session/Handler/ApcHandler.html#method_destroy", "name": "Windwalker\\Session\\Handler\\ApcHandler::destroy", "doc": "&quot;Destroy the data for a particular session identifier in the SessionHandler backend.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\ApcHandler", "fromLink": "Windwalker/Session/Handler/ApcHandler.html", "link": "Windwalker/Session/Handler/ApcHandler.html#method_gc", "name": "Windwalker\\Session\\Handler\\ApcHandler::gc", "doc": "&quot;PHP &gt;= 5.4.0&lt;br\/&gt;\nCleanup old sessions&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\ApcHandler", "fromLink": "Windwalker/Session/Handler/ApcHandler.html", "link": "Windwalker/Session/Handler/ApcHandler.html#method_open", "name": "Windwalker\\Session\\Handler\\ApcHandler::open", "doc": "&quot;Re-initializes existing session, or creates a new one.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\ApcHandler", "fromLink": "Windwalker/Session/Handler/ApcHandler.html", "link": "Windwalker/Session/Handler/ApcHandler.html#method_close", "name": "Windwalker\\Session\\Handler\\ApcHandler::close", "doc": "&quot;Closes the current session.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Session\\Handler", "fromLink": "Windwalker/Session/Handler.html", "link": "Windwalker/Session/Handler/DatabaseHandler.html", "name": "Windwalker\\Session\\Handler\\DatabaseHandler", "doc": "&quot;Database session storage handler for PHP&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\DatabaseHandler", "fromLink": "Windwalker/Session/Handler/DatabaseHandler.html", "link": "Windwalker/Session/Handler/DatabaseHandler.html#method___construct", "name": "Windwalker\\Session\\Handler\\DatabaseHandler::__construct", "doc": "&quot;Constructor&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\DatabaseHandler", "fromLink": "Windwalker/Session/Handler/DatabaseHandler.html", "link": "Windwalker/Session/Handler/DatabaseHandler.html#method_open", "name": "Windwalker\\Session\\Handler\\DatabaseHandler::open", "doc": "&quot;Re-initializes existing session, or creates a new one.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\DatabaseHandler", "fromLink": "Windwalker/Session/Handler/DatabaseHandler.html", "link": "Windwalker/Session/Handler/DatabaseHandler.html#method_close", "name": "Windwalker\\Session\\Handler\\DatabaseHandler::close", "doc": "&quot;Closes the current session.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\DatabaseHandler", "fromLink": "Windwalker/Session/Handler/DatabaseHandler.html", "link": "Windwalker/Session/Handler/DatabaseHandler.html#method_read", "name": "Windwalker\\Session\\Handler\\DatabaseHandler::read", "doc": "&quot;Read the data for a particular session identifier from the SessionHandler backend.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\DatabaseHandler", "fromLink": "Windwalker/Session/Handler/DatabaseHandler.html", "link": "Windwalker/Session/Handler/DatabaseHandler.html#method_write", "name": "Windwalker\\Session\\Handler\\DatabaseHandler::write", "doc": "&quot;Write session data to the SessionHandler backend.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\DatabaseHandler", "fromLink": "Windwalker/Session/Handler/DatabaseHandler.html", "link": "Windwalker/Session/Handler/DatabaseHandler.html#method_destroy", "name": "Windwalker\\Session\\Handler\\DatabaseHandler::destroy", "doc": "&quot;Destroy the data for a particular session identifier in the SessionHandler backend.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\DatabaseHandler", "fromLink": "Windwalker/Session/Handler/DatabaseHandler.html", "link": "Windwalker/Session/Handler/DatabaseHandler.html#method_gc", "name": "Windwalker\\Session\\Handler\\DatabaseHandler::gc", "doc": "&quot;Garbage collect stale sessions from the SessionHandler backend.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\DatabaseHandler", "fromLink": "Windwalker/Session/Handler/DatabaseHandler.html", "link": "Windwalker/Session/Handler/DatabaseHandler.html#method_isSupported", "name": "Windwalker\\Session\\Handler\\DatabaseHandler::isSupported", "doc": "&quot;isSupported&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Session\\Handler", "fromLink": "Windwalker/Session/Handler.html", "link": "Windwalker/Session/Handler/HandlerInterface.html", "name": "Windwalker\\Session\\Handler\\HandlerInterface", "doc": "&quot;Interface HandlerInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\HandlerInterface", "fromLink": "Windwalker/Session/Handler/HandlerInterface.html", "link": "Windwalker/Session/Handler/HandlerInterface.html#method_isSupported", "name": "Windwalker\\Session\\Handler\\HandlerInterface::isSupported", "doc": "&quot;isSupported&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\HandlerInterface", "fromLink": "Windwalker/Session/Handler/HandlerInterface.html", "link": "Windwalker/Session/Handler/HandlerInterface.html#method_register", "name": "Windwalker\\Session\\Handler\\HandlerInterface::register", "doc": "&quot;register&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Session\\Handler", "fromLink": "Windwalker/Session/Handler.html", "link": "Windwalker/Session/Handler/MemcacheHandler.html", "name": "Windwalker\\Session\\Handler\\MemcacheHandler", "doc": "&quot;Class MemcacheHandler&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\MemcacheHandler", "fromLink": "Windwalker/Session/Handler/MemcacheHandler.html", "link": "Windwalker/Session/Handler/MemcacheHandler.html#method___construct", "name": "Windwalker\\Session\\Handler\\MemcacheHandler::__construct", "doc": "&quot;Constructor&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\MemcacheHandler", "fromLink": "Windwalker/Session/Handler/MemcacheHandler.html", "link": "Windwalker/Session/Handler/MemcacheHandler.html#method_isSupported", "name": "Windwalker\\Session\\Handler\\MemcacheHandler::isSupported", "doc": "&quot;Test to see if the SessionHandler is available.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\MemcacheHandler", "fromLink": "Windwalker/Session/Handler/MemcacheHandler.html", "link": "Windwalker/Session/Handler/MemcacheHandler.html#method_open", "name": "Windwalker\\Session\\Handler\\MemcacheHandler::open", "doc": "&quot;open&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\MemcacheHandler", "fromLink": "Windwalker/Session/Handler/MemcacheHandler.html", "link": "Windwalker/Session/Handler/MemcacheHandler.html#method_close", "name": "Windwalker\\Session\\Handler\\MemcacheHandler::close", "doc": "&quot;close&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\MemcacheHandler", "fromLink": "Windwalker/Session/Handler/MemcacheHandler.html", "link": "Windwalker/Session/Handler/MemcacheHandler.html#method_read", "name": "Windwalker\\Session\\Handler\\MemcacheHandler::read", "doc": "&quot;read&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\MemcacheHandler", "fromLink": "Windwalker/Session/Handler/MemcacheHandler.html", "link": "Windwalker/Session/Handler/MemcacheHandler.html#method_write", "name": "Windwalker\\Session\\Handler\\MemcacheHandler::write", "doc": "&quot;write&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\MemcacheHandler", "fromLink": "Windwalker/Session/Handler/MemcacheHandler.html", "link": "Windwalker/Session/Handler/MemcacheHandler.html#method_destroy", "name": "Windwalker\\Session\\Handler\\MemcacheHandler::destroy", "doc": "&quot;destroy&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\MemcacheHandler", "fromLink": "Windwalker/Session/Handler/MemcacheHandler.html", "link": "Windwalker/Session/Handler/MemcacheHandler.html#method_gc", "name": "Windwalker\\Session\\Handler\\MemcacheHandler::gc", "doc": "&quot;gc&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Session\\Handler", "fromLink": "Windwalker/Session/Handler.html", "link": "Windwalker/Session/Handler/MemcachedHandler.html", "name": "Windwalker\\Session\\Handler\\MemcachedHandler", "doc": "&quot;Class MemcachedHandler&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\MemcachedHandler", "fromLink": "Windwalker/Session/Handler/MemcachedHandler.html", "link": "Windwalker/Session/Handler/MemcachedHandler.html#method___construct", "name": "Windwalker\\Session\\Handler\\MemcachedHandler::__construct", "doc": "&quot;Constructor&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\MemcachedHandler", "fromLink": "Windwalker/Session/Handler/MemcachedHandler.html", "link": "Windwalker/Session/Handler/MemcachedHandler.html#method_isSupported", "name": "Windwalker\\Session\\Handler\\MemcachedHandler::isSupported", "doc": "&quot;Test to see if the SessionHandler is available.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\MemcachedHandler", "fromLink": "Windwalker/Session/Handler/MemcachedHandler.html", "link": "Windwalker/Session/Handler/MemcachedHandler.html#method_open", "name": "Windwalker\\Session\\Handler\\MemcachedHandler::open", "doc": "&quot;open&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\MemcachedHandler", "fromLink": "Windwalker/Session/Handler/MemcachedHandler.html", "link": "Windwalker/Session/Handler/MemcachedHandler.html#method_close", "name": "Windwalker\\Session\\Handler\\MemcachedHandler::close", "doc": "&quot;close&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\MemcachedHandler", "fromLink": "Windwalker/Session/Handler/MemcachedHandler.html", "link": "Windwalker/Session/Handler/MemcachedHandler.html#method_read", "name": "Windwalker\\Session\\Handler\\MemcachedHandler::read", "doc": "&quot;read&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\MemcachedHandler", "fromLink": "Windwalker/Session/Handler/MemcachedHandler.html", "link": "Windwalker/Session/Handler/MemcachedHandler.html#method_write", "name": "Windwalker\\Session\\Handler\\MemcachedHandler::write", "doc": "&quot;write&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\MemcachedHandler", "fromLink": "Windwalker/Session/Handler/MemcachedHandler.html", "link": "Windwalker/Session/Handler/MemcachedHandler.html#method_destroy", "name": "Windwalker\\Session\\Handler\\MemcachedHandler::destroy", "doc": "&quot;destroy&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\MemcachedHandler", "fromLink": "Windwalker/Session/Handler/MemcachedHandler.html", "link": "Windwalker/Session/Handler/MemcachedHandler.html#method_gc", "name": "Windwalker\\Session\\Handler\\MemcachedHandler::gc", "doc": "&quot;gc&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Session\\Handler", "fromLink": "Windwalker/Session/Handler.html", "link": "Windwalker/Session/Handler/NativeHandler.html", "name": "Windwalker\\Session\\Handler\\NativeHandler", "doc": "&quot;Class PhpHandler&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\NativeHandler", "fromLink": "Windwalker/Session/Handler/NativeHandler.html", "link": "Windwalker/Session/Handler/NativeHandler.html#method_isSupported", "name": "Windwalker\\Session\\Handler\\NativeHandler::isSupported", "doc": "&quot;isSupported&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\NativeHandler", "fromLink": "Windwalker/Session/Handler/NativeHandler.html", "link": "Windwalker/Session/Handler/NativeHandler.html#method_register", "name": "Windwalker\\Session\\Handler\\NativeHandler::register", "doc": "&quot;register&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Session\\Handler", "fromLink": "Windwalker/Session/Handler.html", "link": "Windwalker/Session/Handler/XcacheHandler.html", "name": "Windwalker\\Session\\Handler\\XcacheHandler", "doc": "&quot;Class XcacheHandler&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\XcacheHandler", "fromLink": "Windwalker/Session/Handler/XcacheHandler.html", "link": "Windwalker/Session/Handler/XcacheHandler.html#method___construct", "name": "Windwalker\\Session\\Handler\\XcacheHandler::__construct", "doc": "&quot;Constructor&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\XcacheHandler", "fromLink": "Windwalker/Session/Handler/XcacheHandler.html", "link": "Windwalker/Session/Handler/XcacheHandler.html#method_isSupported", "name": "Windwalker\\Session\\Handler\\XcacheHandler::isSupported", "doc": "&quot;Test to see if the SessionHandler is available.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\XcacheHandler", "fromLink": "Windwalker/Session/Handler/XcacheHandler.html", "link": "Windwalker/Session/Handler/XcacheHandler.html#method_read", "name": "Windwalker\\Session\\Handler\\XcacheHandler::read", "doc": "&quot;Read the data for a particular session identifier from the SessionHandler backend.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\XcacheHandler", "fromLink": "Windwalker/Session/Handler/XcacheHandler.html", "link": "Windwalker/Session/Handler/XcacheHandler.html#method_write", "name": "Windwalker\\Session\\Handler\\XcacheHandler::write", "doc": "&quot;Write session data to the SessionHandler backend.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\XcacheHandler", "fromLink": "Windwalker/Session/Handler/XcacheHandler.html", "link": "Windwalker/Session/Handler/XcacheHandler.html#method_destroy", "name": "Windwalker\\Session\\Handler\\XcacheHandler::destroy", "doc": "&quot;Destroy the data for a particular session identifier in the SessionHandler backend.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\XcacheHandler", "fromLink": "Windwalker/Session/Handler/XcacheHandler.html", "link": "Windwalker/Session/Handler/XcacheHandler.html#method_open", "name": "Windwalker\\Session\\Handler\\XcacheHandler::open", "doc": "&quot;Re-initializes existing session, or creates a new one.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\XcacheHandler", "fromLink": "Windwalker/Session/Handler/XcacheHandler.html", "link": "Windwalker/Session/Handler/XcacheHandler.html#method_close", "name": "Windwalker\\Session\\Handler\\XcacheHandler::close", "doc": "&quot;Closes the current session.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Handler\\XcacheHandler", "fromLink": "Windwalker/Session/Handler/XcacheHandler.html", "link": "Windwalker/Session/Handler/XcacheHandler.html#method_gc", "name": "Windwalker\\Session\\Handler\\XcacheHandler::gc", "doc": "&quot;Cleans up expired sessions (garbage collection).&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Session", "fromLink": "Windwalker/Session.html", "link": "Windwalker/Session/Session.html", "name": "Windwalker\\Session\\Session", "doc": "&quot;Class for managing HTTP sessions&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method___construct", "name": "Windwalker\\Session\\Session::__construct", "doc": "&quot;Session constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_start", "name": "Windwalker\\Session\\Session::start", "doc": "&quot;Start a session.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_destroy", "name": "Windwalker\\Session\\Session::destroy", "doc": "&quot;Frees all session variables and destroys all data registered to a session&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_restart", "name": "Windwalker\\Session\\Session::restart", "doc": "&quot;Restart an expired or locked session.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_fork", "name": "Windwalker\\Session\\Session::fork", "doc": "&quot;Create a new session and copy variables from the old one&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_close", "name": "Windwalker\\Session\\Session::close", "doc": "&quot;Writes session data and ends session&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_regenerate", "name": "Windwalker\\Session\\Session::regenerate", "doc": "&quot;Re generate the session id.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_get", "name": "Windwalker\\Session\\Session::get", "doc": "&quot;Get data from the session store&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_getAll", "name": "Windwalker\\Session\\Session::getAll", "doc": "&quot;Get all session data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_takeAll", "name": "Windwalker\\Session\\Session::takeAll", "doc": "&quot;Get all session data and clean them.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_clean", "name": "Windwalker\\Session\\Session::clean", "doc": "&quot;Clean all data from a bag (namespace).&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_set", "name": "Windwalker\\Session\\Session::set", "doc": "&quot;Set data into the session store.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_exists", "name": "Windwalker\\Session\\Session::exists", "doc": "&quot;Check whether data exists in the session store&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_remove", "name": "Windwalker\\Session\\Session::remove", "doc": "&quot;Unset data from the session store&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_addFlash", "name": "Windwalker\\Session\\Session::addFlash", "doc": "&quot;Add a flash message.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_getFlashes", "name": "Windwalker\\Session\\Session::getFlashes", "doc": "&quot;Take all flashes and clean them from bag.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_getIterator", "name": "Windwalker\\Session\\Session::getIterator", "doc": "&quot;Retrieve an external iterator&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_getBridge", "name": "Windwalker\\Session\\Session::getBridge", "doc": "&quot;Method to get property Bridge&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_setBridge", "name": "Windwalker\\Session\\Session::setBridge", "doc": "&quot;Method to set property bridge&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_getHandler", "name": "Windwalker\\Session\\Session::getHandler", "doc": "&quot;Method to get property Handler&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_setHandler", "name": "Windwalker\\Session\\Session::setHandler", "doc": "&quot;Method to set property handler&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_getName", "name": "Windwalker\\Session\\Session::getName", "doc": "&quot;Get session name&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_getId", "name": "Windwalker\\Session\\Session::getId", "doc": "&quot;Get session id&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_isActive", "name": "Windwalker\\Session\\Session::isActive", "doc": "&quot;Shorthand to check if the session is active&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_isNew", "name": "Windwalker\\Session\\Session::isNew", "doc": "&quot;Check whether this session is currently created&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_getState", "name": "Windwalker\\Session\\Session::getState", "doc": "&quot;Method to get property State&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_setState", "name": "Windwalker\\Session\\Session::setState", "doc": "&quot;Method to set property state&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_getCookie", "name": "Windwalker\\Session\\Session::getCookie", "doc": "&quot;Get cookie source, default is $_COOKIE.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_setCookie", "name": "Windwalker\\Session\\Session::setCookie", "doc": "&quot;Set cookie source. default will be $_COOKIE.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_getOption", "name": "Windwalker\\Session\\Session::getOption", "doc": "&quot;Method to get property Options&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_setOption", "name": "Windwalker\\Session\\Session::setOption", "doc": "&quot;Method to set property options&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_getOptions", "name": "Windwalker\\Session\\Session::getOptions", "doc": "&quot;Method to get property Options&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_setOptions", "name": "Windwalker\\Session\\Session::setOptions", "doc": "&quot;Method to set property options&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_getBags", "name": "Windwalker\\Session\\Session::getBags", "doc": "&quot;Get all Session bags.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_setBags", "name": "Windwalker\\Session\\Session::setBags", "doc": "&quot;Set Session bags.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_getBag", "name": "Windwalker\\Session\\Session::getBag", "doc": "&quot;Get session bag.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_setBag", "name": "Windwalker\\Session\\Session::setBag", "doc": "&quot;Set session bag by name.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_getFlashBag", "name": "Windwalker\\Session\\Session::getFlashBag", "doc": "&quot;Get Flash bag.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_setFlashBag", "name": "Windwalker\\Session\\Session::setFlashBag", "doc": "&quot;Set Flash Bag&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_setDebug", "name": "Windwalker\\Session\\Session::setDebug", "doc": "&quot;Method to set property debug&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_offsetExists", "name": "Windwalker\\Session\\Session::offsetExists", "doc": "&quot;Is a property exists or not.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_offsetGet", "name": "Windwalker\\Session\\Session::offsetGet", "doc": "&quot;Get a property.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_offsetSet", "name": "Windwalker\\Session\\Session::offsetSet", "doc": "&quot;Set a value to property.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Session\\Session", "fromLink": "Windwalker/Session/Session.html", "link": "Windwalker/Session/Session.html#method_offsetUnset", "name": "Windwalker\\Session\\Session::offsetUnset", "doc": "&quot;Unset a property.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\String", "fromLink": "Windwalker/String.html", "link": "Windwalker/String/SimpleTemplate.html", "name": "Windwalker\\String\\SimpleTemplate", "doc": "&quot;The SimpleTemplate class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\String\\SimpleTemplate", "fromLink": "Windwalker/String/SimpleTemplate.html", "link": "Windwalker/String/SimpleTemplate.html#method_render", "name": "Windwalker\\String\\SimpleTemplate::render", "doc": "&quot;Parse variable and replace it. This method is a simple template engine.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\String", "fromLink": "Windwalker/String.html", "link": "Windwalker/String/StringHelper.html", "name": "Windwalker\\String\\StringHelper", "doc": "&quot;The StringHelper class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\String\\StringHelper", "fromLink": "Windwalker/String/StringHelper.html", "link": "Windwalker/String/StringHelper.html#method_isEmpty", "name": "Windwalker\\String\\StringHelper::isEmpty", "doc": "&quot;isEmptyString&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\StringHelper", "fromLink": "Windwalker/String/StringHelper.html", "link": "Windwalker/String/StringHelper.html#method_isZero", "name": "Windwalker\\String\\StringHelper::isZero", "doc": "&quot;isZero&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\StringHelper", "fromLink": "Windwalker/String/StringHelper.html", "link": "Windwalker/String/StringHelper.html#method_quote", "name": "Windwalker\\String\\StringHelper::quote", "doc": "&quot;Quote a string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\StringHelper", "fromLink": "Windwalker/String/StringHelper.html", "link": "Windwalker/String/StringHelper.html#method_backquote", "name": "Windwalker\\String\\StringHelper::backquote", "doc": "&quot;Back quote a string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\StringHelper", "fromLink": "Windwalker/String/StringHelper.html", "link": "Windwalker/String/StringHelper.html#method_increment", "name": "Windwalker\\String\\StringHelper::increment", "doc": "&quot;Increments a trailing number in a string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\StringHelper", "fromLink": "Windwalker/String/StringHelper.html", "link": "Windwalker/String/StringHelper.html#method_at", "name": "Windwalker\\String\\StringHelper::at", "doc": "&quot;at&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\StringHelper", "fromLink": "Windwalker/String/StringHelper.html", "link": "Windwalker/String/StringHelper.html#method_collapseWhitespace", "name": "Windwalker\\String\\StringHelper::collapseWhitespace", "doc": "&quot;remove spaces&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\StringHelper", "fromLink": "Windwalker/String/StringHelper.html", "link": "Windwalker/String/StringHelper.html#method_endsWith", "name": "Windwalker\\String\\StringHelper::endsWith", "doc": "&quot;endsWith&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\StringHelper", "fromLink": "Windwalker/String/StringHelper.html", "link": "Windwalker/String/StringHelper.html#method_startsWith", "name": "Windwalker\\String\\StringHelper::startsWith", "doc": "&quot;startsWith&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\StringHelper", "fromLink": "Windwalker/String/StringHelper.html", "link": "Windwalker/String/StringHelper.html#method_explode", "name": "Windwalker\\String\\StringHelper::explode", "doc": "&quot;Explode a string and force elements number.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\String", "fromLink": "Windwalker/String.html", "link": "Windwalker/String/StringInflector.html", "name": "Windwalker\\String\\StringInflector", "doc": "&quot;Windwalker Framework String Inflector Class&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\String\\StringInflector", "fromLink": "Windwalker/String/StringInflector.html", "link": "Windwalker/String/StringInflector.html#method___construct", "name": "Windwalker\\String\\StringInflector::__construct", "doc": "&quot;Protected constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\StringInflector", "fromLink": "Windwalker/String/StringInflector.html", "link": "Windwalker/String/StringInflector.html#method_addCountableRule", "name": "Windwalker\\String\\StringInflector::addCountableRule", "doc": "&quot;Adds a countable word.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\StringInflector", "fromLink": "Windwalker/String/StringInflector.html", "link": "Windwalker/String/StringInflector.html#method_addWord", "name": "Windwalker\\String\\StringInflector::addWord", "doc": "&quot;Adds a specific singular-plural pair for a word.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\StringInflector", "fromLink": "Windwalker/String/StringInflector.html", "link": "Windwalker/String/StringInflector.html#method_addPluraliseRule", "name": "Windwalker\\String\\StringInflector::addPluraliseRule", "doc": "&quot;Adds a pluralisation rule.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\StringInflector", "fromLink": "Windwalker/String/StringInflector.html", "link": "Windwalker/String/StringInflector.html#method_addSingulariseRule", "name": "Windwalker\\String\\StringInflector::addSingulariseRule", "doc": "&quot;Adds a singularisation rule.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\StringInflector", "fromLink": "Windwalker/String/StringInflector.html", "link": "Windwalker/String/StringInflector.html#method_getInstance", "name": "Windwalker\\String\\StringInflector::getInstance", "doc": "&quot;Gets an instance of the JStringInflector singleton.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\StringInflector", "fromLink": "Windwalker/String/StringInflector.html", "link": "Windwalker/String/StringInflector.html#method_isCountable", "name": "Windwalker\\String\\StringInflector::isCountable", "doc": "&quot;Checks if a word is countable.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\StringInflector", "fromLink": "Windwalker/String/StringInflector.html", "link": "Windwalker/String/StringInflector.html#method_isPlural", "name": "Windwalker\\String\\StringInflector::isPlural", "doc": "&quot;Checks if a word is in a plural form.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\StringInflector", "fromLink": "Windwalker/String/StringInflector.html", "link": "Windwalker/String/StringInflector.html#method_isSingular", "name": "Windwalker\\String\\StringInflector::isSingular", "doc": "&quot;Checks if a word is in a singular form.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\StringInflector", "fromLink": "Windwalker/String/StringInflector.html", "link": "Windwalker/String/StringInflector.html#method_toPlural", "name": "Windwalker\\String\\StringInflector::toPlural", "doc": "&quot;Converts a word into its plural form.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\StringInflector", "fromLink": "Windwalker/String/StringInflector.html", "link": "Windwalker/String/StringInflector.html#method_toSingular", "name": "Windwalker\\String\\StringInflector::toSingular", "doc": "&quot;Converts a word into its singular form.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\String", "fromLink": "Windwalker/String.html", "link": "Windwalker/String/StringNormalise.html", "name": "Windwalker\\String\\StringNormalise", "doc": "&quot;Windwalker Framework String Normalise Class&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\String\\StringNormalise", "fromLink": "Windwalker/String/StringNormalise.html", "link": "Windwalker/String/StringNormalise.html#method_fromCamelCase", "name": "Windwalker\\String\\StringNormalise::fromCamelCase", "doc": "&quot;Method to convert a string from camel case.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\StringNormalise", "fromLink": "Windwalker/String/StringNormalise.html", "link": "Windwalker/String/StringNormalise.html#method_toCamelCase", "name": "Windwalker\\String\\StringNormalise::toCamelCase", "doc": "&quot;Method to convert a string into camel case.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\StringNormalise", "fromLink": "Windwalker/String/StringNormalise.html", "link": "Windwalker/String/StringNormalise.html#method_toDashSeparated", "name": "Windwalker\\String\\StringNormalise::toDashSeparated", "doc": "&quot;Method to convert a string into dash separated form.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\StringNormalise", "fromLink": "Windwalker/String/StringNormalise.html", "link": "Windwalker/String/StringNormalise.html#method_toSpaceSeparated", "name": "Windwalker\\String\\StringNormalise::toSpaceSeparated", "doc": "&quot;Method to convert a string into space separated form.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\StringNormalise", "fromLink": "Windwalker/String/StringNormalise.html", "link": "Windwalker/String/StringNormalise.html#method_toDotSeparated", "name": "Windwalker\\String\\StringNormalise::toDotSeparated", "doc": "&quot;Method to convert a string into dot separated form.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\StringNormalise", "fromLink": "Windwalker/String/StringNormalise.html", "link": "Windwalker/String/StringNormalise.html#method_separate", "name": "Windwalker\\String\\StringNormalise::separate", "doc": "&quot;Separate a string by custom separator.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\StringNormalise", "fromLink": "Windwalker/String/StringNormalise.html", "link": "Windwalker/String/StringNormalise.html#method_toUnderscoreSeparated", "name": "Windwalker\\String\\StringNormalise::toUnderscoreSeparated", "doc": "&quot;Method to convert a string into underscore separated form.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\StringNormalise", "fromLink": "Windwalker/String/StringNormalise.html", "link": "Windwalker/String/StringNormalise.html#method_toVariable", "name": "Windwalker\\String\\StringNormalise::toVariable", "doc": "&quot;Method to convert a string into variable form.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\StringNormalise", "fromLink": "Windwalker/String/StringNormalise.html", "link": "Windwalker/String/StringNormalise.html#method_toKey", "name": "Windwalker\\String\\StringNormalise::toKey", "doc": "&quot;Method to convert a string into key form.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\StringNormalise", "fromLink": "Windwalker/String/StringNormalise.html", "link": "Windwalker/String/StringNormalise.html#method_toClassNamespace", "name": "Windwalker\\String\\StringNormalise::toClassNamespace", "doc": "&quot;Convert to standard PSR-0\/PSR-4 class name.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\String", "fromLink": "Windwalker/String.html", "link": "Windwalker/String/Utf8String.html", "name": "Windwalker\\String\\Utf8String", "doc": "&quot;String handling class for utf-8 data\nWraps the phputf8 library\nAll functions assume the validity of utf-8 strings.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\String\\Utf8String", "fromLink": "Windwalker/String/Utf8String.html", "link": "Windwalker/String/Utf8String.html#method_is_ascii", "name": "Windwalker\\String\\Utf8String::is_ascii", "doc": "&quot;Tests whether a string contains only 7bit ASCII bytes.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\Utf8String", "fromLink": "Windwalker/String/Utf8String.html", "link": "Windwalker/String/Utf8String.html#method_strpos", "name": "Windwalker\\String\\Utf8String::strpos", "doc": "&quot;UTF-8 aware alternative to strpos.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\Utf8String", "fromLink": "Windwalker/String/Utf8String.html", "link": "Windwalker/String/Utf8String.html#method_strrpos", "name": "Windwalker\\String\\Utf8String::strrpos", "doc": "&quot;UTF-8 aware alternative to strrpos\nFinds position of last occurrence of a string&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\Utf8String", "fromLink": "Windwalker/String/Utf8String.html", "link": "Windwalker/String/Utf8String.html#method_substr", "name": "Windwalker\\String\\Utf8String::substr", "doc": "&quot;UTF-8 aware alternative to substr\nReturn part of a string given character offset (and optionally length)&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\Utf8String", "fromLink": "Windwalker/String/Utf8String.html", "link": "Windwalker/String/Utf8String.html#method_strtolower", "name": "Windwalker\\String\\Utf8String::strtolower", "doc": "&quot;UTF-8 aware alternative to strtlower&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\Utf8String", "fromLink": "Windwalker/String/Utf8String.html", "link": "Windwalker/String/Utf8String.html#method_strtoupper", "name": "Windwalker\\String\\Utf8String::strtoupper", "doc": "&quot;UTF-8 aware alternative to strtoupper\nMake a string uppercase\nNote: The concept of a characters \&quot;case\&quot; only exists is some alphabets\nsuch as Latin, Greek, Cyrillic, Armenian and archaic Georgian - it does\nnot exist in the Chinese alphabet, for example. See Unicode Standard\nAnnex #21: Case Mappings&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\Utf8String", "fromLink": "Windwalker/String/Utf8String.html", "link": "Windwalker/String/Utf8String.html#method_strlen", "name": "Windwalker\\String\\Utf8String::strlen", "doc": "&quot;UTF-8 aware alternative to strlen.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\Utf8String", "fromLink": "Windwalker/String/Utf8String.html", "link": "Windwalker/String/Utf8String.html#method_str_ireplace", "name": "Windwalker\\String\\Utf8String::str_ireplace", "doc": "&quot;UTF-8 aware alternative to str&lt;em&gt;ireplace\nCase-insensitive version of str&lt;\/em&gt;replace&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\Utf8String", "fromLink": "Windwalker/String/Utf8String.html", "link": "Windwalker/String/Utf8String.html#method_str_split", "name": "Windwalker\\String\\Utf8String::str_split", "doc": "&quot;UTF-8 aware alternative to str_split\nConvert a string to an array&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\Utf8String", "fromLink": "Windwalker/String/Utf8String.html", "link": "Windwalker/String/Utf8String.html#method_strcasecmp", "name": "Windwalker\\String\\Utf8String::strcasecmp", "doc": "&quot;UTF-8\/LOCALE aware alternative to strcasecmp\nA case insensitive string comparison&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\Utf8String", "fromLink": "Windwalker/String/Utf8String.html", "link": "Windwalker/String/Utf8String.html#method_strcmp", "name": "Windwalker\\String\\Utf8String::strcmp", "doc": "&quot;UTF-8\/LOCALE aware alternative to strcmp\nA case sensitive string comparison&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\Utf8String", "fromLink": "Windwalker/String/Utf8String.html", "link": "Windwalker/String/Utf8String.html#method_strcspn", "name": "Windwalker\\String\\Utf8String::strcspn", "doc": "&quot;UTF-8 aware alternative to strcspn\nFind length of initial segment not matching mask&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\Utf8String", "fromLink": "Windwalker/String/Utf8String.html", "link": "Windwalker/String/Utf8String.html#method_stristr", "name": "Windwalker\\String\\Utf8String::stristr", "doc": "&quot;UTF-8 aware alternative to stristr\nReturns all of haystack from the first occurrence of needle to the end.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\Utf8String", "fromLink": "Windwalker/String/Utf8String.html", "link": "Windwalker/String/Utf8String.html#method_strrev", "name": "Windwalker\\String\\Utf8String::strrev", "doc": "&quot;UTF-8 aware alternative to strrev\nReverse a string&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\Utf8String", "fromLink": "Windwalker/String/Utf8String.html", "link": "Windwalker/String/Utf8String.html#method_strspn", "name": "Windwalker\\String\\Utf8String::strspn", "doc": "&quot;UTF-8 aware alternative to strspn\nFind length of initial segment matching mask&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\Utf8String", "fromLink": "Windwalker/String/Utf8String.html", "link": "Windwalker/String/Utf8String.html#method_substr_replace", "name": "Windwalker\\String\\Utf8String::substr_replace", "doc": "&quot;UTF-8 aware substr_replace\nReplace text within a portion of a string&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\Utf8String", "fromLink": "Windwalker/String/Utf8String.html", "link": "Windwalker/String/Utf8String.html#method_ltrim", "name": "Windwalker\\String\\Utf8String::ltrim", "doc": "&quot;UTF-8 aware replacement for ltrim()&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\Utf8String", "fromLink": "Windwalker/String/Utf8String.html", "link": "Windwalker/String/Utf8String.html#method_rtrim", "name": "Windwalker\\String\\Utf8String::rtrim", "doc": "&quot;UTF-8 aware replacement for rtrim()\nStrip whitespace (or other characters) from the end of a string\nYou only need to use this if you are supplying the charlist\noptional arg and it contains UTF-8 characters. Otherwise rtrim will\nwork normally on a UTF-8 string&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\Utf8String", "fromLink": "Windwalker/String/Utf8String.html", "link": "Windwalker/String/Utf8String.html#method_trim", "name": "Windwalker\\String\\Utf8String::trim", "doc": "&quot;UTF-8 aware replacement for trim()\nStrip whitespace (or other characters) from the beginning and end of a string\nNote: you only need to use this if you are supplying the charlist\noptional arg and it contains UTF-8 characters. Otherwise trim will\nwork normally on a UTF-8 string&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\Utf8String", "fromLink": "Windwalker/String/Utf8String.html", "link": "Windwalker/String/Utf8String.html#method_ucfirst", "name": "Windwalker\\String\\Utf8String::ucfirst", "doc": "&quot;UTF-8 aware alternative to ucfirst\nMake a string&#039;s first character uppercase or all words&#039; first character uppercase&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\Utf8String", "fromLink": "Windwalker/String/Utf8String.html", "link": "Windwalker/String/Utf8String.html#method_ucwords", "name": "Windwalker\\String\\Utf8String::ucwords", "doc": "&quot;UTF-8 aware alternative to ucwords\nUppercase the first character of each word in a string&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\Utf8String", "fromLink": "Windwalker/String/Utf8String.html", "link": "Windwalker/String/Utf8String.html#method_transcode", "name": "Windwalker\\String\\Utf8String::transcode", "doc": "&quot;Transcode a string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\Utf8String", "fromLink": "Windwalker/String/Utf8String.html", "link": "Windwalker/String/Utf8String.html#method_valid", "name": "Windwalker\\String\\Utf8String::valid", "doc": "&quot;Tests a string as to whether it&#039;s valid UTF-8 and supported by the Unicode standard.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\Utf8String", "fromLink": "Windwalker/String/Utf8String.html", "link": "Windwalker/String/Utf8String.html#method_compliant", "name": "Windwalker\\String\\Utf8String::compliant", "doc": "&quot;Tests whether a string complies as UTF-8. This will be much\nfaster than utf8&lt;em&gt;is&lt;\/em&gt;valid but will pass five and six octet\nUTF-8 sequences, which are not supported by Unicode and\nso cannot be displayed correctly in a browser. In other words\nit is not as strict as utf8&lt;em&gt;is&lt;\/em&gt;valid but it&#039;s faster. If you use\nit to validate user input, you place yourself at the risk that\nattackers will be able to inject 5 and 6 byte sequences (which\nmay or may not be a significant risk, depending on what you are\nare doing)&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\Utf8String", "fromLink": "Windwalker/String/Utf8String.html", "link": "Windwalker/String/Utf8String.html#method_unicode_to_utf8", "name": "Windwalker\\String\\Utf8String::unicode_to_utf8", "doc": "&quot;Converts Unicode sequences to UTF-8 string&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\String\\Utf8String", "fromLink": "Windwalker/String/Utf8String.html", "link": "Windwalker/String/Utf8String.html#method_unicode_to_utf16", "name": "Windwalker\\String\\Utf8String::unicode_to_utf16", "doc": "&quot;Converts Unicode sequences to UTF-16 string&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Structure", "fromLink": "Windwalker/Structure.html", "link": "Windwalker/Structure/Format.html", "name": "Windwalker\\Structure\\Format", "doc": "&quot;The Format class.&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Structure\\Format", "fromLink": "Windwalker/Structure/Format.html", "link": "Windwalker/Structure/Format/FormatInterface.html", "name": "Windwalker\\Structure\\Format\\FormatInterface", "doc": "&quot;Class StructureFormatInterface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Structure\\Format\\FormatInterface", "fromLink": "Windwalker/Structure/Format/FormatInterface.html", "link": "Windwalker/Structure/Format/FormatInterface.html#method_structToString", "name": "Windwalker\\Structure\\Format\\FormatInterface::structToString", "doc": "&quot;Converts an object into a formatted string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Format\\FormatInterface", "fromLink": "Windwalker/Structure/Format/FormatInterface.html", "link": "Windwalker/Structure/Format/FormatInterface.html#method_stringToStruct", "name": "Windwalker\\Structure\\Format\\FormatInterface::stringToStruct", "doc": "&quot;Converts a formatted string into an object.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Structure\\Format", "fromLink": "Windwalker/Structure/Format.html", "link": "Windwalker/Structure/Format/IniFormat.html", "name": "Windwalker\\Structure\\Format\\IniFormat", "doc": "&quot;INI format handler for Structure.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Structure\\Format\\IniFormat", "fromLink": "Windwalker/Structure/Format/IniFormat.html", "link": "Windwalker/Structure/Format/IniFormat.html#method_structToString", "name": "Windwalker\\Structure\\Format\\IniFormat::structToString", "doc": "&quot;Converts an object into an INI formatted string\n- Unfortunately, there is no way to have ini values nested further than two\nlevels deep.  Therefore we will only go through the first two levels of\nthe object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Format\\IniFormat", "fromLink": "Windwalker/Structure/Format/IniFormat.html", "link": "Windwalker/Structure/Format/IniFormat.html#method_stringToStruct", "name": "Windwalker\\Structure\\Format\\IniFormat::stringToStruct", "doc": "&quot;Parse an INI formatted string and convert it into an object.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Structure\\Format", "fromLink": "Windwalker/Structure/Format.html", "link": "Windwalker/Structure/Format/JsonFormat.html", "name": "Windwalker\\Structure\\Format\\JsonFormat", "doc": "&quot;JSON format handler for Structure.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Structure\\Format\\JsonFormat", "fromLink": "Windwalker/Structure/Format/JsonFormat.html", "link": "Windwalker/Structure/Format/JsonFormat.html#method_structToString", "name": "Windwalker\\Structure\\Format\\JsonFormat::structToString", "doc": "&quot;Converts an object into a JSON formatted string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Format\\JsonFormat", "fromLink": "Windwalker/Structure/Format/JsonFormat.html", "link": "Windwalker/Structure/Format/JsonFormat.html#method_stringToStruct", "name": "Windwalker\\Structure\\Format\\JsonFormat::stringToStruct", "doc": "&quot;Parse a JSON formatted string and convert it into an object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Format\\JsonFormat", "fromLink": "Windwalker/Structure/Format/JsonFormat.html", "link": "Windwalker/Structure/Format/JsonFormat.html#method_prettyPrint", "name": "Windwalker\\Structure\\Format\\JsonFormat::prettyPrint", "doc": "&quot;prettyPrint&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Structure\\Format", "fromLink": "Windwalker/Structure/Format.html", "link": "Windwalker/Structure/Format/PhpFormat.html", "name": "Windwalker\\Structure\\Format\\PhpFormat", "doc": "&quot;PHP class format handler for Structure&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Structure\\Format\\PhpFormat", "fromLink": "Windwalker/Structure/Format/PhpFormat.html", "link": "Windwalker/Structure/Format/PhpFormat.html#method_structToString", "name": "Windwalker\\Structure\\Format\\PhpFormat::structToString", "doc": "&quot;Converts an object into a php class string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Format\\PhpFormat", "fromLink": "Windwalker/Structure/Format/PhpFormat.html", "link": "Windwalker/Structure/Format/PhpFormat.html#method_stringToStruct", "name": "Windwalker\\Structure\\Format\\PhpFormat::stringToStruct", "doc": "&quot;Parse a PHP class formatted string and convert it into an object.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Structure\\Format", "fromLink": "Windwalker/Structure/Format.html", "link": "Windwalker/Structure/Format/XmlFormat.html", "name": "Windwalker\\Structure\\Format\\XmlFormat", "doc": "&quot;XML format handler for Structure.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Structure\\Format\\XmlFormat", "fromLink": "Windwalker/Structure/Format/XmlFormat.html", "link": "Windwalker/Structure/Format/XmlFormat.html#method_structToString", "name": "Windwalker\\Structure\\Format\\XmlFormat::structToString", "doc": "&quot;Converts an object into an XML formatted string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Format\\XmlFormat", "fromLink": "Windwalker/Structure/Format/XmlFormat.html", "link": "Windwalker/Structure/Format/XmlFormat.html#method_stringToStruct", "name": "Windwalker\\Structure\\Format\\XmlFormat::stringToStruct", "doc": "&quot;Parse a XML formatted string and convert it into an object.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Structure\\Format", "fromLink": "Windwalker/Structure/Format.html", "link": "Windwalker/Structure/Format/YamlFormat.html", "name": "Windwalker\\Structure\\Format\\YamlFormat", "doc": "&quot;YAML format handler for Structure.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Structure\\Format\\YamlFormat", "fromLink": "Windwalker/Structure/Format/YamlFormat.html", "link": "Windwalker/Structure/Format/YamlFormat.html#method_structToString", "name": "Windwalker\\Structure\\Format\\YamlFormat::structToString", "doc": "&quot;Converts an object into a YAML formatted string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Format\\YamlFormat", "fromLink": "Windwalker/Structure/Format/YamlFormat.html", "link": "Windwalker/Structure/Format/YamlFormat.html#method_stringToStruct", "name": "Windwalker\\Structure\\Format\\YamlFormat::stringToStruct", "doc": "&quot;Parse a YAML formatted string and convert it into an object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Format\\YamlFormat", "fromLink": "Windwalker/Structure/Format/YamlFormat.html", "link": "Windwalker/Structure/Format/YamlFormat.html#method_getParser", "name": "Windwalker\\Structure\\Format\\YamlFormat::getParser", "doc": "&quot;getParser&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Format\\YamlFormat", "fromLink": "Windwalker/Structure/Format/YamlFormat.html", "link": "Windwalker/Structure/Format/YamlFormat.html#method_setParser", "name": "Windwalker\\Structure\\Format\\YamlFormat::setParser", "doc": "&quot;setParser&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Format\\YamlFormat", "fromLink": "Windwalker/Structure/Format/YamlFormat.html", "link": "Windwalker/Structure/Format/YamlFormat.html#method_getDumper", "name": "Windwalker\\Structure\\Format\\YamlFormat::getDumper", "doc": "&quot;getDumper&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Format\\YamlFormat", "fromLink": "Windwalker/Structure/Format/YamlFormat.html", "link": "Windwalker/Structure/Format/YamlFormat.html#method_setDumper", "name": "Windwalker\\Structure\\Format\\YamlFormat::setDumper", "doc": "&quot;setDumper&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Structure\\Format", "fromLink": "Windwalker/Structure/Format.html", "link": "Windwalker/Structure/Format/YmlFormat.html", "name": "Windwalker\\Structure\\Format\\YmlFormat", "doc": "&quot;YAML format proxy.&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Structure", "fromLink": "Windwalker/Structure.html", "link": "Windwalker/Structure/Structure.html", "name": "Windwalker\\Structure\\Structure", "doc": "&quot;Structure class&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method___construct", "name": "Windwalker\\Structure\\Structure::__construct", "doc": "&quot;Constructor&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method___clone", "name": "Windwalker\\Structure\\Structure::__clone", "doc": "&quot;Magic function to clone the structure object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method___toString", "name": "Windwalker\\Structure\\Structure::__toString", "doc": "&quot;Magic function to render this object as a string using default args of toString method.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method_jsonSerialize", "name": "Windwalker\\Structure\\Structure::jsonSerialize", "doc": "&quot;Implementation for the JsonSerializable interface.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method_def", "name": "Windwalker\\Structure\\Structure::def", "doc": "&quot;Sets a default value if not already assigned.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method_exists", "name": "Windwalker\\Structure\\Structure::exists", "doc": "&quot;Check if a structure path exists.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method_get", "name": "Windwalker\\Structure\\Structure::get", "doc": "&quot;Get a structure value.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method_reset", "name": "Windwalker\\Structure\\Structure::reset", "doc": "&quot;Reset all data.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method_load", "name": "Windwalker\\Structure\\Structure::load", "doc": "&quot;Load an array or object of values into the default namespace&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method_loadFile", "name": "Windwalker\\Structure\\Structure::loadFile", "doc": "&quot;Load the contents of a file into the structure&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method_loadString", "name": "Windwalker\\Structure\\Structure::loadString", "doc": "&quot;Load a string into the structure&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method_merge", "name": "Windwalker\\Structure\\Structure::merge", "doc": "&quot;Merge a structure data into this object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method_mergeTo", "name": "Windwalker\\Structure\\Structure::mergeTo", "doc": "&quot;Merge a structure data to a node.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method_extract", "name": "Windwalker\\Structure\\Structure::extract", "doc": "&quot;extract&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method_getRaw", "name": "Windwalker\\Structure\\Structure::getRaw", "doc": "&quot;getRaw&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method_offsetExists", "name": "Windwalker\\Structure\\Structure::offsetExists", "doc": "&quot;Checks whether an offset exists in the iterator.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method_offsetGet", "name": "Windwalker\\Structure\\Structure::offsetGet", "doc": "&quot;Gets an offset in the iterator.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method_offsetSet", "name": "Windwalker\\Structure\\Structure::offsetSet", "doc": "&quot;Sets an offset in the iterator.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method_offsetUnset", "name": "Windwalker\\Structure\\Structure::offsetUnset", "doc": "&quot;Unsets an offset in the iterator.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method_set", "name": "Windwalker\\Structure\\Structure::set", "doc": "&quot;Set a structure value and convert object to array.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method_setRaw", "name": "Windwalker\\Structure\\Structure::setRaw", "doc": "&quot;Set a structure value.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method_toArray", "name": "Windwalker\\Structure\\Structure::toArray", "doc": "&quot;Transforms a namespace to an array&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method_toObject", "name": "Windwalker\\Structure\\Structure::toObject", "doc": "&quot;Transforms a namespace to an object&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method_toString", "name": "Windwalker\\Structure\\Structure::toString", "doc": "&quot;Get a namespace in a given string format&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method_flatten", "name": "Windwalker\\Structure\\Structure::flatten", "doc": "&quot;Dump to on dimension array.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method_getSeparator", "name": "Windwalker\\Structure\\Structure::getSeparator", "doc": "&quot;Method to get property Separator&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method_setSeparator", "name": "Windwalker\\Structure\\Structure::setSeparator", "doc": "&quot;Method to set property separator&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method_push", "name": "Windwalker\\Structure\\Structure::push", "doc": "&quot;Push value to a path in structure&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method_unshift", "name": "Windwalker\\Structure\\Structure::unshift", "doc": "&quot;Prepend value to a path in structure.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method_shift", "name": "Windwalker\\Structure\\Structure::shift", "doc": "&quot;To remove first element from the path of this structure.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method_pop", "name": "Windwalker\\Structure\\Structure::pop", "doc": "&quot;To remove last element from the path of this structure.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method_getIterator", "name": "Windwalker\\Structure\\Structure::getIterator", "doc": "&quot;Gets this object represented as an RecursiveArrayIterator.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method_count", "name": "Windwalker\\Structure\\Structure::count", "doc": "&quot;Count elements of the data object&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method_getIgnoreValues", "name": "Windwalker\\Structure\\Structure::getIgnoreValues", "doc": "&quot;Method to get property IgnoreValues&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\Structure", "fromLink": "Windwalker/Structure/Structure.html", "link": "Windwalker/Structure/Structure.html#method_setIgnoreValues", "name": "Windwalker\\Structure\\Structure::setIgnoreValues", "doc": "&quot;Method to set property ignoreValues&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Structure", "fromLink": "Windwalker/Structure.html", "link": "Windwalker/Structure/StructureHelper.html", "name": "Windwalker\\Structure\\StructureHelper", "doc": "&quot;Class StructureHelper&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Structure\\StructureHelper", "fromLink": "Windwalker/Structure/StructureHelper.html", "link": "Windwalker/Structure/StructureHelper.html#method_loadFile", "name": "Windwalker\\Structure\\StructureHelper::loadFile", "doc": "&quot;Load the contents of a file into the structure&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\StructureHelper", "fromLink": "Windwalker/Structure/StructureHelper.html", "link": "Windwalker/Structure/StructureHelper.html#method_loadString", "name": "Windwalker\\Structure\\StructureHelper::loadString", "doc": "&quot;Load a string into the structure&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\StructureHelper", "fromLink": "Windwalker/Structure/StructureHelper.html", "link": "Windwalker/Structure/StructureHelper.html#method_toString", "name": "Windwalker\\Structure\\StructureHelper::toString", "doc": "&quot;Get a namespace in a given string format&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\StructureHelper", "fromLink": "Windwalker/Structure/StructureHelper.html", "link": "Windwalker/Structure/StructureHelper.html#method_getFormatClass", "name": "Windwalker\\Structure\\StructureHelper::getFormatClass", "doc": "&quot;getFormatClass&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\StructureHelper", "fromLink": "Windwalker/Structure/StructureHelper.html", "link": "Windwalker/Structure/StructureHelper.html#method_isAssociativeArray", "name": "Windwalker\\Structure\\StructureHelper::isAssociativeArray", "doc": "&quot;Method to determine if an array is an associative array.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\StructureHelper", "fromLink": "Windwalker/Structure/StructureHelper.html", "link": "Windwalker/Structure/StructureHelper.html#method_getValue", "name": "Windwalker\\Structure\\StructureHelper::getValue", "doc": "&quot;getValue&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\StructureHelper", "fromLink": "Windwalker/Structure/StructureHelper.html", "link": "Windwalker/Structure/StructureHelper.html#method_toObject", "name": "Windwalker\\Structure\\StructureHelper::toObject", "doc": "&quot;Utility function to map an array to a stdClass object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\StructureHelper", "fromLink": "Windwalker/Structure/StructureHelper.html", "link": "Windwalker/Structure/StructureHelper.html#method_getByPath", "name": "Windwalker\\Structure\\StructureHelper::getByPath", "doc": "&quot;Get data from array or object by path.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\StructureHelper", "fromLink": "Windwalker/Structure/StructureHelper.html", "link": "Windwalker/Structure/StructureHelper.html#method_setByPath", "name": "Windwalker\\Structure\\StructureHelper::setByPath", "doc": "&quot;setByPath&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\StructureHelper", "fromLink": "Windwalker/Structure/StructureHelper.html", "link": "Windwalker/Structure/StructureHelper.html#method_getPathNodes", "name": "Windwalker\\Structure\\StructureHelper::getPathNodes", "doc": "&quot;Explode the structure path into an array and remove empty\nnodes that occur as a result of a double dot. ex: windwalker.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\StructureHelper", "fromLink": "Windwalker/Structure/StructureHelper.html", "link": "Windwalker/Structure/StructureHelper.html#method_flatten", "name": "Windwalker\\Structure\\StructureHelper::flatten", "doc": "&quot;Method to recursively convert data to one dimension array.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\StructureHelper", "fromLink": "Windwalker/Structure/StructureHelper.html", "link": "Windwalker/Structure/StructureHelper.html#method_toArray", "name": "Windwalker\\Structure\\StructureHelper::toArray", "doc": "&quot;Utility function to convert all types to an array.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Structure\\StructureHelper", "fromLink": "Windwalker/Structure/StructureHelper.html", "link": "Windwalker/Structure/StructureHelper.html#method_dumpObjectValues", "name": "Windwalker\\Structure\\StructureHelper::dumpObjectValues", "doc": "&quot;dumpObjectValues&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Uri", "fromLink": "Windwalker/Uri.html", "link": "Windwalker/Uri/AbstractUri.html", "name": "Windwalker\\Uri\\AbstractUri", "doc": "&quot;Uri Class&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Uri\\AbstractUri", "fromLink": "Windwalker/Uri/AbstractUri.html", "link": "Windwalker/Uri/AbstractUri.html#method___construct", "name": "Windwalker\\Uri\\AbstractUri::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\AbstractUri", "fromLink": "Windwalker/Uri/AbstractUri.html", "link": "Windwalker/Uri/AbstractUri.html#method___toString", "name": "Windwalker\\Uri\\AbstractUri::__toString", "doc": "&quot;Magic method to get the string representation of the URI object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\AbstractUri", "fromLink": "Windwalker/Uri/AbstractUri.html", "link": "Windwalker/Uri/AbstractUri.html#method_toString", "name": "Windwalker\\Uri\\AbstractUri::toString", "doc": "&quot;Returns full uri string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\AbstractUri", "fromLink": "Windwalker/Uri/AbstractUri.html", "link": "Windwalker/Uri/AbstractUri.html#method_hasVar", "name": "Windwalker\\Uri\\AbstractUri::hasVar", "doc": "&quot;Checks if variable exists.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\AbstractUri", "fromLink": "Windwalker/Uri/AbstractUri.html", "link": "Windwalker/Uri/AbstractUri.html#method_getVar", "name": "Windwalker\\Uri\\AbstractUri::getVar", "doc": "&quot;Returns a query variable by name.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\AbstractUri", "fromLink": "Windwalker/Uri/AbstractUri.html", "link": "Windwalker/Uri/AbstractUri.html#method_getQuery", "name": "Windwalker\\Uri\\AbstractUri::getQuery", "doc": "&quot;Returns flat query string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\AbstractUri", "fromLink": "Windwalker/Uri/AbstractUri.html", "link": "Windwalker/Uri/AbstractUri.html#method_getScheme", "name": "Windwalker\\Uri\\AbstractUri::getScheme", "doc": "&quot;Get URI scheme (protocol)\nie. http, https, ftp, etc.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\AbstractUri", "fromLink": "Windwalker/Uri/AbstractUri.html", "link": "Windwalker/Uri/AbstractUri.html#method_getUser", "name": "Windwalker\\Uri\\AbstractUri::getUser", "doc": "&quot;Get URI username\nReturns the username, or null if no username was specified.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\AbstractUri", "fromLink": "Windwalker/Uri/AbstractUri.html", "link": "Windwalker/Uri/AbstractUri.html#method_getPass", "name": "Windwalker\\Uri\\AbstractUri::getPass", "doc": "&quot;Get URI password\nReturns the password, or null if no password was specified.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\AbstractUri", "fromLink": "Windwalker/Uri/AbstractUri.html", "link": "Windwalker/Uri/AbstractUri.html#method_getUserInfo", "name": "Windwalker\\Uri\\AbstractUri::getUserInfo", "doc": "&quot;Retrieve the user information component of the URI.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\AbstractUri", "fromLink": "Windwalker/Uri/AbstractUri.html", "link": "Windwalker/Uri/AbstractUri.html#method_getHost", "name": "Windwalker\\Uri\\AbstractUri::getHost", "doc": "&quot;Get URI host\nReturns the hostname\/ip or null if no hostname\/ip was specified.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\AbstractUri", "fromLink": "Windwalker/Uri/AbstractUri.html", "link": "Windwalker/Uri/AbstractUri.html#method_getPort", "name": "Windwalker\\Uri\\AbstractUri::getPort", "doc": "&quot;Get URI port\nReturns the port number, or null if no port was specified.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\AbstractUri", "fromLink": "Windwalker/Uri/AbstractUri.html", "link": "Windwalker/Uri/AbstractUri.html#method_getPath", "name": "Windwalker\\Uri\\AbstractUri::getPath", "doc": "&quot;Gets the URI path string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\AbstractUri", "fromLink": "Windwalker/Uri/AbstractUri.html", "link": "Windwalker/Uri/AbstractUri.html#method_getFragment", "name": "Windwalker\\Uri\\AbstractUri::getFragment", "doc": "&quot;Get the URI archor string\nEverything after the \&quot;#\&quot;.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\AbstractUri", "fromLink": "Windwalker/Uri/AbstractUri.html", "link": "Windwalker/Uri/AbstractUri.html#method_isSSL", "name": "Windwalker\\Uri\\AbstractUri::isSSL", "doc": "&quot;Checks whether the current URI is using HTTPS.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\AbstractUri", "fromLink": "Windwalker/Uri/AbstractUri.html", "link": "Windwalker/Uri/AbstractUri.html#method_getOriginal", "name": "Windwalker\\Uri\\AbstractUri::getOriginal", "doc": "&quot;getUri&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Uri", "fromLink": "Windwalker/Uri.html", "link": "Windwalker/Uri/PsrUri.html", "name": "Windwalker\\Uri\\PsrUri", "doc": "&quot;The PsrUri class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Uri\\PsrUri", "fromLink": "Windwalker/Uri/PsrUri.html", "link": "Windwalker/Uri/PsrUri.html#method___construct", "name": "Windwalker\\Uri\\PsrUri::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\PsrUri", "fromLink": "Windwalker/Uri/PsrUri.html", "link": "Windwalker/Uri/PsrUri.html#method_getAuthority", "name": "Windwalker\\Uri\\PsrUri::getAuthority", "doc": "&quot;Retrieve the authority component of the URI.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\PsrUri", "fromLink": "Windwalker/Uri/PsrUri.html", "link": "Windwalker/Uri/PsrUri.html#method_withScheme", "name": "Windwalker\\Uri\\PsrUri::withScheme", "doc": "&quot;Return an instance with the specified scheme.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\PsrUri", "fromLink": "Windwalker/Uri/PsrUri.html", "link": "Windwalker/Uri/PsrUri.html#method_withUserInfo", "name": "Windwalker\\Uri\\PsrUri::withUserInfo", "doc": "&quot;Return an instance with the specified user information.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\PsrUri", "fromLink": "Windwalker/Uri/PsrUri.html", "link": "Windwalker/Uri/PsrUri.html#method_withHost", "name": "Windwalker\\Uri\\PsrUri::withHost", "doc": "&quot;Return an instance with the specified host.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\PsrUri", "fromLink": "Windwalker/Uri/PsrUri.html", "link": "Windwalker/Uri/PsrUri.html#method_withPort", "name": "Windwalker\\Uri\\PsrUri::withPort", "doc": "&quot;Return an instance with the specified port.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\PsrUri", "fromLink": "Windwalker/Uri/PsrUri.html", "link": "Windwalker/Uri/PsrUri.html#method_withPath", "name": "Windwalker\\Uri\\PsrUri::withPath", "doc": "&quot;Return an instance with the specified path.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\PsrUri", "fromLink": "Windwalker/Uri/PsrUri.html", "link": "Windwalker/Uri/PsrUri.html#method_withQuery", "name": "Windwalker\\Uri\\PsrUri::withQuery", "doc": "&quot;Return an instance with the specified query string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\PsrUri", "fromLink": "Windwalker/Uri/PsrUri.html", "link": "Windwalker/Uri/PsrUri.html#method_withFragment", "name": "Windwalker\\Uri\\PsrUri::withFragment", "doc": "&quot;Return an instance with the specified URI fragment.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Uri", "fromLink": "Windwalker/Uri.html", "link": "Windwalker/Uri/Uri.html", "name": "Windwalker\\Uri\\Uri", "doc": "&quot;Uri Class&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Uri\\Uri", "fromLink": "Windwalker/Uri/Uri.html", "link": "Windwalker/Uri/Uri.html#method_setVar", "name": "Windwalker\\Uri\\Uri::setVar", "doc": "&quot;Adds a query variable and value, replacing the value if it\nalready exists and returning the old value.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\Uri", "fromLink": "Windwalker/Uri/Uri.html", "link": "Windwalker/Uri/Uri.html#method_delVar", "name": "Windwalker\\Uri\\Uri::delVar", "doc": "&quot;Removes an item from the query string variables if it exists.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\Uri", "fromLink": "Windwalker/Uri/Uri.html", "link": "Windwalker/Uri/Uri.html#method_setQuery", "name": "Windwalker\\Uri\\Uri::setQuery", "doc": "&quot;Sets the query to a supplied string in format:\nfoo=bar&amp;amp;x=y&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\Uri", "fromLink": "Windwalker/Uri/Uri.html", "link": "Windwalker/Uri/Uri.html#method_setScheme", "name": "Windwalker\\Uri\\Uri::setScheme", "doc": "&quot;Set URI scheme (protocol)\nie. http, https, ftp, etc.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\Uri", "fromLink": "Windwalker/Uri/Uri.html", "link": "Windwalker/Uri/Uri.html#method_setUser", "name": "Windwalker\\Uri\\Uri::setUser", "doc": "&quot;Set URI username.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\Uri", "fromLink": "Windwalker/Uri/Uri.html", "link": "Windwalker/Uri/Uri.html#method_setPass", "name": "Windwalker\\Uri\\Uri::setPass", "doc": "&quot;Set URI password.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\Uri", "fromLink": "Windwalker/Uri/Uri.html", "link": "Windwalker/Uri/Uri.html#method_setHost", "name": "Windwalker\\Uri\\Uri::setHost", "doc": "&quot;Set URI host.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\Uri", "fromLink": "Windwalker/Uri/Uri.html", "link": "Windwalker/Uri/Uri.html#method_setPort", "name": "Windwalker\\Uri\\Uri::setPort", "doc": "&quot;Set URI port.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\Uri", "fromLink": "Windwalker/Uri/Uri.html", "link": "Windwalker/Uri/Uri.html#method_setPath", "name": "Windwalker\\Uri\\Uri::setPath", "doc": "&quot;Set the URI path string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\Uri", "fromLink": "Windwalker/Uri/Uri.html", "link": "Windwalker/Uri/Uri.html#method_setFragment", "name": "Windwalker\\Uri\\Uri::setFragment", "doc": "&quot;Set the URI anchor string\neverything after the \&quot;#\&quot;.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Uri", "fromLink": "Windwalker/Uri.html", "link": "Windwalker/Uri/UriData.html", "name": "Windwalker\\Uri\\UriData", "doc": "&quot;The UriData class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Uri\\UriData", "fromLink": "Windwalker/Uri/UriData.html", "link": "Windwalker/Uri/UriData.html#method___construct", "name": "Windwalker\\Uri\\UriData::__construct", "doc": "&quot;UriData constructor.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriData", "fromLink": "Windwalker/Uri/UriData.html", "link": "Windwalker/Uri/UriData.html#method___call", "name": "Windwalker\\Uri\\UriData::__call", "doc": "&quot;__call&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriData", "fromLink": "Windwalker/Uri/UriData.html", "link": "Windwalker/Uri/UriData.html#method_createUri", "name": "Windwalker\\Uri\\UriData::createUri", "doc": "&quot;createUri&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriData", "fromLink": "Windwalker/Uri/UriData.html", "link": "Windwalker/Uri/UriData.html#method_createPsrUri", "name": "Windwalker\\Uri\\UriData::createPsrUri", "doc": "&quot;createPsrUri&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriData", "fromLink": "Windwalker/Uri/UriData.html", "link": "Windwalker/Uri/UriData.html#method_addPrefix", "name": "Windwalker\\Uri\\UriData::addPrefix", "doc": "&quot;addPrefix&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriData", "fromLink": "Windwalker/Uri/UriData.html", "link": "Windwalker/Uri/UriData.html#method_getIterator", "name": "Windwalker\\Uri\\UriData::getIterator", "doc": "&quot;Retrieve an external iterator&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriData", "fromLink": "Windwalker/Uri/UriData.html", "link": "Windwalker/Uri/UriData.html#method_offsetExists", "name": "Windwalker\\Uri\\UriData::offsetExists", "doc": "&quot;Whether a offset exists&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriData", "fromLink": "Windwalker/Uri/UriData.html", "link": "Windwalker/Uri/UriData.html#method_offsetGet", "name": "Windwalker\\Uri\\UriData::offsetGet", "doc": "&quot;Offset to retrieve&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriData", "fromLink": "Windwalker/Uri/UriData.html", "link": "Windwalker/Uri/UriData.html#method_offsetSet", "name": "Windwalker\\Uri\\UriData::offsetSet", "doc": "&quot;Offset to set&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriData", "fromLink": "Windwalker/Uri/UriData.html", "link": "Windwalker/Uri/UriData.html#method_offsetUnset", "name": "Windwalker\\Uri\\UriData::offsetUnset", "doc": "&quot;Offset to unset&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriData", "fromLink": "Windwalker/Uri/UriData.html", "link": "Windwalker/Uri/UriData.html#method_count", "name": "Windwalker\\Uri\\UriData::count", "doc": "&quot;Count elements of an object&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriData", "fromLink": "Windwalker/Uri/UriData.html", "link": "Windwalker/Uri/UriData.html#method_full", "name": "Windwalker\\Uri\\UriData::full", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriData", "fromLink": "Windwalker/Uri/UriData.html", "link": "Windwalker/Uri/UriData.html#method_current", "name": "Windwalker\\Uri\\UriData::current", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriData", "fromLink": "Windwalker/Uri/UriData.html", "link": "Windwalker/Uri/UriData.html#method_script", "name": "Windwalker\\Uri\\UriData::script", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriData", "fromLink": "Windwalker/Uri/UriData.html", "link": "Windwalker/Uri/UriData.html#method_root", "name": "Windwalker\\Uri\\UriData::root", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriData", "fromLink": "Windwalker/Uri/UriData.html", "link": "Windwalker/Uri/UriData.html#method_route", "name": "Windwalker\\Uri\\UriData::route", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriData", "fromLink": "Windwalker/Uri/UriData.html", "link": "Windwalker/Uri/UriData.html#method_host", "name": "Windwalker\\Uri\\UriData::host", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriData", "fromLink": "Windwalker/Uri/UriData.html", "link": "Windwalker/Uri/UriData.html#method_path", "name": "Windwalker\\Uri\\UriData::path", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriData", "fromLink": "Windwalker/Uri/UriData.html", "link": "Windwalker/Uri/UriData.html#method_scheme", "name": "Windwalker\\Uri\\UriData::scheme", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Uri", "fromLink": "Windwalker/Uri.html", "link": "Windwalker/Uri/UriHelper.html", "name": "Windwalker\\Uri\\UriHelper", "doc": "&quot;Uri Helper&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Uri\\UriHelper", "fromLink": "Windwalker/Uri/UriHelper.html", "link": "Windwalker/Uri/UriHelper.html#method_buildQuery", "name": "Windwalker\\Uri\\UriHelper::buildQuery", "doc": "&quot;Build a query from a array (reverse of the PHP parse_str()).&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriHelper", "fromLink": "Windwalker/Uri/UriHelper.html", "link": "Windwalker/Uri/UriHelper.html#method_parseUrl", "name": "Windwalker\\Uri\\UriHelper::parseUrl", "doc": "&quot;Does a UTF-8 safe version of PHP parse_url function&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriHelper", "fromLink": "Windwalker/Uri/UriHelper.html", "link": "Windwalker/Uri/UriHelper.html#method_parseQuery", "name": "Windwalker\\Uri\\UriHelper::parseQuery", "doc": "&quot;parseQuery&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriHelper", "fromLink": "Windwalker/Uri/UriHelper.html", "link": "Windwalker/Uri/UriHelper.html#method_filterScheme", "name": "Windwalker\\Uri\\UriHelper::filterScheme", "doc": "&quot;filterScheme&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriHelper", "fromLink": "Windwalker/Uri/UriHelper.html", "link": "Windwalker/Uri/UriHelper.html#method_filterQuery", "name": "Windwalker\\Uri\\UriHelper::filterQuery", "doc": "&quot;Filter a query string to ensure it is propertly encoded.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriHelper", "fromLink": "Windwalker/Uri/UriHelper.html", "link": "Windwalker/Uri/UriHelper.html#method_splitQueryValue", "name": "Windwalker\\Uri\\UriHelper::splitQueryValue", "doc": "&quot;Split a query value into a key\/value tuple.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriHelper", "fromLink": "Windwalker/Uri/UriHelper.html", "link": "Windwalker/Uri/UriHelper.html#method_filterQueryOrFragment", "name": "Windwalker\\Uri\\UriHelper::filterQueryOrFragment", "doc": "&quot;Filter a query string key or value, or a fragment.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriHelper", "fromLink": "Windwalker/Uri/UriHelper.html", "link": "Windwalker/Uri/UriHelper.html#method_filterFragment", "name": "Windwalker\\Uri\\UriHelper::filterFragment", "doc": "&quot;Filter a fragment value to ensure it is properly encoded.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriHelper", "fromLink": "Windwalker/Uri/UriHelper.html", "link": "Windwalker/Uri/UriHelper.html#method_filterPath", "name": "Windwalker\\Uri\\UriHelper::filterPath", "doc": "&quot;Filters the path of a URI to ensure it is properly encoded.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriHelper", "fromLink": "Windwalker/Uri/UriHelper.html", "link": "Windwalker/Uri/UriHelper.html#method_cleanPath", "name": "Windwalker\\Uri\\UriHelper::cleanPath", "doc": "&quot;Resolves \/\/, .&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriHelper", "fromLink": "Windwalker/Uri/UriHelper.html", "link": "Windwalker/Uri/UriHelper.html#method_decode", "name": "Windwalker\\Uri\\UriHelper::decode", "doc": "&quot;decode&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriHelper", "fromLink": "Windwalker/Uri/UriHelper.html", "link": "Windwalker/Uri/UriHelper.html#method_encode", "name": "Windwalker\\Uri\\UriHelper::encode", "doc": "&quot;encode&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Uri", "fromLink": "Windwalker/Uri.html", "link": "Windwalker/Uri/UriInterface.html", "name": "Windwalker\\Uri\\UriInterface", "doc": "&quot;Uri Interface&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Uri\\UriInterface", "fromLink": "Windwalker/Uri/UriInterface.html", "link": "Windwalker/Uri/UriInterface.html#method___toString", "name": "Windwalker\\Uri\\UriInterface::__toString", "doc": "&quot;Magic method to get the string representation of the URI object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriInterface", "fromLink": "Windwalker/Uri/UriInterface.html", "link": "Windwalker/Uri/UriInterface.html#method_toString", "name": "Windwalker\\Uri\\UriInterface::toString", "doc": "&quot;Returns full uri string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriInterface", "fromLink": "Windwalker/Uri/UriInterface.html", "link": "Windwalker/Uri/UriInterface.html#method_hasVar", "name": "Windwalker\\Uri\\UriInterface::hasVar", "doc": "&quot;Checks if variable exists.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriInterface", "fromLink": "Windwalker/Uri/UriInterface.html", "link": "Windwalker/Uri/UriInterface.html#method_getVar", "name": "Windwalker\\Uri\\UriInterface::getVar", "doc": "&quot;Returns a query variable by name.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriInterface", "fromLink": "Windwalker/Uri/UriInterface.html", "link": "Windwalker/Uri/UriInterface.html#method_getQuery", "name": "Windwalker\\Uri\\UriInterface::getQuery", "doc": "&quot;Returns flat query string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriInterface", "fromLink": "Windwalker/Uri/UriInterface.html", "link": "Windwalker/Uri/UriInterface.html#method_getScheme", "name": "Windwalker\\Uri\\UriInterface::getScheme", "doc": "&quot;Get URI scheme (protocol)\nie. http, https, ftp, etc.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriInterface", "fromLink": "Windwalker/Uri/UriInterface.html", "link": "Windwalker/Uri/UriInterface.html#method_getUser", "name": "Windwalker\\Uri\\UriInterface::getUser", "doc": "&quot;Get URI username\nReturns the username, or null if no username was specified.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriInterface", "fromLink": "Windwalker/Uri/UriInterface.html", "link": "Windwalker/Uri/UriInterface.html#method_getPass", "name": "Windwalker\\Uri\\UriInterface::getPass", "doc": "&quot;Get URI password\nReturns the password, or null if no password was specified.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriInterface", "fromLink": "Windwalker/Uri/UriInterface.html", "link": "Windwalker/Uri/UriInterface.html#method_getHost", "name": "Windwalker\\Uri\\UriInterface::getHost", "doc": "&quot;Get URI host\nReturns the hostname\/ip or null if no hostname\/ip was specified.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriInterface", "fromLink": "Windwalker/Uri/UriInterface.html", "link": "Windwalker/Uri/UriInterface.html#method_getPort", "name": "Windwalker\\Uri\\UriInterface::getPort", "doc": "&quot;Get URI port\nReturns the port number, or null if no port was specified.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriInterface", "fromLink": "Windwalker/Uri/UriInterface.html", "link": "Windwalker/Uri/UriInterface.html#method_getPath", "name": "Windwalker\\Uri\\UriInterface::getPath", "doc": "&quot;Gets the URI path string.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriInterface", "fromLink": "Windwalker/Uri/UriInterface.html", "link": "Windwalker/Uri/UriInterface.html#method_getFragment", "name": "Windwalker\\Uri\\UriInterface::getFragment", "doc": "&quot;Get the URI archor string\nEverything after the \&quot;#\&quot;.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Uri\\UriInterface", "fromLink": "Windwalker/Uri/UriInterface.html", "link": "Windwalker/Uri/UriInterface.html#method_isSSL", "name": "Windwalker\\Uri\\UriInterface::isSSL", "doc": "&quot;Checks whether the current URI is using HTTPS.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Utilities", "fromLink": "Windwalker/Utilities.html", "link": "Windwalker/Utilities/ArrayHelper.html", "name": "Windwalker\\Utilities\\ArrayHelper", "doc": "&quot;The ArrayHelper class&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Utilities\\ArrayHelper", "fromLink": "Windwalker/Utilities/ArrayHelper.html", "link": "Windwalker/Utilities/ArrayHelper.html#method_toObject", "name": "Windwalker\\Utilities\\ArrayHelper::toObject", "doc": "&quot;Utility function to map an array to a stdClass object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\ArrayHelper", "fromLink": "Windwalker/Utilities/ArrayHelper.html", "link": "Windwalker/Utilities/ArrayHelper.html#method_toArray", "name": "Windwalker\\Utilities\\ArrayHelper::toArray", "doc": "&quot;Utility function to convert all types to an array.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\ArrayHelper", "fromLink": "Windwalker/Utilities/ArrayHelper.html", "link": "Windwalker/Utilities/ArrayHelper.html#method_getColumn", "name": "Windwalker\\Utilities\\ArrayHelper::getColumn", "doc": "&quot;Extracts a column from an array of arrays or objects&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\ArrayHelper", "fromLink": "Windwalker/Utilities/ArrayHelper.html", "link": "Windwalker/Utilities/ArrayHelper.html#method_getValue", "name": "Windwalker\\Utilities\\ArrayHelper::getValue", "doc": "&quot;Utility function to return a value from a named array or a specified default&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\ArrayHelper", "fromLink": "Windwalker/Utilities/ArrayHelper.html", "link": "Windwalker/Utilities/ArrayHelper.html#method_setValue", "name": "Windwalker\\Utilities\\ArrayHelper::setValue", "doc": "&quot;Set a value into array or object.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\ArrayHelper", "fromLink": "Windwalker/Utilities/ArrayHelper.html", "link": "Windwalker/Utilities/ArrayHelper.html#method_invert", "name": "Windwalker\\Utilities\\ArrayHelper::invert", "doc": "&quot;Takes an associative array of arrays and inverts the array keys to values using the array values as keys.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\ArrayHelper", "fromLink": "Windwalker/Utilities/ArrayHelper.html", "link": "Windwalker/Utilities/ArrayHelper.html#method_isAssociative", "name": "Windwalker\\Utilities\\ArrayHelper::isAssociative", "doc": "&quot;Method to determine if an array is an associative array.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\ArrayHelper", "fromLink": "Windwalker/Utilities/ArrayHelper.html", "link": "Windwalker/Utilities/ArrayHelper.html#method_group", "name": "Windwalker\\Utilities\\ArrayHelper::group", "doc": "&quot;Re-group an array to create a reverse lookup of an array of scalars, arrays or objects.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\ArrayHelper", "fromLink": "Windwalker/Utilities/ArrayHelper.html", "link": "Windwalker/Utilities/ArrayHelper.html#method_pivot", "name": "Windwalker\\Utilities\\ArrayHelper::pivot", "doc": "&quot;Pivot Array, separate by key.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\ArrayHelper", "fromLink": "Windwalker/Utilities/ArrayHelper.html", "link": "Windwalker/Utilities/ArrayHelper.html#method_sortObjects", "name": "Windwalker\\Utilities\\ArrayHelper::sortObjects", "doc": "&quot;Utility function to sort an array of objects on a given field&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\ArrayHelper", "fromLink": "Windwalker/Utilities/ArrayHelper.html", "link": "Windwalker/Utilities/ArrayHelper.html#method_arrayUnique", "name": "Windwalker\\Utilities\\ArrayHelper::arrayUnique", "doc": "&quot;Multidimensional array safe unique test&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\ArrayHelper", "fromLink": "Windwalker/Utilities/ArrayHelper.html", "link": "Windwalker/Utilities/ArrayHelper.html#method_arraySearch", "name": "Windwalker\\Utilities\\ArrayHelper::arraySearch", "doc": "&quot;An improved array_search that allows for partial matching\nof strings values in associative arrays.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\ArrayHelper", "fromLink": "Windwalker/Utilities/ArrayHelper.html", "link": "Windwalker/Utilities/ArrayHelper.html#method_merge", "name": "Windwalker\\Utilities\\ArrayHelper::merge", "doc": "&quot;array&lt;em&gt;merge&lt;\/em&gt;recursive does indeed merge arrays, but it converts values with duplicate\nkeys to arrays rather than overwriting the value in the first array with the duplicate\nvalue in the second array, as array&lt;em&gt;merge does. I.e., with array&lt;\/em&gt;merge_recursive,\nthis happens (documented behavior):&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\ArrayHelper", "fromLink": "Windwalker/Utilities/ArrayHelper.html", "link": "Windwalker/Utilities/ArrayHelper.html#method_getByPath", "name": "Windwalker\\Utilities\\ArrayHelper::getByPath", "doc": "&quot;Get data from array or object by path.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\ArrayHelper", "fromLink": "Windwalker/Utilities/ArrayHelper.html", "link": "Windwalker/Utilities/ArrayHelper.html#method_setByPath", "name": "Windwalker\\Utilities\\ArrayHelper::setByPath", "doc": "&quot;setByPath&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\ArrayHelper", "fromLink": "Windwalker/Utilities/ArrayHelper.html", "link": "Windwalker/Utilities/ArrayHelper.html#method_dump", "name": "Windwalker\\Utilities\\ArrayHelper::dump", "doc": "&quot;Recursive dump variables and limit by level.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\ArrayHelper", "fromLink": "Windwalker/Utilities/ArrayHelper.html", "link": "Windwalker/Utilities/ArrayHelper.html#method_flatten", "name": "Windwalker\\Utilities\\ArrayHelper::flatten", "doc": "&quot;Method to recursively convert data to one dimension array.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\ArrayHelper", "fromLink": "Windwalker/Utilities/ArrayHelper.html", "link": "Windwalker/Utilities/ArrayHelper.html#method_query", "name": "Windwalker\\Utilities\\ArrayHelper::query", "doc": "&quot;Query a two-dimensional array values to get second level array.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\ArrayHelper", "fromLink": "Windwalker/Utilities/ArrayHelper.html", "link": "Windwalker/Utilities/ArrayHelper.html#method_match", "name": "Windwalker\\Utilities\\ArrayHelper::match", "doc": "&quot;Check an array match our query.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\ArrayHelper", "fromLink": "Windwalker/Utilities/ArrayHelper.html", "link": "Windwalker/Utilities/ArrayHelper.html#method_mapKey", "name": "Windwalker\\Utilities\\ArrayHelper::mapKey", "doc": "&quot;Convert an Array or Object keys to new name by an array index.&quot;"},
            
            {"type": "Trait", "fromName": "Windwalker\\Utilities\\Classes", "fromLink": "Windwalker/Utilities/Classes.html", "link": "Windwalker/Utilities/Classes/MultiSingletonTrait.html", "name": "Windwalker\\Utilities\\Classes\\MultiSingletonTrait", "doc": "&quot;The MultiSingletonTrait class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Utilities\\Classes\\MultiSingletonTrait", "fromLink": "Windwalker/Utilities/Classes/MultiSingletonTrait.html", "link": "Windwalker/Utilities/Classes/MultiSingletonTrait.html#method_getInstance", "name": "Windwalker\\Utilities\\Classes\\MultiSingletonTrait::getInstance", "doc": "&quot;getInstance&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Utilities\\Classes", "fromLink": "Windwalker/Utilities/Classes.html", "link": "Windwalker/Utilities/Classes/TraitHelper.html", "name": "Windwalker\\Utilities\\Classes\\TraitHelper", "doc": "&quot;The TraitHelper class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Utilities\\Classes\\TraitHelper", "fromLink": "Windwalker/Utilities/Classes/TraitHelper.html", "link": "Windwalker/Utilities/Classes/TraitHelper.html#method_classUsesRecursive", "name": "Windwalker\\Utilities\\Classes\\TraitHelper::classUsesRecursive", "doc": "&quot;classUsesRecursive&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Utilities\\Iterator", "fromLink": "Windwalker/Utilities/Iterator.html", "link": "Windwalker/Utilities/Iterator/ArrayObject.html", "name": "Windwalker\\Utilities\\Iterator\\ArrayObject", "doc": "&quot;The ArrayObject class. Based on ZF2.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\ArrayObject", "fromLink": "Windwalker/Utilities/Iterator/ArrayObject.html", "link": "Windwalker/Utilities/Iterator/ArrayObject.html#method___construct", "name": "Windwalker\\Utilities\\Iterator\\ArrayObject::__construct", "doc": "&quot;Constructor&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\ArrayObject", "fromLink": "Windwalker/Utilities/Iterator/ArrayObject.html", "link": "Windwalker/Utilities/Iterator/ArrayObject.html#method___isset", "name": "Windwalker\\Utilities\\Iterator\\ArrayObject::__isset", "doc": "&quot;Returns whether the requested key exists&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\ArrayObject", "fromLink": "Windwalker/Utilities/Iterator/ArrayObject.html", "link": "Windwalker/Utilities/Iterator/ArrayObject.html#method___set", "name": "Windwalker\\Utilities\\Iterator\\ArrayObject::__set", "doc": "&quot;Sets the value at the specified key to value&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\ArrayObject", "fromLink": "Windwalker/Utilities/Iterator/ArrayObject.html", "link": "Windwalker/Utilities/Iterator/ArrayObject.html#method___unset", "name": "Windwalker\\Utilities\\Iterator\\ArrayObject::__unset", "doc": "&quot;Unsets the value at the specified key&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\ArrayObject", "fromLink": "Windwalker/Utilities/Iterator/ArrayObject.html", "link": "Windwalker/Utilities/Iterator/ArrayObject.html#method___get", "name": "Windwalker\\Utilities\\Iterator\\ArrayObject::__get", "doc": "&quot;Returns the value at the specified key by reference&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\ArrayObject", "fromLink": "Windwalker/Utilities/Iterator/ArrayObject.html", "link": "Windwalker/Utilities/Iterator/ArrayObject.html#method_append", "name": "Windwalker\\Utilities\\Iterator\\ArrayObject::append", "doc": "&quot;Appends the value&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\ArrayObject", "fromLink": "Windwalker/Utilities/Iterator/ArrayObject.html", "link": "Windwalker/Utilities/Iterator/ArrayObject.html#method_asort", "name": "Windwalker\\Utilities\\Iterator\\ArrayObject::asort", "doc": "&quot;Sort the entries by value&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\ArrayObject", "fromLink": "Windwalker/Utilities/Iterator/ArrayObject.html", "link": "Windwalker/Utilities/Iterator/ArrayObject.html#method_count", "name": "Windwalker\\Utilities\\Iterator\\ArrayObject::count", "doc": "&quot;Get the number of public properties in the ArrayObject&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\ArrayObject", "fromLink": "Windwalker/Utilities/Iterator/ArrayObject.html", "link": "Windwalker/Utilities/Iterator/ArrayObject.html#method_exchangeArray", "name": "Windwalker\\Utilities\\Iterator\\ArrayObject::exchangeArray", "doc": "&quot;Exchange the array for another one.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\ArrayObject", "fromLink": "Windwalker/Utilities/Iterator/ArrayObject.html", "link": "Windwalker/Utilities/Iterator/ArrayObject.html#method_getArrayCopy", "name": "Windwalker\\Utilities\\Iterator\\ArrayObject::getArrayCopy", "doc": "&quot;Creates a copy of the ArrayObject.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\ArrayObject", "fromLink": "Windwalker/Utilities/Iterator/ArrayObject.html", "link": "Windwalker/Utilities/Iterator/ArrayObject.html#method_getFlags", "name": "Windwalker\\Utilities\\Iterator\\ArrayObject::getFlags", "doc": "&quot;Gets the behavior flags.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\ArrayObject", "fromLink": "Windwalker/Utilities/Iterator/ArrayObject.html", "link": "Windwalker/Utilities/Iterator/ArrayObject.html#method_getIterator", "name": "Windwalker\\Utilities\\Iterator\\ArrayObject::getIterator", "doc": "&quot;Create a new iterator from an ArrayObject instance&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\ArrayObject", "fromLink": "Windwalker/Utilities/Iterator/ArrayObject.html", "link": "Windwalker/Utilities/Iterator/ArrayObject.html#method_getIteratorClass", "name": "Windwalker\\Utilities\\Iterator\\ArrayObject::getIteratorClass", "doc": "&quot;Gets the iterator classname for the ArrayObject.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\ArrayObject", "fromLink": "Windwalker/Utilities/Iterator/ArrayObject.html", "link": "Windwalker/Utilities/Iterator/ArrayObject.html#method_ksort", "name": "Windwalker\\Utilities\\Iterator\\ArrayObject::ksort", "doc": "&quot;Sort the entries by key&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\ArrayObject", "fromLink": "Windwalker/Utilities/Iterator/ArrayObject.html", "link": "Windwalker/Utilities/Iterator/ArrayObject.html#method_natcasesort", "name": "Windwalker\\Utilities\\Iterator\\ArrayObject::natcasesort", "doc": "&quot;Sort an array using a case insensitive \&quot;natural order\&quot; algorithm&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\ArrayObject", "fromLink": "Windwalker/Utilities/Iterator/ArrayObject.html", "link": "Windwalker/Utilities/Iterator/ArrayObject.html#method_natsort", "name": "Windwalker\\Utilities\\Iterator\\ArrayObject::natsort", "doc": "&quot;Sort entries using a \&quot;natural order\&quot; algorithm&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\ArrayObject", "fromLink": "Windwalker/Utilities/Iterator/ArrayObject.html", "link": "Windwalker/Utilities/Iterator/ArrayObject.html#method_offsetExists", "name": "Windwalker\\Utilities\\Iterator\\ArrayObject::offsetExists", "doc": "&quot;Returns whether the requested key exists&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\ArrayObject", "fromLink": "Windwalker/Utilities/Iterator/ArrayObject.html", "link": "Windwalker/Utilities/Iterator/ArrayObject.html#method_offsetGet", "name": "Windwalker\\Utilities\\Iterator\\ArrayObject::offsetGet", "doc": "&quot;Returns the value at the specified key&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\ArrayObject", "fromLink": "Windwalker/Utilities/Iterator/ArrayObject.html", "link": "Windwalker/Utilities/Iterator/ArrayObject.html#method_offsetSet", "name": "Windwalker\\Utilities\\Iterator\\ArrayObject::offsetSet", "doc": "&quot;Sets the value at the specified key to value&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\ArrayObject", "fromLink": "Windwalker/Utilities/Iterator/ArrayObject.html", "link": "Windwalker/Utilities/Iterator/ArrayObject.html#method_offsetUnset", "name": "Windwalker\\Utilities\\Iterator\\ArrayObject::offsetUnset", "doc": "&quot;Unsets the value at the specified key&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\ArrayObject", "fromLink": "Windwalker/Utilities/Iterator/ArrayObject.html", "link": "Windwalker/Utilities/Iterator/ArrayObject.html#method_serialize", "name": "Windwalker\\Utilities\\Iterator\\ArrayObject::serialize", "doc": "&quot;Serialize an ArrayObject&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\ArrayObject", "fromLink": "Windwalker/Utilities/Iterator/ArrayObject.html", "link": "Windwalker/Utilities/Iterator/ArrayObject.html#method_setFlags", "name": "Windwalker\\Utilities\\Iterator\\ArrayObject::setFlags", "doc": "&quot;Sets the behavior flags&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\ArrayObject", "fromLink": "Windwalker/Utilities/Iterator/ArrayObject.html", "link": "Windwalker/Utilities/Iterator/ArrayObject.html#method_setIteratorClass", "name": "Windwalker\\Utilities\\Iterator\\ArrayObject::setIteratorClass", "doc": "&quot;Sets the iterator classname for the ArrayObject&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\ArrayObject", "fromLink": "Windwalker/Utilities/Iterator/ArrayObject.html", "link": "Windwalker/Utilities/Iterator/ArrayObject.html#method_uasort", "name": "Windwalker\\Utilities\\Iterator\\ArrayObject::uasort", "doc": "&quot;Sort the entries with a user-defined comparison function and maintain key association&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\ArrayObject", "fromLink": "Windwalker/Utilities/Iterator/ArrayObject.html", "link": "Windwalker/Utilities/Iterator/ArrayObject.html#method_uksort", "name": "Windwalker\\Utilities\\Iterator\\ArrayObject::uksort", "doc": "&quot;Sort the entries by keys using a user-defined comparison function&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\ArrayObject", "fromLink": "Windwalker/Utilities/Iterator/ArrayObject.html", "link": "Windwalker/Utilities/Iterator/ArrayObject.html#method_unserialize", "name": "Windwalker\\Utilities\\Iterator\\ArrayObject::unserialize", "doc": "&quot;Unserialize an ArrayObject&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Utilities\\Iterator", "fromLink": "Windwalker/Utilities/Iterator.html", "link": "Windwalker/Utilities/Iterator/DualIterator.html", "name": "Windwalker\\Utilities\\Iterator\\DualIterator", "doc": "&quot;The DualIterator class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\DualIterator", "fromLink": "Windwalker/Utilities/Iterator/DualIterator.html", "link": "Windwalker/Utilities/Iterator/DualIterator.html#method___construct", "name": "Windwalker\\Utilities\\Iterator\\DualIterator::__construct", "doc": "&quot;construct iterator from two iterators&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\DualIterator", "fromLink": "Windwalker/Utilities/Iterator/DualIterator.html", "link": "Windwalker/Utilities/Iterator/DualIterator.html#method_getLHS", "name": "Windwalker\\Utilities\\Iterator\\DualIterator::getLHS", "doc": "&quot;Get lhs.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\DualIterator", "fromLink": "Windwalker/Utilities/Iterator/DualIterator.html", "link": "Windwalker/Utilities/Iterator/DualIterator.html#method_getRHS", "name": "Windwalker\\Utilities\\Iterator\\DualIterator::getRHS", "doc": "&quot;Get rhs.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\DualIterator", "fromLink": "Windwalker/Utilities/Iterator/DualIterator.html", "link": "Windwalker/Utilities/Iterator/DualIterator.html#method_setFlags", "name": "Windwalker\\Utilities\\Iterator\\DualIterator::setFlags", "doc": "&quot;Set flags.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\DualIterator", "fromLink": "Windwalker/Utilities/Iterator/DualIterator.html", "link": "Windwalker/Utilities/Iterator/DualIterator.html#method_getFlags", "name": "Windwalker\\Utilities\\Iterator\\DualIterator::getFlags", "doc": "&quot;Get flag.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\DualIterator", "fromLink": "Windwalker/Utilities/Iterator/DualIterator.html", "link": "Windwalker/Utilities/Iterator/DualIterator.html#method_rewind", "name": "Windwalker\\Utilities\\Iterator\\DualIterator::rewind", "doc": "&quot;Rewind both inner iterators&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\DualIterator", "fromLink": "Windwalker/Utilities/Iterator/DualIterator.html", "link": "Windwalker/Utilities/Iterator/DualIterator.html#method_valid", "name": "Windwalker\\Utilities\\Iterator\\DualIterator::valid", "doc": "&quot;Is valid.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\DualIterator", "fromLink": "Windwalker/Utilities/Iterator/DualIterator.html", "link": "Windwalker/Utilities/Iterator/DualIterator.html#method_current", "name": "Windwalker\\Utilities\\Iterator\\DualIterator::current", "doc": "&quot;Get current item.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\DualIterator", "fromLink": "Windwalker/Utilities/Iterator/DualIterator.html", "link": "Windwalker/Utilities/Iterator/DualIterator.html#method_key", "name": "Windwalker\\Utilities\\Iterator\\DualIterator::key", "doc": "&quot;Get current key.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\DualIterator", "fromLink": "Windwalker/Utilities/Iterator/DualIterator.html", "link": "Windwalker/Utilities/Iterator/DualIterator.html#method_next", "name": "Windwalker\\Utilities\\Iterator\\DualIterator::next", "doc": "&quot;Move both inner iterators forward&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\DualIterator", "fromLink": "Windwalker/Utilities/Iterator/DualIterator.html", "link": "Windwalker/Utilities/Iterator/DualIterator.html#method_areIdentical", "name": "Windwalker\\Utilities\\Iterator\\DualIterator::areIdentical", "doc": "&quot;Are Identical.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\DualIterator", "fromLink": "Windwalker/Utilities/Iterator/DualIterator.html", "link": "Windwalker/Utilities/Iterator/DualIterator.html#method_areEqual", "name": "Windwalker\\Utilities\\Iterator\\DualIterator::areEqual", "doc": "&quot;Are equal.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\DualIterator", "fromLink": "Windwalker/Utilities/Iterator/DualIterator.html", "link": "Windwalker/Utilities/Iterator/DualIterator.html#method_compareIterators", "name": "Windwalker\\Utilities\\Iterator\\DualIterator::compareIterators", "doc": "&quot;Compare two iterators.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Utilities\\Iterator", "fromLink": "Windwalker/Utilities/Iterator.html", "link": "Windwalker/Utilities/Iterator/RecursiveCompareDualIterator.html", "name": "Windwalker\\Utilities\\Iterator\\RecursiveCompareDualIterator", "doc": "&quot;The RecursiveCompareDualIterator class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\RecursiveCompareDualIterator", "fromLink": "Windwalker/Utilities/Iterator/RecursiveCompareDualIterator.html", "link": "Windwalker/Utilities/Iterator/RecursiveCompareDualIterator.html#method___construct", "name": "Windwalker\\Utilities\\Iterator\\RecursiveCompareDualIterator::__construct", "doc": "&quot;Construct from RecursiveDualIterator&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\RecursiveCompareDualIterator", "fromLink": "Windwalker/Utilities/Iterator/RecursiveCompareDualIterator.html", "link": "Windwalker/Utilities/Iterator/RecursiveCompareDualIterator.html#method_rewind", "name": "Windwalker\\Utilities\\Iterator\\RecursiveCompareDualIterator::rewind", "doc": "&quot;Rewind iteration and comparison process. Starting with $equal = true.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\RecursiveCompareDualIterator", "fromLink": "Windwalker/Utilities/Iterator/RecursiveCompareDualIterator.html", "link": "Windwalker/Utilities/Iterator/RecursiveCompareDualIterator.html#method_endChildren", "name": "Windwalker\\Utilities\\Iterator\\RecursiveCompareDualIterator::endChildren", "doc": "&quot;Calculate $equal&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\RecursiveCompareDualIterator", "fromLink": "Windwalker/Utilities/Iterator/RecursiveCompareDualIterator.html", "link": "Windwalker/Utilities/Iterator/RecursiveCompareDualIterator.html#method_areIdentical", "name": "Windwalker\\Utilities\\Iterator\\RecursiveCompareDualIterator::areIdentical", "doc": "&quot;Are Identical.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\RecursiveCompareDualIterator", "fromLink": "Windwalker/Utilities/Iterator/RecursiveCompareDualIterator.html", "link": "Windwalker/Utilities/Iterator/RecursiveCompareDualIterator.html#method_areEqual", "name": "Windwalker\\Utilities\\Iterator\\RecursiveCompareDualIterator::areEqual", "doc": "&quot;Are equal.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Utilities\\Iterator", "fromLink": "Windwalker/Utilities/Iterator.html", "link": "Windwalker/Utilities/Iterator/RecursiveDualIterator.html", "name": "Windwalker\\Utilities\\Iterator\\RecursiveDualIterator", "doc": "&quot;The RecursiveDualIterator class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\RecursiveDualIterator", "fromLink": "Windwalker/Utilities/Iterator/RecursiveDualIterator.html", "link": "Windwalker/Utilities/Iterator/RecursiveDualIterator.html#method___construct", "name": "Windwalker\\Utilities\\Iterator\\RecursiveDualIterator::__construct", "doc": "&quot;Construct from RecursiveDualIterator&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\RecursiveDualIterator", "fromLink": "Windwalker/Utilities/Iterator/RecursiveDualIterator.html", "link": "Windwalker/Utilities/Iterator/RecursiveDualIterator.html#method_rewind", "name": "Windwalker\\Utilities\\Iterator\\RecursiveDualIterator::rewind", "doc": "&quot;Rewind iteration and comparison process. Starting with $equal = true.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\RecursiveDualIterator", "fromLink": "Windwalker/Utilities/Iterator/RecursiveDualIterator.html", "link": "Windwalker/Utilities/Iterator/RecursiveDualIterator.html#method_endChildren", "name": "Windwalker\\Utilities\\Iterator\\RecursiveDualIterator::endChildren", "doc": "&quot;Calculate $equal&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\RecursiveDualIterator", "fromLink": "Windwalker/Utilities/Iterator/RecursiveDualIterator.html", "link": "Windwalker/Utilities/Iterator/RecursiveDualIterator.html#method_areIdentical", "name": "Windwalker\\Utilities\\Iterator\\RecursiveDualIterator::areIdentical", "doc": "&quot;Are Identical&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Iterator\\RecursiveDualIterator", "fromLink": "Windwalker/Utilities/Iterator/RecursiveDualIterator.html", "link": "Windwalker/Utilities/Iterator/RecursiveDualIterator.html#method_areEqual", "name": "Windwalker\\Utilities\\Iterator\\RecursiveDualIterator::areEqual", "doc": "&quot;Are equal.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Utilities\\Queue", "fromLink": "Windwalker/Utilities/Queue.html", "link": "Windwalker/Utilities/Queue/PriorityQueue.html", "name": "Windwalker\\Utilities\\Queue\\PriorityQueue", "doc": "&quot;The PriorityQueue class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Utilities\\Queue\\PriorityQueue", "fromLink": "Windwalker/Utilities/Queue/PriorityQueue.html", "link": "Windwalker/Utilities/Queue/PriorityQueue.html#method___construct", "name": "Windwalker\\Utilities\\Queue\\PriorityQueue::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Queue\\PriorityQueue", "fromLink": "Windwalker/Utilities/Queue/PriorityQueue.html", "link": "Windwalker/Utilities/Queue/PriorityQueue.html#method_bind", "name": "Windwalker\\Utilities\\Queue\\PriorityQueue::bind", "doc": "&quot;bind&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Queue\\PriorityQueue", "fromLink": "Windwalker/Utilities/Queue/PriorityQueue.html", "link": "Windwalker/Utilities/Queue/PriorityQueue.html#method_insertArray", "name": "Windwalker\\Utilities\\Queue\\PriorityQueue::insertArray", "doc": "&quot;register&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Queue\\PriorityQueue", "fromLink": "Windwalker/Utilities/Queue/PriorityQueue.html", "link": "Windwalker/Utilities/Queue/PriorityQueue.html#method_insert", "name": "Windwalker\\Utilities\\Queue\\PriorityQueue::insert", "doc": "&quot;Insert a value with a given priority&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Queue\\PriorityQueue", "fromLink": "Windwalker/Utilities/Queue/PriorityQueue.html", "link": "Windwalker/Utilities/Queue/PriorityQueue.html#method_toArray", "name": "Windwalker\\Utilities\\Queue\\PriorityQueue::toArray", "doc": "&quot;Serialize to an array&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Queue\\PriorityQueue", "fromLink": "Windwalker/Utilities/Queue/PriorityQueue.html", "link": "Windwalker/Utilities/Queue/PriorityQueue.html#method_serialize", "name": "Windwalker\\Utilities\\Queue\\PriorityQueue::serialize", "doc": "&quot;Serialize&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Queue\\PriorityQueue", "fromLink": "Windwalker/Utilities/Queue/PriorityQueue.html", "link": "Windwalker/Utilities/Queue/PriorityQueue.html#method_unserialize", "name": "Windwalker\\Utilities\\Queue\\PriorityQueue::unserialize", "doc": "&quot;Deserialize&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Queue\\PriorityQueue", "fromLink": "Windwalker/Utilities/Queue/PriorityQueue.html", "link": "Windwalker/Utilities/Queue/PriorityQueue.html#method_merge", "name": "Windwalker\\Utilities\\Queue\\PriorityQueue::merge", "doc": "&quot;merge&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Queue\\PriorityQueue", "fromLink": "Windwalker/Utilities/Queue/PriorityQueue.html", "link": "Windwalker/Utilities/Queue/PriorityQueue.html#method_compare", "name": "Windwalker\\Utilities\\Queue\\PriorityQueue::compare", "doc": "&quot;compare&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Queue\\PriorityQueue", "fromLink": "Windwalker/Utilities/Queue/PriorityQueue.html", "link": "Windwalker/Utilities/Queue/PriorityQueue.html#method_getSerial", "name": "Windwalker\\Utilities\\Queue\\PriorityQueue::getSerial", "doc": "&quot;Method to get property Serial&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Queue\\PriorityQueue", "fromLink": "Windwalker/Utilities/Queue/PriorityQueue.html", "link": "Windwalker/Utilities/Queue/PriorityQueue.html#method_setSerial", "name": "Windwalker\\Utilities\\Queue\\PriorityQueue::setSerial", "doc": "&quot;Method to set property serial&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Utilities\\Reflection", "fromLink": "Windwalker/Utilities/Reflection.html", "link": "Windwalker/Utilities/Reflection/ReflectionHelper.html", "name": "Windwalker\\Utilities\\Reflection\\ReflectionHelper", "doc": "&quot;Reflection&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Utilities\\Reflection\\ReflectionHelper", "fromLink": "Windwalker/Utilities/Reflection/ReflectionHelper.html", "link": "Windwalker/Utilities/Reflection/ReflectionHelper.html#method_get", "name": "Windwalker\\Utilities\\Reflection\\ReflectionHelper::get", "doc": "&quot;Get a new ReflectionClass.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Reflection\\ReflectionHelper", "fromLink": "Windwalker/Utilities/Reflection/ReflectionHelper.html", "link": "Windwalker/Utilities/Reflection/ReflectionHelper.html#method_getPath", "name": "Windwalker\\Utilities\\Reflection\\ReflectionHelper::getPath", "doc": "&quot;Get path from reflection.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Reflection\\ReflectionHelper", "fromLink": "Windwalker/Utilities/Reflection/ReflectionHelper.html", "link": "Windwalker/Utilities/Reflection/ReflectionHelper.html#method_getNamespaceBackwards", "name": "Windwalker\\Utilities\\Reflection\\ReflectionHelper::getNamespaceBackwards", "doc": "&quot;getPackageNamespace&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Utilities\\Reflection\\ReflectionHelper", "fromLink": "Windwalker/Utilities/Reflection/ReflectionHelper.html", "link": "Windwalker/Utilities/Reflection/ReflectionHelper.html#method___callStatic", "name": "Windwalker\\Utilities\\Reflection\\ReflectionHelper::__callStatic", "doc": "&quot;Call static magic method.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Validator", "fromLink": "Windwalker/Validator.html", "link": "Windwalker/Validator/AbstractValidator.html", "name": "Windwalker\\Validator\\AbstractValidator", "doc": "&quot;The AbstractValidator class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Validator\\AbstractValidator", "fromLink": "Windwalker/Validator/AbstractValidator.html", "link": "Windwalker/Validator/AbstractValidator.html#method_validate", "name": "Windwalker\\Validator\\AbstractValidator::validate", "doc": "&quot;Validate this value and set error message.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Validator\\AbstractValidator", "fromLink": "Windwalker/Validator/AbstractValidator.html", "link": "Windwalker/Validator/AbstractValidator.html#method_getError", "name": "Windwalker\\Validator\\AbstractValidator::getError", "doc": "&quot;Get error message.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Validator\\AbstractValidator", "fromLink": "Windwalker/Validator/AbstractValidator.html", "link": "Windwalker/Validator/AbstractValidator.html#method_setError", "name": "Windwalker\\Validator\\AbstractValidator::setError", "doc": "&quot;Method to set property error&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Validator\\AbstractValidator", "fromLink": "Windwalker/Validator/AbstractValidator.html", "link": "Windwalker/Validator/AbstractValidator.html#method_setMessage", "name": "Windwalker\\Validator\\AbstractValidator::setMessage", "doc": "&quot;Set error message.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Validator\\Rule", "fromLink": "Windwalker/Validator/Rule.html", "link": "Windwalker/Validator/Rule/AlnumValidator.html", "name": "Windwalker\\Validator\\Rule\\AlnumValidator", "doc": "&quot;The AlnumValidator class.&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Validator\\Rule", "fromLink": "Windwalker/Validator/Rule.html", "link": "Windwalker/Validator/Rule/BooleanValidator.html", "name": "Windwalker\\Validator\\Rule\\BooleanValidator", "doc": "&quot;The BooleanValidator class.&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Validator\\Rule", "fromLink": "Windwalker/Validator/Rule.html", "link": "Windwalker/Validator/Rule/ColorValidator.html", "name": "Windwalker\\Validator\\Rule\\ColorValidator", "doc": "&quot;The ColorValidator class.&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Validator\\Rule", "fromLink": "Windwalker/Validator/Rule.html", "link": "Windwalker/Validator/Rule/CreditcardValidator.html", "name": "Windwalker\\Validator\\Rule\\CreditcardValidator", "doc": "&quot;The UrlValidator class.&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Validator\\Rule", "fromLink": "Windwalker/Validator/Rule.html", "link": "Windwalker/Validator/Rule/EmailValidator.html", "name": "Windwalker\\Validator\\Rule\\EmailValidator", "doc": "&quot;The EmailValidator class.&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Validator\\Rule", "fromLink": "Windwalker/Validator/Rule.html", "link": "Windwalker/Validator/Rule/EqualsValidator.html", "name": "Windwalker\\Validator\\Rule\\EqualsValidator", "doc": "&quot;The EqualsValidator class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Validator\\Rule\\EqualsValidator", "fromLink": "Windwalker/Validator/Rule/EqualsValidator.html", "link": "Windwalker/Validator/Rule/EqualsValidator.html#method___construct", "name": "Windwalker\\Validator\\Rule\\EqualsValidator::__construct", "doc": "&quot;Class init.&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Validator\\Rule", "fromLink": "Windwalker/Validator/Rule.html", "link": "Windwalker/Validator/Rule/IpValidator.html", "name": "Windwalker\\Validator\\Rule\\IpValidator", "doc": "&quot;The IpValidator class.&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Validator\\Rule", "fromLink": "Windwalker/Validator/Rule.html", "link": "Windwalker/Validator/Rule/NoneValidator.html", "name": "Windwalker\\Validator\\Rule\\NoneValidator", "doc": "&quot;The NoneValidator class.&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Validator\\Rule", "fromLink": "Windwalker/Validator/Rule.html", "link": "Windwalker/Validator/Rule/PhoneValidator.html", "name": "Windwalker\\Validator\\Rule\\PhoneValidator", "doc": "&quot;The PhoneValidator class.&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Validator\\Rule", "fromLink": "Windwalker/Validator/Rule.html", "link": "Windwalker/Validator/Rule/RegexValidator.html", "name": "Windwalker\\Validator\\Rule\\RegexValidator", "doc": "&quot;The RegexValidator class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Validator\\Rule\\RegexValidator", "fromLink": "Windwalker/Validator/Rule/RegexValidator.html", "link": "Windwalker/Validator/Rule/RegexValidator.html#method___construct", "name": "Windwalker\\Validator\\Rule\\RegexValidator::__construct", "doc": "&quot;Class init.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Validator\\Rule\\RegexValidator", "fromLink": "Windwalker/Validator/Rule/RegexValidator.html", "link": "Windwalker/Validator/Rule/RegexValidator.html#method_getRegex", "name": "Windwalker\\Validator\\Rule\\RegexValidator::getRegex", "doc": "&quot;Method to get property Regex&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Validator\\Rule\\RegexValidator", "fromLink": "Windwalker/Validator/Rule/RegexValidator.html", "link": "Windwalker/Validator/Rule/RegexValidator.html#method_setRegex", "name": "Windwalker\\Validator\\Rule\\RegexValidator::setRegex", "doc": "&quot;Method to set property regex&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Validator\\Rule\\RegexValidator", "fromLink": "Windwalker/Validator/Rule/RegexValidator.html", "link": "Windwalker/Validator/Rule/RegexValidator.html#method_getModifiers", "name": "Windwalker\\Validator\\Rule\\RegexValidator::getModifiers", "doc": "&quot;Method to get property Modifiers&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Validator\\Rule\\RegexValidator", "fromLink": "Windwalker/Validator/Rule/RegexValidator.html", "link": "Windwalker/Validator/Rule/RegexValidator.html#method_setModifiers", "name": "Windwalker\\Validator\\Rule\\RegexValidator::setModifiers", "doc": "&quot;Method to set property modifiers&quot;"},
            
            {"type": "Class", "fromName": "Windwalker\\Validator\\Rule", "fromLink": "Windwalker/Validator/Rule.html", "link": "Windwalker/Validator/Rule/UrlValidator.html", "name": "Windwalker\\Validator\\Rule\\UrlValidator", "doc": "&quot;The UrlValidator class.&quot;"},
                    
            {"type": "Class", "fromName": "Windwalker\\Validator", "fromLink": "Windwalker/Validator.html", "link": "Windwalker/Validator/ValidatorInterface.html", "name": "Windwalker\\Validator\\ValidatorInterface", "doc": "&quot;The ValidatorInterface class.&quot;"},
                                                        {"type": "Method", "fromName": "Windwalker\\Validator\\ValidatorInterface", "fromLink": "Windwalker/Validator/ValidatorInterface.html", "link": "Windwalker/Validator/ValidatorInterface.html#method_validate", "name": "Windwalker\\Validator\\ValidatorInterface::validate", "doc": "&quot;Test this value.&quot;"},
                    {"type": "Method", "fromName": "Windwalker\\Validator\\ValidatorInterface", "fromLink": "Windwalker/Validator/ValidatorInterface.html", "link": "Windwalker/Validator/ValidatorInterface.html#method_getError", "name": "Windwalker\\Validator\\ValidatorInterface::getError", "doc": "&quot;Get error message.&quot;"},
            
            
                                        // Fix trailing commas in the index
        {}
    ];

    /** Tokenizes strings by namespaces and functions */
    function tokenizer(term) {
        if (!term) {
            return [];
        }

        var tokens = [term];
        var meth = term.indexOf('::');

        // Split tokens into methods if "::" is found.
        if (meth > -1) {
            tokens.push(term.substr(meth + 2));
            term = term.substr(0, meth - 2);
        }

        // Split by namespace or fake namespace.
        if (term.indexOf('\\') > -1) {
            tokens = tokens.concat(term.split('\\'));
        } else if (term.indexOf('_') > 0) {
            tokens = tokens.concat(term.split('_'));
        }

        // Merge in splitting the string by case and return
        tokens = tokens.concat(term.match(/(([A-Z]?[^A-Z]*)|([a-z]?[^a-z]*))/g).slice(0,-1));

        return tokens;
    };

    root.Sami = {
        /**
         * Cleans the provided term. If no term is provided, then one is
         * grabbed from the query string "search" parameter.
         */
        cleanSearchTerm: function(term) {
            // Grab from the query string
            if (typeof term === 'undefined') {
                var name = 'search';
                var regex = new RegExp("[\\?&]" + name + "=([^&#]*)");
                var results = regex.exec(location.search);
                if (results === null) {
                    return null;
                }
                term = decodeURIComponent(results[1].replace(/\+/g, " "));
            }

            return term.replace(/<(?:.|\n)*?>/gm, '');
        },

        /** Searches through the index for a given term */
        search: function(term) {
            // Create a new search index if needed
            if (!bhIndex) {
                bhIndex = new Bloodhound({
                    limit: 500,
                    local: searchIndex,
                    datumTokenizer: function (d) {
                        return tokenizer(d.name);
                    },
                    queryTokenizer: Bloodhound.tokenizers.whitespace
                });
                bhIndex.initialize();
            }

            results = [];
            bhIndex.get(term, function(matches) {
                results = matches;
            });

            if (!rootPath) {
                return results;
            }

            // Fix the element links based on the current page depth.
            return $.map(results, function(ele) {
                if (ele.link.indexOf('..') > -1) {
                    return ele;
                }
                ele.link = rootPath + ele.link;
                if (ele.fromLink) {
                    ele.fromLink = rootPath + ele.fromLink;
                }
                return ele;
            });
        },

        /** Get a search class for a specific type */
        getSearchClass: function(type) {
            return searchTypeClasses[type] || searchTypeClasses['_'];
        },

        /** Add the left-nav tree to the site */
        injectApiTree: function(ele) {
            ele.html(treeHtml);
        }
    };

    $(function() {
        // Modify the HTML to work correctly based on the current depth
        rootPath = $('body').attr('data-root-path');
        treeHtml = treeHtml.replace(/href="/g, 'href="' + rootPath);
        Sami.injectApiTree($('#api-tree'));
    });

    return root.Sami;
})(window);

$(function() {

    // Enable the version switcher
    $('#version-switcher').change(function() {
        window.location = $(this).val()
    });

    
        // Toggle left-nav divs on click
        $('#api-tree .hd span').click(function() {
            $(this).parent().parent().toggleClass('opened');
        });

        // Expand the parent namespaces of the current page.
        var expected = $('body').attr('data-name');

        if (expected) {
            // Open the currently selected node and its parents.
            var container = $('#api-tree');
            var node = $('#api-tree li[data-name="' + expected + '"]');
            // Node might not be found when simulating namespaces
            if (node.length > 0) {
                node.addClass('active').addClass('opened');
                node.parents('li').addClass('opened');
                var scrollPos = node.offset().top - container.offset().top + container.scrollTop();
                // Position the item nearer to the top of the screen.
                scrollPos -= 200;
                container.scrollTop(scrollPos);
            }
        }

    
    
        var form = $('#search-form .typeahead');
        form.typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        }, {
            name: 'search',
            displayKey: 'name',
            source: function (q, cb) {
                cb(Sami.search(q));
            }
        });

        // The selection is direct-linked when the user selects a suggestion.
        form.on('typeahead:selected', function(e, suggestion) {
            window.location = suggestion.link;
        });

        // The form is submitted when the user hits enter.
        form.keypress(function (e) {
            if (e.which == 13) {
                $('#search-form').submit();
                return true;
            }
        });

    
});


